[{"/Users/inspireadmin/Documents/GitHub/Project_2/src/index.js":"1","/Users/inspireadmin/Documents/GitHub/Project_2/src/App.js":"2","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Commodity.js":"3","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Forex.js":"4","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Crypto.js":"5","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenListApiData.js":"6","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenList.js":"7","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/AggregateInput.js":"8","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/CommodityList.js":"9","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/ForexList.js":"10","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/DataTicker.js":"11","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/WatchList.js":"12","/Users/inspireadmin/Documents/GitHub/Project_4/src/index.js":"13","/Users/inspireadmin/Documents/GitHub/Project_4/src/App.js":"14","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Landing.js":"15","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Home.js":"16","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/DataTicker.js":"17","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/AggregateInput.js":"18","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/TokenList.js":"19","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/Crypto.js":"20","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/TokenListApiData.js":"21","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Tracking.js":"22","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/User.js":"23","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/ResponsiveAppBar.js":"24","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/Table.js":"25","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/unused/Forex.js":"26","/Users/inspireadmin/Documents/GitHub/Project_4/src/utils/coingeckoAPICalls.js":"27"},{"size":142,"mtime":1616592305000,"results":"28","hashOfConfig":"29"},{"size":463,"mtime":1648198519549,"results":"30","hashOfConfig":"29"},{"size":2076,"mtime":1648198519550,"results":"31","hashOfConfig":"29"},{"size":11290,"mtime":1648198519552,"results":"32","hashOfConfig":"29"},{"size":1663,"mtime":1648198519551,"results":"33","hashOfConfig":"29"},{"size":845502,"mtime":1648198519558,"results":"34","hashOfConfig":"29"},{"size":1355,"mtime":1648198519553,"results":"35","hashOfConfig":"29"},{"size":2226,"mtime":1648198519550,"results":"36","hashOfConfig":"29"},{"size":238,"mtime":1648007118042,"results":"37","hashOfConfig":"29"},{"size":7155,"mtime":1648025038708,"results":"38","hashOfConfig":"29"},{"size":1904,"mtime":1648198519552,"results":"39","hashOfConfig":"29"},{"size":263,"mtime":1648198519559,"results":"40","hashOfConfig":"29"},{"size":142,"mtime":1616592305000,"results":"41","hashOfConfig":"42"},{"size":755,"mtime":1650952781293,"results":"43","hashOfConfig":"42"},{"size":111,"mtime":1650943826155,"results":"44","hashOfConfig":"42"},{"size":756,"mtime":1650972307451,"results":"45","hashOfConfig":"42"},{"size":1904,"mtime":1648198519552,"results":"46","hashOfConfig":"42"},{"size":2593,"mtime":1650971894961,"results":"47","hashOfConfig":"42"},{"size":1355,"mtime":1648198519553,"results":"48","hashOfConfig":"42"},{"size":1663,"mtime":1648198519551,"results":"49","hashOfConfig":"42"},{"size":845502,"mtime":1648198519558,"results":"50","hashOfConfig":"42"},{"size":114,"mtime":1650942122177,"results":"51","hashOfConfig":"42"},{"size":102,"mtime":1650942127776,"results":"52","hashOfConfig":"42"},{"size":7379,"mtime":1650984895690,"results":"53","hashOfConfig":"42"},{"size":6881,"mtime":1650985642719,"results":"54","hashOfConfig":"42"},{"size":11290,"mtime":1648198519552,"results":"55","hashOfConfig":"42"},{"size":564,"mtime":1650976216886,"results":"56","hashOfConfig":"42"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1as9eb2",{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"9317a4",{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"101"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"97"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"101"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"97"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"97"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/inspireadmin/Documents/GitHub/Project_2/src/index.js",[],[],["149","150"],"/Users/inspireadmin/Documents/GitHub/Project_2/src/App.js",["151"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Commodity.js",["152","153","154","155"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Forex.js",["156","157","158","159","160","161","162","163","164","165"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Crypto.js",["166","167","168","169","170"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenListApiData.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenList.js",["171","172","173","174"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/AggregateInput.js",["175","176","177","178","179","180","181","182"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/CommodityList.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/ForexList.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/DataTicker.js",["183"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/WatchList.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/index.js",[],[],["184","185"],"/Users/inspireadmin/Documents/GitHub/Project_4/src/App.js",[],[],["186","187"],"/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Landing.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Home.js",["188","189","190","191","192"],[],"import React, { useEffect } from \"react\";\nimport DataTicker from \"../component/DataTicker\";\nimport { AppBar, Container, Toolbar, Typography } from \"@mui/material\";\n// import WatchList from \"./component/WatchList\";\n// import { useNavigate } from \"react-router-dom\";\nimport ResponsiveAppBar from \"../component/ResponsiveAppBar\";\nimport Table from \"../component/Table\";\n\nconst Home = () => {\n    return (\n        <div>\n            <ResponsiveAppBar />\n            <DataTicker />\n            <br />\n            <br />\n            <div className=\"container\">\n                <Table />\n            </div>\n            <br />\n            <br />\n            <br />\n            <br />\n            {/* <WatchList /> */}\n        </div>\n    );\n};\n\nexport default Home;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/DataTicker.js",["193"],[],"import React, { useState, useEffect, Component } from \"react\";\nimport Ticker, { FinancialTicker, NewsTicker } from \"nice-react-ticker\";\n\nconst DataTicker = () => {\n  const [cryptoData, setCryptoData] = useState([]);\n  const [newsData, setNewsData] = useState(\"\");\n\n  const cryptoApiTicker = \"https://api.coingecko.com/api/v3/exchanges/binance\";\n  const financialNewsTicker =\n    \"https://api.marketaux.com/v1/news/all?symbols=TSLA,GME,AMC&filter_entities=true&language=en&api_token=WMIGwTBG1aEbYNV6vYbrBbu8TXB4R0mAXH1Zu5tU\";\n\n  useEffect(() => {\n    fetchFinancialNewsAPI();\n    fetchCryptoAPI();\n    setInterval(() => {\n      fetchCryptoAPI();\n    }, 10000);\n  }, []);\n\n  const fetchCryptoAPI = async () => {\n    const res = await fetch(cryptoApiTicker);\n    const rawData = await res.json();\n    let sevenData = rawData.tickers;\n    const firstSeven = sevenData.filter((element, index) => index < 9);\n    const filteredData = firstSeven.map((element, index) => {\n      return (\n        <FinancialTicker\n          id={index}\n          change={true}\n          symbol={element.base}\n          lastPrice={element.converted_last.usd}\n          currentPrice={element.last}\n        />\n      );\n    });\n    setCryptoData(filteredData);\n  };\n\n  const fetchFinancialNewsAPI = async () => {\n    const res = await fetch(financialNewsTicker);\n    const rawData = await res.json();\n    const financialMappedData = rawData.data.map((element, index) => {\n      return (\n        <NewsTicker\n          id={index}\n          icon={element.image_url}\n          title={element.title}\n          url={element.url}\n        />\n      );\n    });\n    setNewsData(financialMappedData);\n  };\n\n  return (\n    <div>\n      <Ticker className=\"tickerItemFinancial\">{cryptoData}</Ticker>\n      <div className=\"newsticker\">\n        <Ticker isNewsTicker={true}>{newsData}</Ticker>\n      </div>\n    </div>\n  );\n};\n\nexport default DataTicker;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/AggregateInput.js",["194","195","196","197","198","199","200","201"],[],"import React, { useState } from \"react\";\nimport commodityList from \"./CommodityList\";\nimport forexList from \"./ForexList\";\nimport { DropdownList } from \"react-widgets/cjs\";\nimport TokenList from \"./TokenList\";\nimport Crypto from \"./Crypto\";\nimport Forex from \"./unused/Forex\";\nimport Commodity from \"./Commodity\";\n\nconst AggregateInput = (props) => {\n    const forexNameArray = [];\n    const forexName = forexList.map((chicken) => {\n        return forexNameArray.push(chicken.name);\n    });\n\n    const [id, setId] = useState([]);\n    const [aggregatedSearch, setAggregatedSearch] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [forexState, setForexState] = useState(false);\n    const [cryptoState, setCryptoState] = useState(false);\n    const [input, setInput] = useState(\"\");\n\n    const aggregatedArray = [];\n\n    const mergeForex = forexNameArray.map((chicken) => {\n        return aggregatedArray.push(chicken);\n    });\n\n    const mergeCrypto = id.map((chicken) => {\n        return aggregatedArray.push(chicken);\n    });\n\n    const mergeCommodity = commodityList.map((chicken) => {\n        return aggregatedArray.push(chicken);\n    });\n\n    const handleSearchAggregate = (event) => {\n        const searchWord = event;\n\n        if (commodityList.indexOf(searchWord) !== -1) {\n            setContent(<Commodity commoditySearchWord={searchWord} />);\n        } else if (\n            forexList.find((element) => element.name === searchWord) !==\n            undefined\n        ) {\n            setContent(\n                <Forex\n                    forexSearchWord={searchWord}\n                    forexState={forexState}\n                    setForexState={setForexState}\n                />\n            );\n        } else {\n            setContent(\n                <Crypto\n                    searchWord={searchWord}\n                    cryptoState={cryptoState}\n                    setCryptoState={setCryptoState}\n                />\n            );\n        }\n    };\n\n    return (\n        <div>\n            <div className=\"int-container\">\n                <div className=\"holder\">\n                    <br />\n                    <h2 className=\"header\">QUERY YOUR MOONSHOT</h2>\n                    <br />\n                    <DropdownList\n                        data={aggregatedArray}\n                        onChange={handleSearchAggregate}\n                    />\n                    <br />\n                    <TokenList id={id} setId={setId} />\n                    {content}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AggregateInput;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/TokenList.js",["202","203","204","205"],[],"import React, { useEffect, useState } from \"react\";\nimport Bottleneck from \"bottleneck\";\n\nconst TokenList = (props) => {\n  const [data, setData] = useState([]);\n  const [type, setType] = useState([]);\n\n  const tickerData = \"https://api.coingecko.com/api/v3/exchanges/binance\";\n\n  const limiter = new Bottleneck({\n    reservoir: 100, // initial value\n    reservoirRefreshAmount: 100,\n    reservoirRefreshInterval: 60 * 500,\n\n    // also use maxConcurrent and/or minTime for safety\n    maxConcurrent: 1,\n    minTime: 333, // pick a value that makes sense for your use case\n  });\n\n  const makeApiCall = async () => {\n    const res = await fetch(tickerData);\n    const rawData = await res.json();\n    setData(rawData.tickers);\n    const filteredData = rawData.tickers.map((duck) => {\n      return {\n        id: duck.base,\n        price: duck.last,\n      };\n    });\n\n    setType(filteredData);\n    const emptyArray = [];\n    const getId = filteredData.map((chicken) => {\n      return emptyArray.push(chicken.id);\n    });\n\n    props.setId(emptyArray);\n  };\n\n  const throttledApiCall = limiter.wrap(makeApiCall);\n\n  useEffect(() => {\n    throttledApiCall();\n    makeApiCall();\n  }, []);\n\n  const cryptoIdArray = [];\n  const displayId = type.map((chicken) => {\n    return cryptoIdArray.push(chicken.id);\n  });\n\n  return <div></div>;\n};\n\nexport default TokenList;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/Crypto.js",["206","207","208","209","210"],[],"import React, { useState, useEffect } from \"react\";\n\nimport tokenList from \"./TokenListApiData\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\n// import AggregateInput from \"./AggregateInput\";\n\nconst Crypto = (props) => {\n  const [filterData, setFilterData] = useState(\"\");\n  const [tokenPrice, setTokenPrice] = useState([]);\n  const [extractedData, setExtractedData] = useState(\"\");\n\n  const cryptoAPIQuery = `https://api.coingecko.com/api/v3/simple/price?ids=${filterData}&vs_currencies=USD`;\n\n  useEffect(() => {\n    getResults();\n  }, [props.cryptoState]);\n\n  const getResults = () => {\n    const searchWord = props.searchWord;\n    console.log(searchWord);\n    const newFilter = Object.keys(tokenList).reduce((result, key) => {\n      if (tokenList[key].name.match(searchWord)) {\n        result = tokenList[key].id;\n      }\n\n      return result;\n    }, \"\");\n    setFilterData(newFilter);\n    console.log(newFilter);\n  };\n\n  const makeApiCall = async () => {\n    const res = await fetch(cryptoAPIQuery);\n    const rawData = await res.json();\n\n    setTokenPrice(rawData);\n    console.log(rawData);\n\n    const tokenPriceArray = [rawData];\n    const obj1 = tokenPriceArray[0];\n    console.log(obj1);\n\n    const obj2 = obj1[Object.keys(obj1)[0]];\n    console.log(obj2);\n\n    const value = obj2[Object.keys(obj2)[0]];\n    console.log(value);\n    setExtractedData(value);\n  };\n\n  return (\n    <div>\n      <br />\n      <Button onClick={makeApiCall} size=\"lg\">\n        Submit\n      </Button>\n      <br />\n      <br />\n      <br />\n      <div className=\"data\">Token price : ${extractedData}</div>\n      <br />\n    </div>\n  );\n};\n\nexport default Crypto;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/TokenListApiData.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Tracking.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/User.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/component/ResponsiveAppBar.js",["211"],[],"import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useState } from \"react\";\n\nconst pages = [\"Watchlist\", \"Portfolio\"];\nconst settings = [\"Profile\", \"Preferences\", \"Logout\"];\n\nconst ResponsiveAppBar = () => {\n    const [loggedIn, setLoggedIn] = useState(\"false\");\n\n    const [anchorElNav, setAnchorElNav] = React.useState(null);\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n    const handleOpenNavMenu = (event) => {\n        setAnchorElNav(event.currentTarget);\n    };\n    const handleOpenUserMenu = (event) => {\n        setAnchorElUser(event.currentTarget);\n    };\n\n    const handleCloseNavMenu = () => {\n        setAnchorElNav(null);\n    };\n\n    const handleCloseUserMenu = () => {\n        setAnchorElUser(null);\n    };\n\n    return (\n        <AppBar position=\"static\" sx={{ bgcolor: \"#16181f\" }}>\n            <Container maxWidth=\"xl\">\n                <Toolbar disableGutters>\n                    <Typography\n                        variant=\"h6\"\n                        noWrap\n                        component=\"div\"\n                        sx={{ mr: 2, display: { xs: \"none\", md: \"flex\" } }}\n                    >\n                        LOGO\n                    </Typography>\n\n                    <Box\n                        sx={{\n                            flexGrow: 1,\n                            display: { xs: \"flex\", md: \"none\" },\n                        }}\n                    >\n                        <IconButton\n                            size=\"large\"\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            onClick={handleOpenNavMenu}\n                            color=\"inherit\"\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Menu\n                            id=\"menu-appbar\"\n                            anchorEl={anchorElNav}\n                            anchorOrigin={{\n                                vertical: \"bottom\",\n                                horizontal: \"left\",\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: \"top\",\n                                horizontal: \"left\",\n                            }}\n                            open={Boolean(anchorElNav)}\n                            onClose={handleCloseNavMenu}\n                            sx={{\n                                display: { xs: \"block\", md: \"none\" },\n                            }}\n                        >\n                            {pages.map((page) => (\n                                <MenuItem\n                                    key={page}\n                                    onClick={handleCloseNavMenu}\n                                >\n                                    <Typography textAlign=\"center\">\n                                        {page}\n                                    </Typography>\n                                </MenuItem>\n                            ))}\n                        </Menu>\n                    </Box>\n                    <Typography\n                        variant=\"h6\"\n                        noWrap\n                        component=\"div\"\n                        sx={{\n                            flexGrow: 1,\n                            display: { xs: \"flex\", md: \"none\" },\n                        }}\n                    >\n                        LOGO\n                    </Typography>\n                    <Box\n                        sx={{\n                            flexGrow: 1,\n                            display: { xs: \"none\", md: \"flex\" },\n                        }}\n                    >\n                        {pages.map((page) => (\n                            <Button\n                                key={page}\n                                onClick={handleCloseNavMenu}\n                                sx={{ my: 2, color: \"white\", display: \"block\" }}\n                            >\n                                {page}\n                            </Button>\n                        ))}\n                    </Box>\n\n                    {loggedIn === \"true\" ? (\n                        <div>\n                            <Box sx={{ flexGrow: 0 }}>\n                                <Tooltip title=\"Open settings\">\n                                    <IconButton\n                                        onClick={handleOpenUserMenu}\n                                        sx={{ p: 0 }}\n                                    >\n                                        <Avatar\n                                            alt=\"Remy Sharp\"\n                                            src=\"/static/images/avatar/2.jpg\"\n                                        />\n                                    </IconButton>\n                                </Tooltip>\n                                <Menu\n                                    sx={{ mt: \"45px\" }}\n                                    id=\"menu-appbar\"\n                                    anchorEl={anchorElUser}\n                                    anchorOrigin={{\n                                        vertical: \"top\",\n                                        horizontal: \"right\",\n                                    }}\n                                    keepMounted\n                                    transformOrigin={{\n                                        vertical: \"top\",\n                                        horizontal: \"right\",\n                                    }}\n                                    open={Boolean(anchorElUser)}\n                                    onClose={handleCloseUserMenu}\n                                >\n                                    {settings.map((setting) => (\n                                        <MenuItem\n                                            key={setting}\n                                            onClick={handleCloseUserMenu}\n                                        >\n                                            <Typography textAlign=\"center\">\n                                                {setting}\n                                            </Typography>\n                                        </MenuItem>\n                                    ))}\n                                </Menu>\n                            </Box>\n                        </div>\n                    ) : (\n                        <div>\n                            <Button variant=\"contained\"> Log In </Button>\n                            <Button variant=\"contained\"> Sign Up </Button>\n                        </div>\n                    )}\n                </Toolbar>\n            </Container>\n        </AppBar>\n    );\n};\nexport default ResponsiveAppBar;\n",["212","213"],"/Users/inspireadmin/Documents/GitHub/Project_4/src/component/Table.js",["214"],[],"import axios from \"axios\";\nimport React from \"react\";\nimport { tokenList } from \"../utils/coingeckoAPICalls\";\nimport { useState, useEffect } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport \"../fonts.css\";\nimport { Typography } from \"@mui/material\";\nimport { Button } from \"@mui/material\";\n\nconst TableData = () => {\n    const [tokens, setTokens] = useState([]);\n    // const [Pending, setPending] = useState();\n\n    const getData = async () => {\n        const callForTokenList = await axios.get(tokenList());\n\n        setTokens(callForTokenList.data);\n\n        console.log(callForTokenList);\n    };\n\n    useEffect(() => {\n        getData();\n    }, []);\n    return (\n        <div>\n            {/* {JSON.stringify(tokens)} */}\n            <div className=\"int-container\">\n                <div className=\"holder\">\n                    <br />\n                    {/* <h2 className=\"header\">\n                        Cryptocurrency Tokens by Market Cap\n                    </h2> */}\n                    <br />\n                    <TableContainer component={Paper}>\n                        <Table sx={{ minWidth: 350 }} aria-label=\"simple table\">\n                            <Typography\n                                variant=\"h4\"\n                                style={{ margin: 18, fontFamily: \"Roboto\" }}\n                            ></Typography>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell></TableCell>\n                                    <TableCell\n                                        style={{\n                                            color: \"black\",\n                                            fontWeight: \"700\",\n                                            variant: \"h2\",\n                                            margin: 30,\n                                            fontFamily: \"Roboto\",\n                                        }}\n                                    >\n                                        Token\n                                    </TableCell>\n                                    <TableCell\n                                        align=\"right\"\n                                        style={{\n                                            color: \"black\",\n                                            fontWeight: \"700\",\n                                            variant: \"h2\",\n                                            margin: 30,\n                                            fontFamily: \"Roboto\",\n                                        }}\n                                    >\n                                        Price\n                                    </TableCell>\n                                    <TableCell\n                                        align=\"right\"\n                                        style={{\n                                            color: \"black\",\n                                            fontWeight: \"700\",\n                                            variant: \"h2\",\n                                            margin: 30,\n                                            fontFamily: \"Roboto\",\n                                        }}\n                                    >\n                                        Market Cap\n                                    </TableCell>\n                                    <TableCell\n                                        align=\"right\"\n                                        style={{\n                                            color: \"black\",\n                                            fontWeight: \"700\",\n                                            variant: \"h2\",\n                                            margin: 30,\n                                            fontFamily: \"Roboto\",\n                                        }}\n                                    >\n                                        % Change\n                                    </TableCell>\n                                    <TableCell></TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {tokens.map((token) => (\n                                    <TableRow\n                                        key={token.name}\n                                        sx={{\n                                            \"&:last-child td, &:last-child th\":\n                                                {\n                                                    border: 0,\n                                                },\n                                        }}\n                                    >\n                                        <TableCell align=\"right\">\n                                            {<img src=\"token.image\" alt=\"\" />}\n                                        </TableCell>\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            {token.name}\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            {`$ ${token.current_price}`}\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            {`$ ${token.market_cap}`}\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            {\n                                                token.market_cap_change_percentage_24h\n                                            }\n                                        </TableCell>\n                                        {loggedIn === \"true\" ? (\n                                            <div></div>\n                                        ) : (\n                                            <TableCell align=\"right\">\n                                                <Button variant=\"contained\">\n                                                    Add to watchlist\n                                                </Button>\n                                            </TableCell>\n                                        )}\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TableData;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/unused/Forex.js",["215","216","217","218","219","220","221","222","223","224"],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/utils/coingeckoAPICalls.js",[],[],{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":4,"column":8,"nodeType":"231","messageId":"232","endLine":4,"endColumn":17},{"ruleId":"229","severity":1,"message":"233","line":1,"column":27,"nodeType":"231","messageId":"232","endLine":1,"endColumn":36},{"ruleId":"229","severity":1,"message":"234","line":2,"column":18,"nodeType":"231","messageId":"232","endLine":2,"endColumn":27},{"ruleId":"229","severity":1,"message":"235","line":2,"column":29,"nodeType":"231","messageId":"232","endLine":2,"endColumn":32},{"ruleId":"229","severity":1,"message":"236","line":6,"column":7,"nodeType":"231","messageId":"232","endLine":6,"endColumn":20},{"ruleId":"229","severity":1,"message":"237","line":2,"column":24,"nodeType":"231","messageId":"232","endLine":2,"endColumn":44},{"ruleId":"229","severity":1,"message":"234","line":3,"column":18,"nodeType":"231","messageId":"232","endLine":3,"endColumn":27},{"ruleId":"229","severity":1,"message":"235","line":3,"column":29,"nodeType":"231","messageId":"232","endLine":3,"endColumn":32},{"ruleId":"229","severity":1,"message":"238","line":3,"column":34,"nodeType":"231","messageId":"232","endLine":3,"endColumn":37},{"ruleId":"229","severity":1,"message":"239","line":182,"column":10,"nodeType":"231","messageId":"232","endLine":182,"endColumn":16},{"ruleId":"229","severity":1,"message":"240","line":185,"column":9,"nodeType":"231","messageId":"232","endLine":185,"endColumn":17},{"ruleId":"229","severity":1,"message":"241","line":186,"column":9,"nodeType":"231","messageId":"232","endLine":186,"endColumn":26},{"ruleId":"229","severity":1,"message":"242","line":203,"column":9,"nodeType":"231","messageId":"232","endLine":203,"endColumn":20},{"ruleId":"243","severity":1,"message":"244","line":209,"column":6,"nodeType":"245","endLine":209,"endColumn":24,"suggestions":"246"},{"ruleId":"229","severity":1,"message":"247","line":234,"column":9,"nodeType":"231","messageId":"232","endLine":234,"endColumn":19},{"ruleId":"229","severity":1,"message":"234","line":4,"column":18,"nodeType":"231","messageId":"232","endLine":4,"endColumn":27},{"ruleId":"229","severity":1,"message":"235","line":4,"column":29,"nodeType":"231","messageId":"232","endLine":4,"endColumn":32},{"ruleId":"229","severity":1,"message":"238","line":4,"column":34,"nodeType":"231","messageId":"232","endLine":4,"endColumn":37},{"ruleId":"229","severity":1,"message":"248","line":9,"column":10,"nodeType":"231","messageId":"232","endLine":9,"endColumn":20},{"ruleId":"243","severity":1,"message":"244","line":16,"column":6,"nodeType":"245","endLine":16,"endColumn":25,"suggestions":"249"},{"ruleId":"229","severity":1,"message":"250","line":5,"column":10,"nodeType":"231","messageId":"232","endLine":5,"endColumn":14},{"ruleId":"229","severity":1,"message":"251","line":33,"column":11,"nodeType":"231","messageId":"232","endLine":33,"endColumn":16},{"ruleId":"243","severity":1,"message":"252","line":45,"column":6,"nodeType":"245","endLine":45,"endColumn":8,"suggestions":"253"},{"ruleId":"229","severity":1,"message":"254","line":48,"column":9,"nodeType":"231","messageId":"232","endLine":48,"endColumn":18},{"ruleId":"229","severity":1,"message":"255","line":12,"column":9,"nodeType":"231","messageId":"232","endLine":12,"endColumn":18},{"ruleId":"229","severity":1,"message":"256","line":17,"column":10,"nodeType":"231","messageId":"232","endLine":17,"endColumn":26},{"ruleId":"229","severity":1,"message":"257","line":17,"column":28,"nodeType":"231","messageId":"232","endLine":17,"endColumn":47},{"ruleId":"229","severity":1,"message":"258","line":21,"column":10,"nodeType":"231","messageId":"232","endLine":21,"endColumn":15},{"ruleId":"229","severity":1,"message":"259","line":21,"column":17,"nodeType":"231","messageId":"232","endLine":21,"endColumn":25},{"ruleId":"229","severity":1,"message":"260","line":25,"column":9,"nodeType":"231","messageId":"232","endLine":25,"endColumn":19},{"ruleId":"229","severity":1,"message":"261","line":29,"column":9,"nodeType":"231","messageId":"232","endLine":29,"endColumn":20},{"ruleId":"229","severity":1,"message":"262","line":33,"column":9,"nodeType":"231","messageId":"232","endLine":33,"endColumn":23},{"ruleId":"229","severity":1,"message":"263","line":1,"column":38,"nodeType":"231","messageId":"232","endLine":1,"endColumn":47},{"ruleId":"225","replacedBy":"264"},{"ruleId":"227","replacedBy":"265"},{"ruleId":"225","replacedBy":"266"},{"ruleId":"227","replacedBy":"267"},{"ruleId":"229","severity":1,"message":"233","line":1,"column":17,"nodeType":"231","messageId":"232","endLine":1,"endColumn":26},{"ruleId":"229","severity":1,"message":"268","line":3,"column":10,"nodeType":"231","messageId":"232","endLine":3,"endColumn":16},{"ruleId":"229","severity":1,"message":"234","line":3,"column":18,"nodeType":"231","messageId":"232","endLine":3,"endColumn":27},{"ruleId":"229","severity":1,"message":"269","line":3,"column":29,"nodeType":"231","messageId":"232","endLine":3,"endColumn":36},{"ruleId":"229","severity":1,"message":"270","line":3,"column":38,"nodeType":"231","messageId":"232","endLine":3,"endColumn":48},{"ruleId":"229","severity":1,"message":"263","line":1,"column":38,"nodeType":"231","messageId":"232","endLine":1,"endColumn":47},{"ruleId":"229","severity":1,"message":"255","line":12,"column":11,"nodeType":"231","messageId":"232","endLine":12,"endColumn":20},{"ruleId":"229","severity":1,"message":"256","line":17,"column":12,"nodeType":"231","messageId":"232","endLine":17,"endColumn":28},{"ruleId":"229","severity":1,"message":"257","line":17,"column":30,"nodeType":"231","messageId":"232","endLine":17,"endColumn":49},{"ruleId":"229","severity":1,"message":"258","line":21,"column":12,"nodeType":"231","messageId":"232","endLine":21,"endColumn":17},{"ruleId":"229","severity":1,"message":"259","line":21,"column":19,"nodeType":"231","messageId":"232","endLine":21,"endColumn":27},{"ruleId":"229","severity":1,"message":"260","line":25,"column":11,"nodeType":"231","messageId":"232","endLine":25,"endColumn":21},{"ruleId":"229","severity":1,"message":"261","line":29,"column":11,"nodeType":"231","messageId":"232","endLine":29,"endColumn":22},{"ruleId":"229","severity":1,"message":"262","line":33,"column":11,"nodeType":"231","messageId":"232","endLine":33,"endColumn":25},{"ruleId":"229","severity":1,"message":"250","line":5,"column":10,"nodeType":"231","messageId":"232","endLine":5,"endColumn":14},{"ruleId":"229","severity":1,"message":"251","line":33,"column":11,"nodeType":"231","messageId":"232","endLine":33,"endColumn":16},{"ruleId":"243","severity":1,"message":"252","line":45,"column":6,"nodeType":"245","endLine":45,"endColumn":8,"suggestions":"271"},{"ruleId":"229","severity":1,"message":"254","line":48,"column":9,"nodeType":"231","messageId":"232","endLine":48,"endColumn":18},{"ruleId":"229","severity":1,"message":"234","line":4,"column":18,"nodeType":"231","messageId":"232","endLine":4,"endColumn":27},{"ruleId":"229","severity":1,"message":"235","line":4,"column":29,"nodeType":"231","messageId":"232","endLine":4,"endColumn":32},{"ruleId":"229","severity":1,"message":"238","line":4,"column":34,"nodeType":"231","messageId":"232","endLine":4,"endColumn":37},{"ruleId":"229","severity":1,"message":"248","line":9,"column":10,"nodeType":"231","messageId":"232","endLine":9,"endColumn":20},{"ruleId":"243","severity":1,"message":"244","line":16,"column":6,"nodeType":"245","endLine":16,"endColumn":25,"suggestions":"272"},{"ruleId":"229","severity":1,"message":"273","line":20,"column":22,"nodeType":"231","messageId":"232","endLine":20,"endColumn":33},{"ruleId":"225","replacedBy":"274"},{"ruleId":"227","replacedBy":"275"},{"ruleId":"276","severity":2,"message":"277","line":128,"column":42,"nodeType":"231","messageId":"278","endLine":128,"endColumn":50},{"ruleId":"229","severity":1,"message":"237","line":2,"column":24,"nodeType":"231","messageId":"232","endLine":2,"endColumn":44},{"ruleId":"229","severity":1,"message":"234","line":3,"column":18,"nodeType":"231","messageId":"232","endLine":3,"endColumn":27},{"ruleId":"229","severity":1,"message":"235","line":3,"column":29,"nodeType":"231","messageId":"232","endLine":3,"endColumn":32},{"ruleId":"229","severity":1,"message":"238","line":3,"column":34,"nodeType":"231","messageId":"232","endLine":3,"endColumn":37},{"ruleId":"229","severity":1,"message":"239","line":182,"column":10,"nodeType":"231","messageId":"232","endLine":182,"endColumn":16},{"ruleId":"229","severity":1,"message":"240","line":185,"column":9,"nodeType":"231","messageId":"232","endLine":185,"endColumn":17},{"ruleId":"229","severity":1,"message":"241","line":186,"column":9,"nodeType":"231","messageId":"232","endLine":186,"endColumn":26},{"ruleId":"229","severity":1,"message":"242","line":203,"column":9,"nodeType":"231","messageId":"232","endLine":203,"endColumn":20},{"ruleId":"243","severity":1,"message":"244","line":209,"column":6,"nodeType":"245","endLine":209,"endColumn":24,"suggestions":"279"},{"ruleId":"229","severity":1,"message":"247","line":234,"column":9,"nodeType":"231","messageId":"232","endLine":234,"endColumn":19},"no-native-reassign",["280"],"no-negated-in-lhs",["281"],"no-unused-vars","'WatchList' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'commodityList' is assigned a value but never used.","'SlideTransitionGroup' is defined but never used.","'Col' is defined but never used.","'result' is assigned a value but never used.","'forexAPI' is assigned a value but never used.","'secondaryForexAPI' is assigned a value but never used.","'displayName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getResults'. Either include it or remove the dependency array.","ArrayExpression",["282"],"'forexArray' is assigned a value but never used.","'tokenPrice' is assigned a value but never used.",["283"],"'data' is assigned a value but never used.","'getId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'makeApiCall' and 'throttledApiCall'. Either include them or remove the dependency array.",["284"],"'displayId' is assigned a value but never used.","'forexName' is assigned a value but never used.","'aggregatedSearch' is assigned a value but never used.","'setAggregatedSearch' is assigned a value but never used.","'input' is assigned a value but never used.","'setInput' is assigned a value but never used.","'mergeForex' is assigned a value but never used.","'mergeCrypto' is assigned a value but never used.","'mergeCommodity' is assigned a value but never used.","'Component' is defined but never used.",["280"],["281"],["280"],["281"],"'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.",["285"],["286"],"'setLoggedIn' is assigned a value but never used.",["280"],["281"],"no-undef","'loggedIn' is not defined.","undef",["287"],"no-global-assign","no-unsafe-negation",{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"292","fix":"294"},{"desc":"290","fix":"295"},{"desc":"288","fix":"296"},"Update the dependencies array to be: [getResults, props.forexState]",{"range":"297","text":"298"},"Update the dependencies array to be: [getResults, props.cryptoState]",{"range":"299","text":"300"},"Update the dependencies array to be: [makeApiCall, throttledApiCall]",{"range":"301","text":"302"},{"range":"303","text":"302"},{"range":"304","text":"300"},{"range":"305","text":"298"},[8446,8464],"[getResults, props.forexState]",[556,575],"[getResults, props.cryptoState]",[1175,1177],"[makeApiCall, throttledApiCall]",[1175,1177],[556,575],[8446,8464]]