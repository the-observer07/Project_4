[{"/Users/inspireadmin/Documents/GitHub/Project_2/src/index.js":"1","/Users/inspireadmin/Documents/GitHub/Project_2/src/App.js":"2","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Commodity.js":"3","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Forex.js":"4","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Crypto.js":"5","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenListApiData.js":"6","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenList.js":"7","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/AggregateInput.js":"8","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/CommodityList.js":"9","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/ForexList.js":"10","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/DataTicker.js":"11","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/WatchList.js":"12","/Users/inspireadmin/Documents/GitHub/Project_4/src/index.js":"13","/Users/inspireadmin/Documents/GitHub/Project_4/src/App.js":"14","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Home.js":"15","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/DataTicker.js":"16","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/AggregateInput.js":"17","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/TokenList.js":"18","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/Crypto.js":"19","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/TokenListApiData.js":"20","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/User.js":"21","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/ResponsiveAppBar.js":"22","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/Table.js":"23","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/unused/Forex.js":"24","/Users/inspireadmin/Documents/GitHub/Project_4/src/utils/coingeckoAPICalls.js":"25","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/LogInButton.js":"26","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/SignUpButton.js":"27","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Portfolio.js":"28","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/PortfolioForm.js":"29","/Users/inspireadmin/Documents/GitHub/Project_4/src/utils/backendAPIs.js":"30","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Login.js":"31","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/SignUp.js":"32","/Users/inspireadmin/Documents/GitHub/Project_4/src/redux/store.js":"33","/Users/inspireadmin/Documents/GitHub/Project_4/src/redux/user.js":"34","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Watchlist.js":"35","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/WatchListTable.js":"36","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/PortfolioTable.js":"37","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/unused/PortfolioResultsTable.js":"38","/Users/inspireadmin/Documents/GitHub/Project_4/src/redux/portfolioSlice.js":"39","/Users/inspireadmin/Documents/GitHub/Project_4/src/redux/watchlistSlice.js":"40"},{"size":142,"mtime":1616592305000,"results":"41","hashOfConfig":"42"},{"size":463,"mtime":1648198519549,"results":"43","hashOfConfig":"42"},{"size":2076,"mtime":1648198519550,"results":"44","hashOfConfig":"42"},{"size":11290,"mtime":1648198519552,"results":"45","hashOfConfig":"42"},{"size":1663,"mtime":1648198519551,"results":"46","hashOfConfig":"42"},{"size":845502,"mtime":1648198519558,"results":"47","hashOfConfig":"42"},{"size":1355,"mtime":1648198519553,"results":"48","hashOfConfig":"42"},{"size":2226,"mtime":1648198519550,"results":"49","hashOfConfig":"42"},{"size":238,"mtime":1648007118042,"results":"50","hashOfConfig":"42"},{"size":7155,"mtime":1648025038708,"results":"51","hashOfConfig":"42"},{"size":1904,"mtime":1648198519552,"results":"52","hashOfConfig":"42"},{"size":263,"mtime":1648198519559,"results":"53","hashOfConfig":"42"},{"size":329,"mtime":1651250847871,"results":"54","hashOfConfig":"55"},{"size":1033,"mtime":1651127547335,"results":"56","hashOfConfig":"55"},{"size":737,"mtime":1651402000954,"results":"57","hashOfConfig":"55"},{"size":2937,"mtime":1651727194571,"results":"58","hashOfConfig":"55"},{"size":2593,"mtime":1650971894961,"results":"59","hashOfConfig":"55"},{"size":1355,"mtime":1648198519553,"results":"60","hashOfConfig":"55"},{"size":1663,"mtime":1648198519551,"results":"61","hashOfConfig":"55"},{"size":845502,"mtime":1648198519558,"results":"62","hashOfConfig":"55"},{"size":102,"mtime":1650942127776,"results":"63","hashOfConfig":"55"},{"size":10385,"mtime":1651656675347,"results":"64","hashOfConfig":"55"},{"size":15107,"mtime":1651679861352,"results":"65","hashOfConfig":"55"},{"size":11290,"mtime":1648198519552,"results":"66","hashOfConfig":"55"},{"size":558,"mtime":1651589178728,"results":"67","hashOfConfig":"55"},{"size":1732,"mtime":1651048159780,"results":"68","hashOfConfig":"55"},{"size":2408,"mtime":1651048571664,"results":"69","hashOfConfig":"55"},{"size":1187,"mtime":1651657382508,"results":"70","hashOfConfig":"55"},{"size":9294,"mtime":1651647262540,"results":"71","hashOfConfig":"55"},{"size":2850,"mtime":1651729018152,"results":"72","hashOfConfig":"55"},{"size":2178,"mtime":1651678064196,"results":"73","hashOfConfig":"55"},{"size":2730,"mtime":1651720439268,"results":"74","hashOfConfig":"55"},{"size":404,"mtime":1651399889150,"results":"75","hashOfConfig":"55"},{"size":835,"mtime":1651654609890,"results":"76","hashOfConfig":"55"},{"size":960,"mtime":1651727448942,"results":"77","hashOfConfig":"55"},{"size":8479,"mtime":1651731007159,"results":"78","hashOfConfig":"55"},{"size":9615,"mtime":1651658206353,"results":"79","hashOfConfig":"55"},{"size":2488,"mtime":1651049013220,"results":"80","hashOfConfig":"55"},{"size":2731,"mtime":1651644142717,"results":"81","hashOfConfig":"55"},{"size":2673,"mtime":1651730736641,"results":"82","hashOfConfig":"55"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1as9eb2",{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},"9317a4",{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"123"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"123"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"146"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"136"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"136"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"136"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"136"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"136"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"136"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"136"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"136"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"136"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"123"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"136"},"/Users/inspireadmin/Documents/GitHub/Project_2/src/index.js",[],[],["226","227"],"/Users/inspireadmin/Documents/GitHub/Project_2/src/App.js",["228"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Commodity.js",["229","230","231","232"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Forex.js",["233","234","235","236","237","238","239","240","241","242"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Crypto.js",["243","244","245","246","247"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenListApiData.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenList.js",["248","249","250","251"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/AggregateInput.js",["252","253","254","255","256","257","258","259"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/CommodityList.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/ForexList.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/DataTicker.js",["260"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/WatchList.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/index.js",[],[],["261","262"],"/Users/inspireadmin/Documents/GitHub/Project_4/src/App.js",["263","264"],[],"// import \"./App.css\";\nimport React from \"react\";\nimport { Route, Navigate, BrowserRouter, Routes } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Portfolio from \"./pages/Portfolio\";\nimport User from \"./pages/User\";\nimport SignUp from \"./pages/SignUp\";\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport Watchlist from \"./pages/Watchlist\";\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <Routes>\n                <Route path=\"/home\" element={<Home />} />\n                <Route path=\"logout\" element={<Navigate replace to=\"/\" />} />\n                <Route path=\"/login\" element={<Login />} />\n                <Route path=\"/signup\" element={<SignUp />} />\n                <Route path=\"/user\" element={<User />} />\n                <Route path=\"/portfolio\" element={<Portfolio />} />\n                <Route path=\"/watchlist\" element={<Watchlist />} />\n            </Routes>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Home.js",["265","266","267","268","269"],[],"import React, { useEffect } from \"react\";\nimport DataTicker from \"../component/DataTicker\";\nimport { AppBar, Container, Toolbar, Typography } from \"@mui/material\";\n// import WatchList from \"./component/WatchList\";\n// import { useNavigate } from \"react-router-dom\";\nimport ResponsiveAppBar from \"../component/ResponsiveAppBar\";\nimport Table from \"../component/Table\";\n\nconst Home = () => {\n    return (\n        <div>\n            <ResponsiveAppBar />\n            <DataTicker />\n            <br />\n            <div className=\"container\">\n                <Table />\n            </div>\n            <br />\n            <br />\n            <br />\n            <br />\n            {/* <WatchList /> */}\n        </div>\n    );\n};\n\nexport default Home;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/DataTicker.js",["270"],[],"import React, { useState, useEffect, Component } from \"react\";\nimport Ticker, { FinancialTicker, NewsTicker } from \"nice-react-ticker\";\n\nconst DataTicker = () => {\n    const [cryptoData, setCryptoData] = useState([]);\n    const [newsData, setNewsData] = useState(\"\");\n\n    const cryptoApiTicker =\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\";\n    const financialNewsTicker =\n        \"https://api.marketaux.com/v1/news/all?symbols=TSLA,GME,AMC&filter_entities=true&language=en&api_token=WMIGwTBG1aEbYNV6vYbrBbu8TXB4R0mAXH1Zu5tU\";\n\n    useEffect(() => {\n        fetchFinancialNewsAPI();\n        fetchCryptoAPI();\n        setInterval(() => {\n            fetchCryptoAPI();\n        }, 10000);\n    }, []);\n\n    const fetchCryptoAPI = async () => {\n        const percentageChange = \"\";\n\n        const res = await fetch(cryptoApiTicker);\n        const rawData = await res.json();\n        // console.log(rawData);\n        // let sevenData = rawData.tickers;\n        // console.log(sevenData);\n        const firstSeven = rawData.filter((element, index) => index < 12);\n        // console.log(firstSeven);\n\n        const filteredData = firstSeven.map((element, index) => {\n            // console.log(element.price_change_percentage_24h);\n            return (\n                <FinancialTicker\n                    id={index}\n                    change={\n                        percentageChange\n                            ? element.price_change_percentage_24h < 0\n                            : element.price_change_percentage_24h > 0\n                    }\n                    symbol={element.symbol} // to upper case it...\n                    lastPrice={`${parseFloat(element.high_24h).toFixed(2)}`}\n                    currentPrice={`${parseFloat(element.current_price).toFixed(\n                        2\n                    )}`}\n                    percentage={`${parseFloat(\n                        element.price_change_percentage_24h\n                    ).toFixed(2)}`}\n                />\n            );\n        });\n        setCryptoData(filteredData);\n    };\n\n    const fetchFinancialNewsAPI = async () => {\n        const res = await fetch(financialNewsTicker);\n        const rawData = await res.json();\n        const financialMappedData = rawData.data.map((element, index) => {\n            return (\n                <NewsTicker\n                    id={index}\n                    icon={element.image_url}\n                    title={element.title}\n                    url={element.url}\n                />\n            );\n        });\n        setNewsData(financialMappedData);\n    };\n\n    return (\n        <div>\n            <Ticker className=\"tickerItemFinancial\">{cryptoData}</Ticker>\n            <div className=\"newsticker\">\n                <Ticker isNewsTicker={true}>{newsData}</Ticker>\n            </div>\n        </div>\n    );\n};\n\nexport default DataTicker;\n",["271","272"],"/Users/inspireadmin/Documents/GitHub/Project_4/src/component/AggregateInput.js",["273","274","275","276","277","278","279","280"],[],"import React, { useState } from \"react\";\nimport commodityList from \"./CommodityList\";\nimport forexList from \"./ForexList\";\nimport { DropdownList } from \"react-widgets/cjs\";\nimport TokenList from \"./TokenList\";\nimport Crypto from \"./Crypto\";\nimport Forex from \"./unused/Forex\";\nimport Commodity from \"./Commodity\";\n\nconst AggregateInput = (props) => {\n    const forexNameArray = [];\n    const forexName = forexList.map((chicken) => {\n        return forexNameArray.push(chicken.name);\n    });\n\n    const [id, setId] = useState([]);\n    const [aggregatedSearch, setAggregatedSearch] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [forexState, setForexState] = useState(false);\n    const [cryptoState, setCryptoState] = useState(false);\n    const [input, setInput] = useState(\"\");\n\n    const aggregatedArray = [];\n\n    const mergeForex = forexNameArray.map((chicken) => {\n        return aggregatedArray.push(chicken);\n    });\n\n    const mergeCrypto = id.map((chicken) => {\n        return aggregatedArray.push(chicken);\n    });\n\n    const mergeCommodity = commodityList.map((chicken) => {\n        return aggregatedArray.push(chicken);\n    });\n\n    const handleSearchAggregate = (event) => {\n        const searchWord = event;\n\n        if (commodityList.indexOf(searchWord) !== -1) {\n            setContent(<Commodity commoditySearchWord={searchWord} />);\n        } else if (\n            forexList.find((element) => element.name === searchWord) !==\n            undefined\n        ) {\n            setContent(\n                <Forex\n                    forexSearchWord={searchWord}\n                    forexState={forexState}\n                    setForexState={setForexState}\n                />\n            );\n        } else {\n            setContent(\n                <Crypto\n                    searchWord={searchWord}\n                    cryptoState={cryptoState}\n                    setCryptoState={setCryptoState}\n                />\n            );\n        }\n    };\n\n    return (\n        <div>\n            <div className=\"int-container\">\n                <div className=\"holder\">\n                    <br />\n                    <h2 className=\"header\">QUERY YOUR MOONSHOT</h2>\n                    <br />\n                    <DropdownList\n                        data={aggregatedArray}\n                        onChange={handleSearchAggregate}\n                    />\n                    <br />\n                    <TokenList id={id} setId={setId} />\n                    {content}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AggregateInput;\n",["281","282"],"/Users/inspireadmin/Documents/GitHub/Project_4/src/component/TokenList.js",["283","284","285","286"],[],"import React, { useEffect, useState } from \"react\";\nimport Bottleneck from \"bottleneck\";\n\nconst TokenList = (props) => {\n  const [data, setData] = useState([]);\n  const [type, setType] = useState([]);\n\n  const tickerData = \"https://api.coingecko.com/api/v3/exchanges/binance\";\n\n  const limiter = new Bottleneck({\n    reservoir: 100, // initial value\n    reservoirRefreshAmount: 100,\n    reservoirRefreshInterval: 60 * 500,\n\n    // also use maxConcurrent and/or minTime for safety\n    maxConcurrent: 1,\n    minTime: 333, // pick a value that makes sense for your use case\n  });\n\n  const makeApiCall = async () => {\n    const res = await fetch(tickerData);\n    const rawData = await res.json();\n    setData(rawData.tickers);\n    const filteredData = rawData.tickers.map((duck) => {\n      return {\n        id: duck.base,\n        price: duck.last,\n      };\n    });\n\n    setType(filteredData);\n    const emptyArray = [];\n    const getId = filteredData.map((chicken) => {\n      return emptyArray.push(chicken.id);\n    });\n\n    props.setId(emptyArray);\n  };\n\n  const throttledApiCall = limiter.wrap(makeApiCall);\n\n  useEffect(() => {\n    throttledApiCall();\n    makeApiCall();\n  }, []);\n\n  const cryptoIdArray = [];\n  const displayId = type.map((chicken) => {\n    return cryptoIdArray.push(chicken.id);\n  });\n\n  return <div></div>;\n};\n\nexport default TokenList;\n",["287","288"],"/Users/inspireadmin/Documents/GitHub/Project_4/src/component/Crypto.js",["289","290","291","292","293"],[],"import React, { useState, useEffect } from \"react\";\n\nimport tokenList from \"./TokenListApiData\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\n// import AggregateInput from \"./AggregateInput\";\n\nconst Crypto = (props) => {\n  const [filterData, setFilterData] = useState(\"\");\n  const [tokenPrice, setTokenPrice] = useState([]);\n  const [extractedData, setExtractedData] = useState(\"\");\n\n  const cryptoAPIQuery = `https://api.coingecko.com/api/v3/simple/price?ids=${filterData}&vs_currencies=USD`;\n\n  useEffect(() => {\n    getResults();\n  }, [props.cryptoState]);\n\n  const getResults = () => {\n    const searchWord = props.searchWord;\n    console.log(searchWord);\n    const newFilter = Object.keys(tokenList).reduce((result, key) => {\n      if (tokenList[key].name.match(searchWord)) {\n        result = tokenList[key].id;\n      }\n\n      return result;\n    }, \"\");\n    setFilterData(newFilter);\n    console.log(newFilter);\n  };\n\n  const makeApiCall = async () => {\n    const res = await fetch(cryptoAPIQuery);\n    const rawData = await res.json();\n\n    setTokenPrice(rawData);\n    console.log(rawData);\n\n    const tokenPriceArray = [rawData];\n    const obj1 = tokenPriceArray[0];\n    console.log(obj1);\n\n    const obj2 = obj1[Object.keys(obj1)[0]];\n    console.log(obj2);\n\n    const value = obj2[Object.keys(obj2)[0]];\n    console.log(value);\n    setExtractedData(value);\n  };\n\n  return (\n    <div>\n      <br />\n      <Button onClick={makeApiCall} size=\"lg\">\n        Submit\n      </Button>\n      <br />\n      <br />\n      <br />\n      <div className=\"data\">Token price : ${extractedData}</div>\n      <br />\n    </div>\n  );\n};\n\nexport default Crypto;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/TokenListApiData.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/User.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/component/ResponsiveAppBar.js",["294","295","296","297","298","299","300","301"],[],"import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useState, useEffect } from \"react\";\nimport LogInButton from \"../component/LogInButton\";\nimport SignUpButton from \"../component/SignUpButton\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport userSlice, { userActions } from \"../redux/user\";\n\nconst pages = [\"Home\", \"Watchlist\", \"Portfolio\"];\nconst settings = [\"Profile\", \"Preferences\", \"Logout\"];\n\nconst ResponsiveAppBar = () => {\n    const [loggedIn, setLoggedIn] = useState(false);\n\n    const [anchorElNav, setAnchorElNav] = React.useState(null);\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n    const user = useSelector((state) => state.user);\n    // console.log(user.login.auth);\n\n    const status = () => {\n        setLoggedIn(user.auth);\n        console.log(user.auth);\n    };\n\n    const handleOpenNavMenu = (event) => {\n        setAnchorElNav(event.currentTarget);\n    };\n\n    const handleOpenUserMenu = (event) => {\n        setAnchorElUser(event.currentTarget);\n    };\n\n    const handleCloseNavMenu = () => {\n        setAnchorElNav(null);\n    };\n\n    const handleCloseUserMenu = () => {\n        setAnchorElUser(null);\n    };\n\n    const handleLogIn = () => {};\n\n    const handleLogout = () => {};\n\n    useEffect(() => {\n        status();\n    }, []);\n\n    return (\n        <AppBar position=\"static\" sx={{ bgcolor: \"#16181f\" }}>\n            <Container maxWidth=\"xl\">\n                <Toolbar disableGutters>\n                    <Typography\n                        variant=\"h6\"\n                        noWrap\n                        component=\"div\"\n                        sx={{ mr: 2, display: { xs: \"none\", md: \"flex\" } }}\n                    >\n                        LOGO\n                    </Typography>\n\n                    <Box\n                        sx={{\n                            flexGrow: 1,\n                            display: { xs: \"flex\", md: \"none\" },\n                        }}\n                    >\n                        <IconButton\n                            size=\"large\"\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            onClick={handleOpenNavMenu}\n                            color=\"inherit\"\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Menu\n                            id=\"menu-appbar\"\n                            anchorEl={anchorElNav}\n                            anchorOrigin={{\n                                vertical: \"bottom\",\n                                horizontal: \"left\",\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: \"top\",\n                                horizontal: \"left\",\n                            }}\n                            open={Boolean(anchorElNav)}\n                            onClose={handleCloseNavMenu}\n                            sx={{\n                                display: { xs: \"block\", md: \"none\" },\n                            }}\n                        >\n                            {pages.map((page) => (\n                                <MenuItem\n                                    key={page}\n                                    onClick={handleCloseNavMenu}\n                                >\n                                    <Typography textAlign=\"center\">\n                                        <Link\n                                            style={{\n                                                textDecoration: \"none\",\n                                                color: \"white\",\n                                            }}\n                                            to={`/${page}`}\n                                        >\n                                            {page}\n                                        </Link>\n                                    </Typography>\n                                </MenuItem>\n                            ))}\n                        </Menu>\n                    </Box>\n                    <Typography\n                        variant=\"h6\"\n                        noWrap\n                        component=\"div\"\n                        sx={{\n                            flexGrow: 1,\n                            display: { xs: \"flex\", md: \"none\" },\n                        }}\n                    >\n                        LOGO\n                    </Typography>\n                    <Box\n                        sx={{\n                            flexGrow: 1,\n                            display: { xs: \"none\", md: \"flex\" },\n                        }}\n                    >\n                        {pages.map((page) => (\n                            <Button\n                                key={page}\n                                onClick={handleCloseNavMenu}\n                                sx={{ my: 2, color: \"white\", display: \"block\" }}\n                            >\n                                <Link\n                                    style={{\n                                        textDecoration: \"none\",\n                                        color: \"white\",\n                                    }}\n                                    to={`/${page}`}\n                                >\n                                    {page}\n                                </Link>\n                            </Button>\n                        ))}\n                    </Box>\n\n                    {loggedIn === true ? (\n                        <div>\n                            <Box sx={{ flexGrow: 0 }}>\n                                <Tooltip title=\"Open settings\">\n                                    <IconButton\n                                        onClick={handleOpenUserMenu}\n                                        sx={{ p: 0 }}\n                                    >\n                                        <Avatar\n                                            alt=\"Remy Sharp\"\n                                            src=\"/static/images/avatar/2.jpg\"\n                                        />\n                                    </IconButton>\n                                </Tooltip>\n                                <Menu\n                                    sx={{ mt: \"45px\" }}\n                                    id=\"menu-appbar\"\n                                    anchorEl={anchorElUser}\n                                    anchorOrigin={{\n                                        vertical: \"top\",\n                                        horizontal: \"right\",\n                                    }}\n                                    keepMounted\n                                    transformOrigin={{\n                                        vertical: \"top\",\n                                        horizontal: \"right\",\n                                    }}\n                                    open={Boolean(anchorElUser)}\n                                    onClose={handleCloseUserMenu}\n                                >\n                                    {/* {settings.map((setting) => (\n                                        <MenuItem\n                                            key={setting}\n                                            onClick={handleCloseUserMenu}\n                                        >\n                                            <Typography textAlign=\"center\">\n                                                {setting}\n                                            </Typography>\n                                        </MenuItem>\n                                    ))} */}\n                                    <MenuItem\n                                        // key={setting}\n                                        onClick={handleCloseUserMenu}\n                                    >\n                                        <Typography textAlign=\"center\">\n                                            Profile\n                                        </Typography>\n                                    </MenuItem>\n                                    <MenuItem\n                                        // key={setting}\n                                        onClick={handleCloseUserMenu}\n                                    >\n                                        <Typography textAlign=\"center\">\n                                            Preferences\n                                        </Typography>\n                                    </MenuItem>\n                                    <MenuItem\n                                        // key={setting}\n                                        onClick={handleLogout}\n                                    >\n                                        <Typography textAlign=\"center\">\n                                            Logout\n                                        </Typography>\n                                    </MenuItem>\n                                </Menu>\n                            </Box>\n                        </div>\n                    ) : (\n                        <div>\n                            <Button\n                                variant=\"contained\"\n                                href=\"/login\"\n                                sx={{ margin: 1.5 }}\n                            >\n                                Login\n                            </Button>\n                            <Button variant=\"contained\" href=\"/signup\">\n                                Sign Up\n                            </Button>\n                        </div>\n                    )}\n                </Toolbar>\n            </Container>\n        </AppBar>\n    );\n};\nexport default ResponsiveAppBar;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/Table.js",["302","303","304","305","306","307","308","309","310","311","312"],[],"import axios from \"axios\";\nimport React from \"react\";\nimport { tokenList } from \"../utils/coingeckoAPICalls\";\nimport { useState, useEffect } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport \"../fonts.css\";\nimport { Typography } from \"@mui/material\";\nimport { Button, Box } from \"@mui/material\";\nimport StarBorderIcon from \"@mui/icons-material/StarBorder\";\nimport IconButton from \"@mui/material/IconButton\";\nimport watchlistSlice, { watchlistActions } from \"../redux/watchlistSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { singleToken } from \"../utils/coingeckoAPICalls\";\nimport backendAPIs from \"../utils/backendAPIs\";\nimport userSlice, { userActions } from \"../redux/user\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst TableData = () => {\n    const [tokens, setTokens] = useState([]);\n    const topTen = tokens.filter((element, index) => index < 10);\n    // console.log(topTen);\n    // const [Pending, setPending] = useState();\n    const dispatch = useDispatch();\n    const [faves, setFaves] = useState([]);\n    const [status, setStatus] = useState(false);\n    let navigate = useNavigate();\n\n    const user = useSelector((state) => state.user);\n    const portfolioRedux = useSelector((state) => state.portfolio);\n    // const user = useSelector((state) => state.user)\n    // const watchlistRedux = useSelector((state) => state.watchlistSlice);\n    const getData = async () => {\n        const callForTokenList = await axios.get(tokenList());\n\n        setTokens(callForTokenList.data);\n\n        // console.log(callForTokenList);\n    };\n\n    const checkIfLoggedIn = async () => {\n        if (user.auth === true) {\n            setStatus(true);\n        }\n    };\n\n    useEffect(() => {\n        getData();\n        checkIfLoggedIn();\n    }, []);\n\n    const handleAddToFavs = async (e) => {\n        const body = { username: user.username, token: e.currentTarget.value };\n        console.log(body.token.token);\n        //send token to redux\n        //send token to backend\n        setFaves(body.token);\n        // dispatch(watchlistActions.setToken(e.currentTarget.value));\n        const res = await backendAPIs.addWatchlist(body);\n        console.log(res);\n        // const res = await axios.get(singleToken(token));\n        // setFaves(res.data); // -> should be redux state\n        // console.log(res.data);\n        // dispatch(watchlistActions.setToken());\n    };\n\n    // console.log(watchlistRedux);\n\n    return (\n        <div>\n            {status === true ? (\n                <div className=\"int-container\">\n                    <div className=\"holder\">\n                        {/* <h2 className=\"header\">\n                        Cryptocurrency Tokens by Market Cap\n                    </h2> */}\n                        <h1 style={{ color: \"white\", align: \"\" }}>\n                            Crypto Whale{\" \"}\n                        </h1>\n                        <TableContainer component={Paper}>\n                            <Table\n                                sx={{ minWidth: 350 }}\n                                aria-label=\"simple table\"\n                            >\n                                <Typography\n                                    variant=\"h4\"\n                                    style={{ margin: 18, fontFamily: \"Roboto\" }}\n                                ></Typography>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell></TableCell>\n                                        <TableCell>Token</TableCell>\n                                        <TableCell align=\"center\">\n                                            Price\n                                        </TableCell>\n                                        <TableCell align=\"center\">\n                                            Market Cap\n                                        </TableCell>\n                                        <TableCell align=\"center\">\n                                            % Change (24hr)\n                                        </TableCell>\n                                        <TableCell></TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {topTen.map((token) => (\n                                        <TableRow\n                                            key={token.name}\n                                            sx={{\n                                                \"&:last-child td, &:last-child th\":\n                                                    {\n                                                        border: 0,\n                                                    },\n                                            }}\n                                        >\n                                            <TableCell align=\"right\">\n                                                <Box\n                                                    component=\"img\"\n                                                    sx={{\n                                                        height: 25,\n                                                        width: 25,\n                                                        maxHeight: {\n                                                            xs: 233,\n                                                            md: 167,\n                                                        },\n                                                        maxWidth: {\n                                                            xs: 350,\n                                                            md: 250,\n                                                        },\n                                                    }}\n                                                    alt=\"\"\n                                                    src={`${token.image}`}\n                                                />\n                                            </TableCell>\n                                            <TableCell\n                                                component=\"th\"\n                                                scope=\"row\"\n                                            >\n                                                {token.name}\n                                            </TableCell>\n                                            <TableCell\n                                                align=\"center\"\n                                                sx={{ width: 150 }}\n                                            >\n                                                {`$ ${parseFloat(\n                                                    token.current_price\n                                                ).toLocaleString(\"en-US\")}`}\n                                            </TableCell>\n                                            <TableCell\n                                                align=\"center\"\n                                                sx={{ width: 250 }}\n                                            >\n                                                {`$ ${parseFloat(\n                                                    token.market_cap\n                                                ).toLocaleString(\"en-US\")}`}\n                                            </TableCell>\n                                            <TableCell\n                                                align=\"center\"\n                                                sx={{ width: 150 }}\n                                            >\n                                                {` ${parseFloat(\n                                                    token.price_change_percentage_24h\n                                                ).toFixed(2)}`}\n                                            </TableCell>\n\n                                            <TableCell align=\"center\">\n                                                <IconButton\n                                                    value={token.id}\n                                                    color=\"primary\"\n                                                    aria-label=\"add to faves\"\n                                                    sx={{\n                                                        height: 30,\n                                                        width: 30,\n                                                    }}\n                                                    onClick={handleAddToFavs}\n                                                >\n                                                    <StarBorderIcon />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"int-container\">\n                    <div className=\"holder\">\n                        {/* <h2 className=\"header\">\n                        Cryptocurrency Tokens by Market Cap\n                    </h2> */}\n                        <h1 style={{ color: \"white\", align: \"\" }}>\n                            Crypto Whale{\" \"}\n                        </h1>\n                        <TableContainer component={Paper}>\n                            <Table\n                                sx={{ minWidth: 350 }}\n                                aria-label=\"simple table\"\n                            >\n                                <Typography\n                                    variant=\"h4\"\n                                    style={{ margin: 18, fontFamily: \"Roboto\" }}\n                                ></Typography>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell></TableCell>\n                                        <TableCell>Token</TableCell>\n                                        <TableCell align=\"center\">\n                                            Price\n                                        </TableCell>\n                                        <TableCell align=\"center\">\n                                            Market Cap\n                                        </TableCell>\n                                        <TableCell align=\"center\">\n                                            % Change (24hr)\n                                        </TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {topTen.map((token) => (\n                                        <TableRow\n                                            key={token.name}\n                                            sx={{\n                                                \"&:last-child td, &:last-child th\":\n                                                    {\n                                                        border: 0,\n                                                    },\n                                            }}\n                                        >\n                                            <TableCell align=\"center\">\n                                                <Box\n                                                    component=\"img\"\n                                                    sx={{\n                                                        height: 25,\n                                                        width: 25,\n                                                        maxHeight: {\n                                                            xs: 233,\n                                                            md: 167,\n                                                        },\n                                                        maxWidth: {\n                                                            xs: 350,\n                                                            md: 250,\n                                                        },\n                                                    }}\n                                                    alt=\"\"\n                                                    src={`${token.image}`}\n                                                />\n                                            </TableCell>\n                                            <TableCell\n                                                component=\"th\"\n                                                scope=\"row\"\n                                            >\n                                                {token.name}\n                                            </TableCell>\n                                            <TableCell\n                                                align=\"center\"\n                                                sx={{ width: 150 }}\n                                            >\n                                                {`$ ${parseFloat(\n                                                    token.current_price\n                                                ).toLocaleString(\"en-US\")}`}\n                                            </TableCell>\n                                            <TableCell\n                                                align=\"center\"\n                                                sx={{ width: 250 }}\n                                            >\n                                                {`$ ${parseFloat(\n                                                    token.market_cap\n                                                ).toLocaleString(\"en-US\")}`}\n                                            </TableCell>\n                                            <TableCell\n                                                align=\"center\"\n                                                sx={{ width: 150 }}\n                                            >\n                                                {` ${parseFloat(\n                                                    token.price_change_percentage_24h\n                                                ).toFixed(2)}`}\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default TableData;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/unused/Forex.js",["313","314","315","316","317","318","319","320","321","322"],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/utils/coingeckoAPICalls.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/component/LogInButton.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/component/SignUpButton.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Portfolio.js",["323","324","325","326","327","328","329","330"],[],"import React from \"react\";\nimport PortfolioResultsTable from \"../component/unused/PortfolioResultsTable\";\nimport PortfolioForm from \"../component/PortfolioForm\";\nimport backendAPIs from \"../utils/backendAPIs\";\nimport ResponsiveAppBar from \"../component/ResponsiveAppBar\";\nimport PortfolioTable from \"../component/PortfolioTable\";\nimport user from \"../redux/user\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport userSlice, { userActions } from \"../redux/user\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Portfolio = () => {\n    let navigate = useNavigate();\n\n    // const dispatch = useDispatch();\n    const user = useSelector((state) => state.user);\n\n    const status = () => {\n        if (user.auth === true) {\n            console.log(\"you may enter\");\n        } else {\n            navigate(\"/home\");\n        }\n    };\n\n    useEffect(() => {\n        status();\n    }, []);\n\n    return (\n        <div>\n            <ResponsiveAppBar />\n\n            <div className=\"container\">\n                <PortfolioForm />\n                <PortfolioTable />\n            </div>\n        </div>\n    );\n};\n\nexport default Portfolio;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/PortfolioForm.js",["331","332","333","334","335"],[],"import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport backendAPIs from \"../utils/backendAPIs\";\nimport { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport portfolioSlice, { portfolioActions } from \"../redux/portfolioSlice\";\n\n// import store from \"./app/store\";\n// import { Provider } from \"react-redux\";\n\nexport default function HelperTextMisaligned() {\n    // const [data, setData] = useState(\"\");\n    const dispatch = useDispatch();\n    const portfolio = useSelector((state) => state.portfolio);\n    // console.log(portfolio);\n    const [loading, setLoading] = useState(false);\n\n    const [editedToken, setEditedToken] = useState(\"\");\n    console.log(portfolio.recalledTokens.recalledToken);\n    console.log(editedToken);\n    const [editedPrice, setEditedPrice] = useState(\"\");\n    const [editedQty, setEditedQty] = useState(\"\");\n\n    const [token, setToken] = useState(\"\");\n    const [price, setPrice] = useState(\"\");\n    const [quantity, setQuantity] = useState(\"\");\n\n    // const selector = useSelector((state) => state.portfolio);\n\n    // const checkEditMode = useSelector(portfolioSlice.editMode);\n    // console.log(checkEditMode);\n\n    // const [token, setToken] = useState(\"\");\n    // const [price, setPrice] = useState(\"\");\n    // const [qty, setQty] = useState(\"\");\n\n    // const randomObj = { one: 1, two: 2, three: 3 };\n\n    const initialValues = {\n        id: \"\",\n        price: \"\",\n        qty: \"\",\n        loading: false,\n    };\n\n    const handleIdChange = (event) => {\n        setToken(event.target.value);\n        // console.log(`id = ${event.target.value}`);\n        // dispatch(portfolioActions.setToken(event.target.value));\n        dispatch(portfolioActions.setToken(event.target.value));\n    };\n\n    const handlePriceChange = (event) => {\n        setPrice(event.target.value);\n        // console.log(`price = ${event.target.value}`);\n        dispatch(portfolioActions.setPrice(event.target.value));\n    };\n\n    const handleQtyChange = (event) => {\n        setQuantity(event.target.value);\n        // console.log(`qty = ${event.target.value}`);\n        dispatch(portfolioActions.setQty(event.target.value));\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        setLoading(true);\n        // dispatch(portfolioActions.handleSubmit(true));\n\n        // let formData = new FormData();\n        // formData.append(\"token\", token);\n        // formData.append(\"price\", price);\n        // formData.append(\"quantity\", qty);\n        // console.log(token, price, qty);\n\n        // const data = {\n        //     token: portfolio.token,\n        //     price: portfolio.price,\n        //     quantity: portfolio.qty,\n        // };\n\n        const data = {\n            token: token,\n            price: price,\n            quantity: quantity,\n        };\n\n        console.log(data);\n\n        // console.log(\"formData\", qs.stringify(formData));\n\n        // console.log(formData.getAll(\"price\", \"quantity\"));\n\n        backendAPIs.addUserNewPortfolio(data);\n        setLoading(false);\n        dispatch(portfolioActions.handleSubmit());\n        setToken(\"\");\n        setPrice(\"\");\n        setQuantity(\"\");\n    };\n\n    const handleSubmitEdit = (event) => {\n        event.preventDefault();\n        setLoading(true);\n        const data = {\n            token: editedToken,\n            price: editedPrice,\n            quantity: editedQty,\n        };\n        console.log(data);\n        backendAPIs.submitEditedPortfolio(data);\n        setLoading(false);\n        dispatch(portfolioActions.handleResetEdit());\n        setEditedPrice(\"\");\n        setEditedToken(\"\");\n        setEditedQty(\"\");\n        dispatch(portfolioActions.setEdit(false));\n    };\n\n    const handleEditIdChange = (event) => {\n        setEditedToken(event.target.value);\n        // dispatch(portfolioActions.setEditedToken(event.target.value));\n    };\n\n    const handleEditPriceChange = (event) => {\n        setEditedPrice(event.target.value);\n\n        // dispatch(portfolioActions.setEditedPrice(event.target.value));\n    };\n\n    const handleEditQtyChange = (event) => {\n        setEditedQty(event.target.value);\n        // dispatch(portfolioActions.setEditedQty(event.target.value));\n    };\n\n    const callForPortfolio = async () => {\n        // console.log(backendAPIs);\n        const res = await backendAPIs.pullPortfolio();\n        // console.log(res.data.data);\n        // setPortfolio(res.data.data);\n    };\n\n    const checkEditMode = () => {\n        if (portfolio.editMode === true) {\n            return (\n                setEditedToken(portfolio.recalledTokens.recalledToken),\n                setEditedPrice(portfolio.recalledTokens.recalledPrice),\n                setEditedQty(portfolio.recalledTokens.recalledQty)\n            );\n        }\n    };\n\n    // const handleEditSubmit = () => {\n    //     const data = {\n    //         token: editedToken,\n    //         price: editedPrice,\n    //         quantity: editedQty,\n    //     };\n    //             backendAPIs.editPortfolio(data);\n\n    // };\n\n    useEffect(() => {\n        callForPortfolio();\n        checkEditMode();\n    }, [portfolio]);\n\n    return (\n        <Box\n            sx={{\n                bgcolor: \"primary.main\",\n                display: \"flex\",\n                alignItems: \"center\",\n                \"& > :not(style)\": { m: 1 },\n            }}\n        >\n            {portfolio.editMode === true ? (\n                <div align=\"center\">\n                    <TextField\n                        value={editedToken}\n                        helperText=\"Please enter your token\"\n                        id=\"demo-helper-text-misaligned\"\n                        label=\"Token\"\n                        variant=\"filled\"\n                        color=\"\"\n                        focused\n                        type=\"String\"\n                        onChange={handleEditIdChange}\n                        sx={{ margin: 1.5 }}\n                        name=\"id\"\n                    />\n                    <TextField\n                        value={editedPrice}\n                        helperText=\"Please enter your purchase price\"\n                        id=\"demo-helper-text-misaligned-no-helper\"\n                        label=\"Price\"\n                        variant=\"filled\"\n                        color=\"\"\n                        focused\n                        type=\"Number\"\n                        onChange={handleEditPriceChange}\n                        sx={{ margin: 1.5 }}\n                        name=\"price\"\n                    />\n                    <TextField\n                        value={editedQty}\n                        helperText=\"Please enter your purchase quantity\"\n                        id=\"demo-helper-text-misaligned-no-helper\"\n                        label=\"Qty\"\n                        variant=\"filled\"\n                        color=\"\"\n                        focused\n                        type=\"Number\"\n                        onChange={handleEditQtyChange}\n                        sx={{ margin: 1.5 }}\n                        name=\"qty\"\n                    />\n                </div>\n            ) : (\n                <div>\n                    <TextField\n                        value={portfolio.token}\n                        helperText=\"Please enter your token\"\n                        id=\"demo-helper-text-misaligned\"\n                        label=\"Token\"\n                        variant=\"filled\"\n                        color=\"\"\n                        focused\n                        type=\"String\"\n                        onChange={handleIdChange}\n                        sx={{ margin: 1.5 }}\n                        name=\"token\"\n                    />\n                    <TextField\n                        value={portfolio.price}\n                        helperText=\"Please enter your purchase price\"\n                        id=\"demo-helper-text-misaligned-no-helper\"\n                        label=\"Price\"\n                        variant=\"filled\"\n                        color=\"\"\n                        focused\n                        type=\"Number\"\n                        onChange={handlePriceChange}\n                        sx={{ margin: 1.5 }}\n                        name=\"price\"\n                    />\n                    <TextField\n                        value={portfolio.qty}\n                        helperText=\"Please enter your purchase quantity\"\n                        id=\"demo-helper-text-misaligned-no-helper\"\n                        label=\"Qty\"\n                        variant=\"filled\"\n                        color=\"\"\n                        focused\n                        type=\"Number\"\n                        onChange={handleQtyChange}\n                        sx={{ margin: 1.5 }}\n                        namne=\"qty\"\n                    />\n                </div>\n            )}\n\n            {portfolio.editMode === true ? (\n                <Button variant=\"contained\" onClick={handleSubmitEdit}>\n                    Save\n                </Button>\n            ) : (\n                <Button variant=\"contained\" onClick={handleSubmit}>\n                    Submit\n                </Button>\n            )}\n        </Box>\n    );\n}\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/utils/backendAPIs.js",["336","337","338"],[],"import axios from \"axios\";\nconst loginUrl = \"/users\";\nconst porfolioUrl = \"/portfolio\";\nconst watchlistUrl = \"/watchlist\";\nconst localHost = \"http://127.0.0.1:5001\";\n\nconst login = async (body) => {\n    console.log(body);\n    const res = await axios.post(localHost + \"/users/login\", body);\n    return res;\n\n    // console.log(res);\n};\n\nconst loginStatus = async (body) => {\n    const res = await axios.post(localHost + \"/users/login/status\", body);\n    return res;\n};\n\nconst status = async () => {\n    const res = await axios.post(localHost + \"/users/status\");\n    return res;\n};\n\nconst logout = async () => {\n    const res = await axios.post(localHost + \"/users/logout\");\n    return res;\n};\n\nconst createNewUser = async (body) => {\n    const res = await axios.post(localHost + \"/users/newuser\", body);\n    return res;\n};\n\nconst addUserNewPortfolio = async (body) => {\n    console.log(body);\n    const res = await axios.post(localHost + \"/users/portfolio/newentry\", body);\n    // console.log(response);\n    return res;\n};\n\n//\n//PORTFOLIO\n//\n\nconst addNewPortfolio = async (body) => {\n    console.log(body);\n    const res = await axios.post(localHost + \"/portfolio/newentry\", body);\n    // console.log(response);\n    return res;\n};\n\nconst removePortfolio = async (body) => {\n    console.log(`backendAPI ${body}`);\n    const res = await axios.post(localHost + \"/portfolio/removeentry\", {\n        token: body,\n    });\n    console.log(\"Removed Entry\", res);\n    return res;\n};\n\nconst editPortfolio = async (body) => {\n    const res = await axios.post(localHost + \"/portfolio/entryupdate\", {\n        token: body,\n    });\n    return res;\n};\n\nconst submitEditedPortfolio = async (body) => {\n    console.log(body);\n    const res = await axios.post(localHost + \"/portfolio/entryupdatesubmit\", {\n        body,\n    });\n    console.log(\"hello\");\n    return res;\n};\n\nconst pullPortfolio = async () => {\n    const res = await axios.get(localHost + \"/portfolio/pull\");\n    return res;\n};\n\n//\n//WATCHLIST\n//\n\nconst addWatchlist = async (body) => {\n    console.log(body);\n    const res = await axios.post(localHost + \"/users/watchlist/newwatch\", body);\n    return res;\n};\n\nconst callWatchlistData = async (body) => {\n    console.log(body);\n    const res = await axios.post(localHost + \"/users/watchlist/getwatch\", body);\n    return res;\n};\n\nconst removeWatchlist = async (body) => {\n    console.log(body);\n    const res = await axios.post(\n        localHost + \"/users/watchlist/removewatch\",\n        body\n    );\n    console.log(res);\n    return res;\n};\n\nconst apiCalls = {\n    login,\n    logout,\n    createNewUser,\n    addNewPortfolio,\n    removePortfolio,\n    editPortfolio,\n    pullPortfolio,\n    addWatchlist,\n    removeWatchlist,\n    callWatchlistData,\n    submitEditedPortfolio,\n    addUserNewPortfolio,\n    loginStatus,\n    status,\n};\n\nexport default apiCalls;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Login.js",["339"],[],"import React, { useState } from \"react\";\nimport { Container, TextField, Box, Button } from \"@mui/material\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { userActions } from \"../redux/user\";\nimport backendAPIs from \"../utils/backendAPIs\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Login = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    let navigate = useNavigate();\n\n    const dispatch = useDispatch();\n    const user = useSelector((state) => state.user);\n\n    const handleUsernameChange = (event) => {\n        setUsername(event.target.value);\n    };\n\n    const handlePasswordChange = (event) => {\n        setPassword(event.target.value);\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // console.log(username);\n        const data = {\n            username: username,\n            password: password,\n        };\n        console.log(data);\n        backendAPIs.login(data);\n        // backendAPIs.loginStatus(true);\n        dispatch(userActions.login(username));\n        navigate(\"/home\");\n    };\n\n    return (\n        <>\n            <Container sx={{ display: \"flex\", flexDirection: \"column\" }}>\n                <Box sx={{ backgroundColor: \"white\" }}>\n                    <TextField\n                        helperText=\"Please enter your username\"\n                        id=\"Username\"\n                        label=\"Username\"\n                        onChange={handleUsernameChange}\n                    />\n                    <TextField\n                        helperText=\"Please enter a password\"\n                        id=\"Password\"\n                        label=\"Password\"\n                        onChange={handlePasswordChange}\n                        // color=\"white\"\n                    />\n                    <Button variant=\"contained\" onClick={handleSubmit}>\n                        Login\n                    </Button>\n                    <Button variant=\"contained\" href=\"/signup\">\n                        Sign Up\n                    </Button>\n                </Box>\n            </Container>\n        </>\n    );\n};\n\nexport default Login;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/SignUp.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/redux/store.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/redux/user.js",["340"],[],"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst userSlice = createSlice({\n    name: \"user\",\n    initialState: { username: \"\", name: \"\", password: \"\", auth: false },\n    reducers: {\n        login(state, action) {\n            console.log(\"Logged In\");\n            state.username = action.payload;\n            state.auth = true;\n        },\n        logout(state) {\n            state.username = \"\";\n            state.auth = false;\n        },\n        createRegistration: (state, action) => {\n            state.username = action.payload.userName;\n            state.name = action.payload.name;\n            state.password = action.payload.password;\n        },\n    },\n});\n\nconst store = configureStore({\n    reducer: userSlice.reducer,\n});\n\nexport const userActions = userSlice.actions;\n\nexport default userSlice.reducer;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Watchlist.js",["341","342","343","344","345","346"],[],"import React from \"react\";\nimport ResponsiveAppBar from \"../component/ResponsiveAppBar\";\nimport WatchListTable from \"../component/WatchListTable\";\n// import WatchlistTable from \"../component/WatchListTable\";\nimport user from \"../redux/user\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport userSlice, { userActions } from \"../redux/user\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Watchlist = () => {\n    let navigate = useNavigate();\n\n    // const dispatch = useDispatch();\n    const user = useSelector((state) => state.user);\n\n    const status = () => {\n        if (user.auth === true) {\n            console.log(\"you may enter\");\n        } else {\n            navigate(\"/home\");\n        }\n    };\n\n    useEffect(() => {\n        status();\n    }, []);\n    return (\n        <>\n            <ResponsiveAppBar />\n            <WatchListTable />\n        </>\n    );\n};\n\nexport default Watchlist;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/WatchListTable.js",["347","348","349","350","351"],[],"import React from \"react\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport axios from \"axios\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { Typography } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Button, Box } from \"@mui/material\";\nimport backendAPIs from \"../utils/backendAPIs\";\nimport { singleToken } from \"../utils/coingeckoAPICalls\";\nimport { useState, useEffect } from \"react\";\nimport { Api } from \"@mui/icons-material\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport watchlistSlice, { watchlistActions } from \"../redux/watchlistSlice\";\n\nconst WatchListTable = () => {\n    const watchlist = useSelector((state) => state.watchlist);\n    const [watchlistData, setWatchlistData] = useState([]);\n    // console.log(watchlist);\n    // const list = \"\"\n    let recalledData = [];\n    // const [watchlist, setWatchlist] = useState([]);\n    // const mappedData = [];\n    // const topTen = [];\n    const coingeckoData = [];\n    const dispatch = useDispatch();\n    const user = useSelector((state) => state.user);\n    // console.log(user);\n\n    const callForWatchlist = async () => {\n        // console.log(watchlist);\n        const body = { username: user.username };\n        // console.log(body);\n        const res = await backendAPIs.callWatchlistData(body);\n        // console.log(res);\n        recalledData = res.data.getWatch.watchlist;\n        // console.log(recalledData);\n\n        for await (let element of recalledData) {\n            // console.log(element);\n            const response = await axios.get(singleToken(element));\n            // console.log(\"hello\");\n            coingeckoData.push(response.data);\n            // console.log(coingeckoData);\n        }\n\n        setWatchlistData(coingeckoData);\n        // console.log(watchlistData);\n    };\n\n    // console.log(watchlistData);\n\n    // const getString = mappedData.map ((element, index) => {\n    //     const coingeckoRes = await axios.get(singleToken(getString));\n    // console.log(watchlistData);\n    //     return index\n    // });\n    // const coingeckoRes = await axios.get(singleToken(getString));\n\n    // setWatchlistData(res.data.data);\n\n    // console.log(callWatchlistData);\n    // setFaves(res.data); // -> should be redux state\n    // console.log(res);\n\n    useEffect(() => {\n        console.log(\"calling for watchlist\");\n        callForWatchlist();\n        // outsideApi();\n    }, [watchlist]);\n\n    const handleDelete = async (e) => {\n        // const body = { username: user.username };\n        e.preventDefault();\n        const body = { username: user.username, token: e.currentTarget.value };\n        // console.log(body);\n        console.log(\"TRYING TO PRINTTTTT\");\n        dispatch(watchlistActions.setDelete()); // not setting\n        // dispatch(watchlistActions.setToken(body.token)); // not setting\n        console.log(watchlist);\n        const res = await backendAPIs.removeWatchlist(body);\n        // console.log(res);\n        dispatch(watchlistActions.setDefault());\n        console.log(watchlist);\n\n        // dispatch(watchlistActions.setToken(\"\"));\n        // dispatch(portfolioActions.setDeleteMode(true));\n        // dispatch(portfolioActions.setDelete(true));\n        // dispatch(portfolioActions.handleReset());\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"holder\">\n                <h2 className=\"header\">Watchlist</h2>\n                <br />\n                <TableContainer component={Paper}>\n                    <Table sx={{ minWidth: 350 }} aria-label=\"simple table\">\n                        <Typography\n                            variant=\"h4\"\n                            style={{ margin: 18, fontFamily: \"Roboto\" }}\n                        ></Typography>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell></TableCell>\n                                <TableCell>Token</TableCell>\n                                <TableCell align=\"center\">Price</TableCell>\n                                <TableCell align=\"center\">Market Cap</TableCell>\n                                <TableCell align=\"center\">% Change</TableCell>\n                                <TableCell></TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {/* {JSON.stringify(watchlistData[1].id)} */}\n                            {watchlistData.map((token) => (\n                                <TableRow\n                                    key={token.name}\n                                    sx={{\n                                        \"&:last-child td, &:last-child th\": {\n                                            border: 0,\n                                        },\n                                    }}\n                                >\n                                    <TableCell align=\"center\">\n                                        <Box\n                                            component=\"img\"\n                                            sx={{\n                                                height: 25,\n                                                width: 25,\n                                                maxHeight: {\n                                                    xs: 233,\n                                                    md: 167,\n                                                },\n                                                maxWidth: {\n                                                    xs: 350,\n                                                    md: 250,\n                                                },\n                                            }}\n                                            alt=\"\"\n                                            src={`${token.image.small}`}\n                                        />\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {token.name}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        {`$ ${parseFloat(\n                                            token.market_data.current_price.usd\n                                        ).toLocaleString(\"en-US\")}`}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        {`$ ${parseFloat(\n                                            token.market_data.market_cap.usd\n                                        ).toLocaleString(\"en-US\")}`}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        {` ${parseFloat(\n                                            token.market_data\n                                                .price_change_percentage_24h\n                                        ).toFixed(2)}`}\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                        <IconButton\n                                            value={token.name}\n                                            color=\"primary\"\n                                            aria-label=\"add to shopping cart\"\n                                            sx={{\n                                                height: 30,\n                                                width: 30,\n                                            }}\n                                            onClick={handleDelete}\n                                        >\n                                            <DeleteIcon />\n                                        </IconButton>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        </div>\n    );\n};\n\nexport default WatchListTable;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/PortfolioTable.js",["352","353","354","355","356","357","358"],[],"import axios from \"axios\";\nimport React from \"react\";\nimport { tokenList } from \"../utils/coingeckoAPICalls\";\nimport { useState, useEffect } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport \"../fonts.css\";\nimport { Typography } from \"@mui/material\";\nimport { Button, Box } from \"@mui/material\";\nimport StarBorderIcon from \"@mui/icons-material/StarBorder\";\nimport IconButton from \"@mui/material/IconButton\";\nimport backendAPIs from \"../utils/backendAPIs\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport portfolioSlice, { portfolioActions } from \"../redux/portfolioSlice\";\n// import { AirlineSeatReclineNormalOutlined } from \"@material-ui/icons\";\n\nconst PortfolioTable = () => {\n    // const [tokens, setTokens] = useState([]);\n    // const topTen = tokens.filter((element, index) => index < 10);\n    // console.log(topTen);\n    // const [Pending, setPending] = useState();\n    const [portfolio, setPortfolio] = useState([]);\n    // const [apiData, setApiData] = useState();\n    // const [recallData, setRecallData] = useState([]);\n    const dispatch = useDispatch();\n    // const portfolioDelete = useSelector((state) => state.portfolio);\n    // console.log(portfolio);\n\n    const callForPortfolio = async () => {\n        // console.log(backendAPIs);\n        const res = await backendAPIs.pullPortfolio();\n        // console.log(res.data.data);\n        setPortfolio(res.data.data);\n    };\n    // console.log(\"API Call\");\n    // const res = await axios.get(\"http://127.0.0.1:5001/portfolio/pull\");\n    // console.log(\"API Called\");\n    // console.log(res);\n    // console.log(res.data.data);\n    // setPortfolio(res.data.data);\n    // console.log(portfolio);\n\n    const portfolioRedux = useSelector((state) => state.portfolio);\n\n    useEffect(() => {\n        callForPortfolio();\n    }, [portfolioRedux]);\n\n    const handleDelete = async (e) => {\n        // console.log(value);\n        const token = e.currentTarget.value;\n        console.log(token);\n        const res = await backendAPIs.removePortfolio(token);\n        // dispatch(portfolioActions.setDeleteMode(true));\n        dispatch(portfolioActions.setDelete(true));\n        dispatch(portfolioActions.handleReset());\n        // dispatch(portfolioActions.setDeleteMode(false));\n    };\n\n    const handleEdit = async (e) => {\n        dispatch(portfolioActions.setEdit(true));\n        const token = e.currentTarget.value;\n        console.log(token);\n        const res = await backendAPIs.editPortfolio(token);\n        dispatch(\n            portfolioActions.setRecall({\n                recalledToken: res.data.editedEntry.token,\n                recalledPrice: res.data.editedEntry.price,\n                recalledQty: res.data.editedEntry.quantity,\n            })\n\n            // need to refresh form and update table\n        );\n    };\n\n    console.log(portfolioRedux);\n\n    return (\n        <div>\n            {/* {JSON.stringify(tokens)} */}\n            <div className=\"int-container\">\n                <div className=\"holder\">\n                    <br />\n                    <h2 className=\"header\">Portfolio</h2>\n                    <br />\n                    <TableContainer component={Paper}>\n                        <Table sx={{ minWidth: 350 }} aria-label=\"simple table\">\n                            <Typography\n                                variant=\"h4\"\n                                style={{ margin: 18, fontFamily: \"Roboto\" }}\n                            ></Typography>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell\n                                        align=\"center\"\n                                        sx={{ width: 100 }}\n                                    >\n                                        Token\n                                    </TableCell>\n                                    <TableCell\n                                        align=\"center\"\n                                        sx={{ width: 100 }}\n                                    >\n                                        Chart\n                                    </TableCell>\n                                    <TableCell\n                                        align=\"center\"\n                                        sx={{ width: 150 }}\n                                    >\n                                        Price\n                                    </TableCell>\n                                    <TableCell\n                                        align=\"center\"\n                                        sx={{ width: 120 }}\n                                    >\n                                        Quantity\n                                    </TableCell>\n                                    <TableCell\n                                        align=\"center\"\n                                        sx={{ width: 100 }}\n                                    >\n                                        Current Price\n                                    </TableCell>\n                                    <TableCell></TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {portfolio.map((portfolio) => (\n                                    <TableRow\n                                        key={portfolio.name}\n                                        sx={{\n                                            \"&:last-child td, &:last-child th\":\n                                                {\n                                                    border: 0,\n                                                },\n                                        }}\n                                    >\n                                        <TableCell\n                                            component=\"th\"\n                                            scope=\"row\"\n                                            align=\"center\"\n                                        >\n                                            {portfolio.token}\n                                        </TableCell>\n                                        <TableCell></TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            sx={{ width: 150 }}\n                                        >\n                                            {`$ ${parseFloat(\n                                                portfolio.price\n                                            ).toFixed(2)}`}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            sx={{ width: 120 }}\n                                        >\n                                            {portfolio.quantity.toLocaleString(\n                                                \"en-US\"\n                                            )}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            sx={{ width: 100 }}\n                                        ></TableCell>\n                                        <TableCell sx={{ width: 50 }}>\n                                            <IconButton\n                                                value={portfolio.token}\n                                                color=\"primary\"\n                                                aria-label=\"Edit button\"\n                                                sx={{\n                                                    height: 30,\n                                                    width: 30,\n                                                }}\n                                                onClick={handleEdit}\n                                            >\n                                                <EditIcon />\n                                            </IconButton>\n                                            <IconButton\n                                                value={portfolio.token}\n                                                color=\"primary\"\n                                                aria-label=\"Del button\"\n                                                sx={{\n                                                    height: 30,\n                                                    width: 30,\n                                                }}\n                                                onClick={handleDelete}\n                                            >\n                                                <DeleteIcon />\n                                            </IconButton>\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default PortfolioTable;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/unused/PortfolioResultsTable.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/redux/portfolioSlice.js",["359"],[],"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst portfolioSlice = createSlice({\n    name: \"portfolio\",\n    initialState: {\n        delete: false,\n        token: \"\",\n        price: \"\",\n        qty: \"\",\n        editMode: false,\n        recalledTokens: \"\",\n        editedToken: \"\",\n        editedPrice: \"\",\n        editedQty: \"\",\n        deleteMode: false,\n        // recalledPrice: \"\",\n        // reaclledQty: \"\",\n    },\n    reducers: {\n        setToken: (state, action) => {\n            // console.log(state.token, action.payload);\n            state.token = action.payload;\n        },\n        setPrice: (state, action) => {\n            // console.log(state.price, action.payload);\n            state.price = action.payload;\n        },\n        setQty: (state, action) => {\n            // console.log(state.token, action.payload);\n            state.qty = action.payload;\n        },\n        setEditedToken: (state, action) => {\n            // console.log(state.token, action.payload);\n            state.token = action.payload;\n        },\n        setEditedPrice: (state, action) => {\n            // console.log(state.price, action.payload);\n            state.price = action.payload;\n        },\n        setEditedQty: (state, action) => {\n            // console.log(state.token, action.payload);\n            state.qty = action.payload;\n        },\n        handleSubmit: (state, action) => {\n            // state.submission = action.payload.submission;\n            state.token = \"\";\n            state.price = \"\";\n            state.qty = \"\";\n        },\n        setDelete: (state, action) => {\n            state.delete = action.payload;\n            console.log(state.delete, action.payload);\n        },\n        handleReset: (state, action) => {\n            state.delete = \"\";\n        },\n        setEdit: (state, action) => {\n            state.editMode = action.payload;\n            console.log(state.editMode);\n        },\n        setRecall: (state, action) => {\n            console.log(action.payload);\n            state.recalledTokens = action.payload;\n\n            // console.log(state.recalledToken);\n        },\n        handleResetEdit: (state, action) => {\n            state.recalledTokens = \"\";\n        },\n\n        // setRecallPrice: (state, action) => {\n        //     state.recalledPrice = action.payload;\n        //     console.log(state.recalledPrice);\n        // },\n        // setRecallQty: (state, action) => {\n        //     state.reacalledQty = action.payload;\n        //     console.log(state.reacalledQty);\n        // },\n    },\n});\n\n// const store = configureStore({\n//     reducer: userSlice.reducer,\n// });\n\nexport const portfolioActions = portfolioSlice.actions;\n\nexport default portfolioSlice.reducer;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/redux/watchlistSlice.js",["360"],[],"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst watchlistSlice = createSlice({\n    name: \"watchlist\",\n    initialState: {\n        delete: false,\n        token: \"\",\n        // price: \"\",\n        // qty: \"\",\n        // editMode: false,\n        // recall: \"\",\n        // recalledPrice: \"\",\n        // reaclledQty: \"\",\n    },\n    reducers: {\n        setToken: (state, action) => {\n            // console.log(state.token, action.payload);\n            state.token = action.payload;\n        },\n\n        setDelete: (state, action) => {\n            console.log(\"TRYING TO DELETE\", action.payload);\n            state.delete = true;\n            console.log(state.delete, action.payload);\n        },\n\n        setDefault: (state, action) => {\n            // console.log(\"TRYING TO RESET\", action.payload);\n            state.delete = false;\n            state.token = \"\";\n            // console.log(state.delete, action.payload);\n        },\n        // setPrice: (state, action) => {\n        //     // console.log(state.price, action.payload);\n        //     state.price = action.payload;\n        // },\n        // setQty: (state, action) => {\n        //     // console.log(state.token, action.payload);\n        //     state.qty = action.payload;\n        // },\n        // handleSubmit: (state, action) => {\n        //     // state.submission = action.payload.submission;\n        //     state.token = \"\";\n        //     state.price = \"\";\n        //     state.qty = \"\";\n        // },\n        // setDelete: (state, action) => {\n        //     state.delete = action.payload;\n        // },\n        // handleReset: (state, action) => {\n        //     state.delete = \"\";\n        // },\n        // setEdit: (state, action) => {\n        //     state.edit = action.payload;\n        //     console.log(state.editMode);\n        // },\n        // setRecall: (state, action) => {\n        //     console.log(action.payload);\n        //     state.recalledToken = action.payload;\n        //     state.recalledPrice = action.payload;\n        //     state.reacalledQty = action.payload;\n\n        //     // console.log(state.recalledToken);\n        // },\n\n        // // setRecallPrice: (state, action) => {\n        // //     state.recalledPrice = action.payload;\n        // //     console.log(state.recalledPrice);\n        // // },\n        // // setRecallQty: (state, action) => {\n        // //     state.reacalledQty = action.payload;\n        // //     console.log(state.reacalledQty);\n        // // },\n    },\n});\n\n// const store = configureStore({\n//     reducer: userSlice.reducer,\n// });\n\nexport const watchlistActions = watchlistSlice.actions;\n\nexport default watchlistSlice.reducer;\n",{"ruleId":"361","replacedBy":"362"},{"ruleId":"363","replacedBy":"364"},{"ruleId":"365","severity":1,"message":"366","line":4,"column":8,"nodeType":"367","messageId":"368","endLine":4,"endColumn":17},{"ruleId":"365","severity":1,"message":"369","line":1,"column":27,"nodeType":"367","messageId":"368","endLine":1,"endColumn":36},{"ruleId":"365","severity":1,"message":"370","line":2,"column":18,"nodeType":"367","messageId":"368","endLine":2,"endColumn":27},{"ruleId":"365","severity":1,"message":"371","line":2,"column":29,"nodeType":"367","messageId":"368","endLine":2,"endColumn":32},{"ruleId":"365","severity":1,"message":"372","line":6,"column":7,"nodeType":"367","messageId":"368","endLine":6,"endColumn":20},{"ruleId":"365","severity":1,"message":"373","line":2,"column":24,"nodeType":"367","messageId":"368","endLine":2,"endColumn":44},{"ruleId":"365","severity":1,"message":"370","line":3,"column":18,"nodeType":"367","messageId":"368","endLine":3,"endColumn":27},{"ruleId":"365","severity":1,"message":"371","line":3,"column":29,"nodeType":"367","messageId":"368","endLine":3,"endColumn":32},{"ruleId":"365","severity":1,"message":"374","line":3,"column":34,"nodeType":"367","messageId":"368","endLine":3,"endColumn":37},{"ruleId":"365","severity":1,"message":"375","line":182,"column":10,"nodeType":"367","messageId":"368","endLine":182,"endColumn":16},{"ruleId":"365","severity":1,"message":"376","line":185,"column":9,"nodeType":"367","messageId":"368","endLine":185,"endColumn":17},{"ruleId":"365","severity":1,"message":"377","line":186,"column":9,"nodeType":"367","messageId":"368","endLine":186,"endColumn":26},{"ruleId":"365","severity":1,"message":"378","line":203,"column":9,"nodeType":"367","messageId":"368","endLine":203,"endColumn":20},{"ruleId":"379","severity":1,"message":"380","line":209,"column":6,"nodeType":"381","endLine":209,"endColumn":24,"suggestions":"382"},{"ruleId":"365","severity":1,"message":"383","line":234,"column":9,"nodeType":"367","messageId":"368","endLine":234,"endColumn":19},{"ruleId":"365","severity":1,"message":"370","line":4,"column":18,"nodeType":"367","messageId":"368","endLine":4,"endColumn":27},{"ruleId":"365","severity":1,"message":"371","line":4,"column":29,"nodeType":"367","messageId":"368","endLine":4,"endColumn":32},{"ruleId":"365","severity":1,"message":"374","line":4,"column":34,"nodeType":"367","messageId":"368","endLine":4,"endColumn":37},{"ruleId":"365","severity":1,"message":"384","line":9,"column":10,"nodeType":"367","messageId":"368","endLine":9,"endColumn":20},{"ruleId":"379","severity":1,"message":"380","line":16,"column":6,"nodeType":"381","endLine":16,"endColumn":25,"suggestions":"385"},{"ruleId":"365","severity":1,"message":"386","line":5,"column":10,"nodeType":"367","messageId":"368","endLine":5,"endColumn":14},{"ruleId":"365","severity":1,"message":"387","line":33,"column":11,"nodeType":"367","messageId":"368","endLine":33,"endColumn":16},{"ruleId":"379","severity":1,"message":"388","line":45,"column":6,"nodeType":"381","endLine":45,"endColumn":8,"suggestions":"389"},{"ruleId":"365","severity":1,"message":"390","line":48,"column":9,"nodeType":"367","messageId":"368","endLine":48,"endColumn":18},{"ruleId":"365","severity":1,"message":"391","line":12,"column":9,"nodeType":"367","messageId":"368","endLine":12,"endColumn":18},{"ruleId":"365","severity":1,"message":"392","line":17,"column":10,"nodeType":"367","messageId":"368","endLine":17,"endColumn":26},{"ruleId":"365","severity":1,"message":"393","line":17,"column":28,"nodeType":"367","messageId":"368","endLine":17,"endColumn":47},{"ruleId":"365","severity":1,"message":"394","line":21,"column":10,"nodeType":"367","messageId":"368","endLine":21,"endColumn":15},{"ruleId":"365","severity":1,"message":"395","line":21,"column":17,"nodeType":"367","messageId":"368","endLine":21,"endColumn":25},{"ruleId":"365","severity":1,"message":"396","line":25,"column":9,"nodeType":"367","messageId":"368","endLine":25,"endColumn":19},{"ruleId":"365","severity":1,"message":"397","line":29,"column":9,"nodeType":"367","messageId":"368","endLine":29,"endColumn":20},{"ruleId":"365","severity":1,"message":"398","line":33,"column":9,"nodeType":"367","messageId":"368","endLine":33,"endColumn":23},{"ruleId":"365","severity":1,"message":"399","line":1,"column":38,"nodeType":"367","messageId":"368","endLine":1,"endColumn":47},{"ruleId":"361","replacedBy":"400"},{"ruleId":"363","replacedBy":"401"},{"ruleId":"365","severity":1,"message":"402","line":9,"column":10,"nodeType":"367","messageId":"368","endLine":9,"endColumn":15},{"ruleId":"365","severity":1,"message":"403","line":10,"column":10,"nodeType":"367","messageId":"368","endLine":10,"endColumn":18},{"ruleId":"365","severity":1,"message":"369","line":1,"column":17,"nodeType":"367","messageId":"368","endLine":1,"endColumn":26},{"ruleId":"365","severity":1,"message":"404","line":3,"column":10,"nodeType":"367","messageId":"368","endLine":3,"endColumn":16},{"ruleId":"365","severity":1,"message":"370","line":3,"column":18,"nodeType":"367","messageId":"368","endLine":3,"endColumn":27},{"ruleId":"365","severity":1,"message":"405","line":3,"column":29,"nodeType":"367","messageId":"368","endLine":3,"endColumn":36},{"ruleId":"365","severity":1,"message":"406","line":3,"column":38,"nodeType":"367","messageId":"368","endLine":3,"endColumn":48},{"ruleId":"365","severity":1,"message":"399","line":1,"column":38,"nodeType":"367","messageId":"368","endLine":1,"endColumn":47},{"ruleId":"361","replacedBy":"407"},{"ruleId":"363","replacedBy":"408"},{"ruleId":"365","severity":1,"message":"391","line":12,"column":11,"nodeType":"367","messageId":"368","endLine":12,"endColumn":20},{"ruleId":"365","severity":1,"message":"392","line":17,"column":12,"nodeType":"367","messageId":"368","endLine":17,"endColumn":28},{"ruleId":"365","severity":1,"message":"393","line":17,"column":30,"nodeType":"367","messageId":"368","endLine":17,"endColumn":49},{"ruleId":"365","severity":1,"message":"394","line":21,"column":12,"nodeType":"367","messageId":"368","endLine":21,"endColumn":17},{"ruleId":"365","severity":1,"message":"395","line":21,"column":19,"nodeType":"367","messageId":"368","endLine":21,"endColumn":27},{"ruleId":"365","severity":1,"message":"396","line":25,"column":11,"nodeType":"367","messageId":"368","endLine":25,"endColumn":21},{"ruleId":"365","severity":1,"message":"397","line":29,"column":11,"nodeType":"367","messageId":"368","endLine":29,"endColumn":22},{"ruleId":"365","severity":1,"message":"398","line":33,"column":11,"nodeType":"367","messageId":"368","endLine":33,"endColumn":25},{"ruleId":"361","replacedBy":"409"},{"ruleId":"363","replacedBy":"410"},{"ruleId":"365","severity":1,"message":"386","line":5,"column":10,"nodeType":"367","messageId":"368","endLine":5,"endColumn":14},{"ruleId":"365","severity":1,"message":"387","line":33,"column":11,"nodeType":"367","messageId":"368","endLine":33,"endColumn":16},{"ruleId":"379","severity":1,"message":"388","line":45,"column":6,"nodeType":"381","endLine":45,"endColumn":8,"suggestions":"411"},{"ruleId":"365","severity":1,"message":"390","line":48,"column":9,"nodeType":"367","messageId":"368","endLine":48,"endColumn":18},{"ruleId":"361","replacedBy":"412"},{"ruleId":"363","replacedBy":"413"},{"ruleId":"365","severity":1,"message":"370","line":4,"column":18,"nodeType":"367","messageId":"368","endLine":4,"endColumn":27},{"ruleId":"365","severity":1,"message":"371","line":4,"column":29,"nodeType":"367","messageId":"368","endLine":4,"endColumn":32},{"ruleId":"365","severity":1,"message":"374","line":4,"column":34,"nodeType":"367","messageId":"368","endLine":4,"endColumn":37},{"ruleId":"365","severity":1,"message":"384","line":9,"column":10,"nodeType":"367","messageId":"368","endLine":9,"endColumn":20},{"ruleId":"379","severity":1,"message":"380","line":16,"column":6,"nodeType":"381","endLine":16,"endColumn":25,"suggestions":"414"},{"ruleId":"365","severity":1,"message":"415","line":15,"column":8,"nodeType":"367","messageId":"368","endLine":15,"endColumn":19},{"ruleId":"365","severity":1,"message":"416","line":16,"column":8,"nodeType":"367","messageId":"368","endLine":16,"endColumn":20},{"ruleId":"365","severity":1,"message":"417","line":18,"column":23,"nodeType":"367","messageId":"368","endLine":18,"endColumn":34},{"ruleId":"365","severity":1,"message":"418","line":19,"column":8,"nodeType":"367","messageId":"368","endLine":19,"endColumn":17},{"ruleId":"365","severity":1,"message":"419","line":19,"column":21,"nodeType":"367","messageId":"368","endLine":19,"endColumn":32},{"ruleId":"365","severity":1,"message":"420","line":22,"column":7,"nodeType":"367","messageId":"368","endLine":22,"endColumn":15},{"ruleId":"365","severity":1,"message":"421","line":54,"column":11,"nodeType":"367","messageId":"368","endLine":54,"endColumn":22},{"ruleId":"379","severity":1,"message":"422","line":60,"column":8,"nodeType":"381","endLine":60,"endColumn":10,"suggestions":"423"},{"ruleId":"365","severity":1,"message":"424","line":14,"column":10,"nodeType":"367","messageId":"368","endLine":14,"endColumn":16},{"ruleId":"365","severity":1,"message":"425","line":17,"column":8,"nodeType":"367","messageId":"368","endLine":17,"endColumn":22},{"ruleId":"365","severity":1,"message":"426","line":17,"column":26,"nodeType":"367","messageId":"368","endLine":17,"endColumn":42},{"ruleId":"365","severity":1,"message":"427","line":19,"column":10,"nodeType":"367","messageId":"368","endLine":19,"endColumn":21},{"ruleId":"365","severity":1,"message":"418","line":21,"column":8,"nodeType":"367","messageId":"368","endLine":21,"endColumn":17},{"ruleId":"365","severity":1,"message":"419","line":21,"column":21,"nodeType":"367","messageId":"368","endLine":21,"endColumn":32},{"ruleId":"365","severity":1,"message":"428","line":29,"column":11,"nodeType":"367","messageId":"368","endLine":29,"endColumn":19},{"ruleId":"365","severity":1,"message":"429","line":30,"column":12,"nodeType":"367","messageId":"368","endLine":30,"endColumn":17},{"ruleId":"365","severity":1,"message":"430","line":32,"column":9,"nodeType":"367","messageId":"368","endLine":32,"endColumn":17},{"ruleId":"365","severity":1,"message":"431","line":35,"column":11,"nodeType":"367","messageId":"368","endLine":35,"endColumn":25},{"ruleId":"379","severity":1,"message":"432","line":55,"column":8,"nodeType":"381","endLine":55,"endColumn":10,"suggestions":"433"},{"ruleId":"365","severity":1,"message":"373","line":2,"column":24,"nodeType":"367","messageId":"368","endLine":2,"endColumn":44},{"ruleId":"365","severity":1,"message":"370","line":3,"column":18,"nodeType":"367","messageId":"368","endLine":3,"endColumn":27},{"ruleId":"365","severity":1,"message":"371","line":3,"column":29,"nodeType":"367","messageId":"368","endLine":3,"endColumn":32},{"ruleId":"365","severity":1,"message":"374","line":3,"column":34,"nodeType":"367","messageId":"368","endLine":3,"endColumn":37},{"ruleId":"365","severity":1,"message":"375","line":182,"column":10,"nodeType":"367","messageId":"368","endLine":182,"endColumn":16},{"ruleId":"365","severity":1,"message":"376","line":185,"column":9,"nodeType":"367","messageId":"368","endLine":185,"endColumn":17},{"ruleId":"365","severity":1,"message":"377","line":186,"column":9,"nodeType":"367","messageId":"368","endLine":186,"endColumn":26},{"ruleId":"365","severity":1,"message":"378","line":203,"column":9,"nodeType":"367","messageId":"368","endLine":203,"endColumn":20},{"ruleId":"379","severity":1,"message":"380","line":209,"column":6,"nodeType":"381","endLine":209,"endColumn":24,"suggestions":"434"},{"ruleId":"365","severity":1,"message":"383","line":234,"column":9,"nodeType":"367","messageId":"368","endLine":234,"endColumn":19},{"ruleId":"365","severity":1,"message":"435","line":2,"column":8,"nodeType":"367","messageId":"368","endLine":2,"endColumn":29},{"ruleId":"365","severity":1,"message":"436","line":4,"column":8,"nodeType":"367","messageId":"368","endLine":4,"endColumn":19},{"ruleId":"365","severity":1,"message":"437","line":7,"column":8,"nodeType":"367","messageId":"368","endLine":7,"endColumn":12},{"ruleId":"365","severity":1,"message":"438","line":8,"column":21,"nodeType":"367","messageId":"368","endLine":8,"endColumn":29},{"ruleId":"365","severity":1,"message":"417","line":9,"column":23,"nodeType":"367","messageId":"368","endLine":9,"endColumn":34},{"ruleId":"365","severity":1,"message":"418","line":10,"column":8,"nodeType":"367","messageId":"368","endLine":10,"endColumn":17},{"ruleId":"365","severity":1,"message":"419","line":10,"column":21,"nodeType":"367","messageId":"368","endLine":10,"endColumn":32},{"ruleId":"379","severity":1,"message":"422","line":29,"column":8,"nodeType":"381","endLine":29,"endColumn":10,"suggestions":"439"},{"ruleId":"365","severity":1,"message":"440","line":8,"column":8,"nodeType":"367","messageId":"368","endLine":8,"endColumn":22},{"ruleId":"365","severity":1,"message":"441","line":18,"column":12,"nodeType":"367","messageId":"368","endLine":18,"endColumn":19},{"ruleId":"365","severity":1,"message":"442","line":41,"column":11,"nodeType":"367","messageId":"368","endLine":41,"endColumn":24},{"ruleId":"365","severity":1,"message":"443","line":140,"column":15,"nodeType":"367","messageId":"368","endLine":140,"endColumn":18},{"ruleId":"379","severity":1,"message":"444","line":168,"column":8,"nodeType":"381","endLine":168,"endColumn":19,"suggestions":"445"},{"ruleId":"365","severity":1,"message":"446","line":2,"column":7,"nodeType":"367","messageId":"368","endLine":2,"endColumn":15},{"ruleId":"365","severity":1,"message":"447","line":3,"column":7,"nodeType":"367","messageId":"368","endLine":3,"endColumn":18},{"ruleId":"365","severity":1,"message":"448","line":4,"column":7,"nodeType":"367","messageId":"368","endLine":4,"endColumn":19},{"ruleId":"365","severity":1,"message":"449","line":14,"column":11,"nodeType":"367","messageId":"368","endLine":14,"endColumn":15},{"ruleId":"365","severity":1,"message":"450","line":24,"column":7,"nodeType":"367","messageId":"368","endLine":24,"endColumn":12},{"ruleId":"365","severity":1,"message":"437","line":5,"column":8,"nodeType":"367","messageId":"368","endLine":5,"endColumn":12},{"ruleId":"365","severity":1,"message":"438","line":6,"column":21,"nodeType":"367","messageId":"368","endLine":6,"endColumn":29},{"ruleId":"365","severity":1,"message":"417","line":7,"column":23,"nodeType":"367","messageId":"368","endLine":7,"endColumn":34},{"ruleId":"365","severity":1,"message":"418","line":8,"column":8,"nodeType":"367","messageId":"368","endLine":8,"endColumn":17},{"ruleId":"365","severity":1,"message":"419","line":8,"column":21,"nodeType":"367","messageId":"368","endLine":8,"endColumn":32},{"ruleId":"379","severity":1,"message":"422","line":27,"column":8,"nodeType":"381","endLine":27,"endColumn":10,"suggestions":"451"},{"ruleId":"365","severity":1,"message":"424","line":13,"column":10,"nodeType":"367","messageId":"368","endLine":13,"endColumn":16},{"ruleId":"365","severity":1,"message":"452","line":17,"column":10,"nodeType":"367","messageId":"368","endLine":17,"endColumn":13},{"ruleId":"365","severity":1,"message":"425","line":19,"column":8,"nodeType":"367","messageId":"368","endLine":19,"endColumn":22},{"ruleId":"379","severity":1,"message":"453","line":75,"column":8,"nodeType":"381","endLine":75,"endColumn":19,"suggestions":"454"},{"ruleId":"365","severity":1,"message":"443","line":86,"column":15,"nodeType":"367","messageId":"368","endLine":86,"endColumn":18},{"ruleId":"365","severity":1,"message":"455","line":1,"column":8,"nodeType":"367","messageId":"368","endLine":1,"endColumn":13},{"ruleId":"365","severity":1,"message":"456","line":3,"column":10,"nodeType":"367","messageId":"368","endLine":3,"endColumn":19},{"ruleId":"365","severity":1,"message":"424","line":14,"column":10,"nodeType":"367","messageId":"368","endLine":14,"endColumn":16},{"ruleId":"365","severity":1,"message":"457","line":14,"column":18,"nodeType":"367","messageId":"368","endLine":14,"endColumn":21},{"ruleId":"365","severity":1,"message":"458","line":15,"column":8,"nodeType":"367","messageId":"368","endLine":15,"endColumn":22},{"ruleId":"365","severity":1,"message":"440","line":21,"column":8,"nodeType":"367","messageId":"368","endLine":21,"endColumn":22},{"ruleId":"365","severity":1,"message":"443","line":60,"column":15,"nodeType":"367","messageId":"368","endLine":60,"endColumn":18},{"ruleId":"365","severity":1,"message":"459","line":1,"column":23,"nodeType":"367","messageId":"368","endLine":1,"endColumn":37},{"ruleId":"365","severity":1,"message":"459","line":1,"column":23,"nodeType":"367","messageId":"368","endLine":1,"endColumn":37},"no-native-reassign",["460"],"no-negated-in-lhs",["461"],"no-unused-vars","'WatchList' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'commodityList' is assigned a value but never used.","'SlideTransitionGroup' is defined but never used.","'Col' is defined but never used.","'result' is assigned a value but never used.","'forexAPI' is assigned a value but never used.","'secondaryForexAPI' is assigned a value but never used.","'displayName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getResults'. Either include it or remove the dependency array.","ArrayExpression",["462"],"'forexArray' is assigned a value but never used.","'tokenPrice' is assigned a value but never used.",["463"],"'data' is assigned a value but never used.","'getId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'makeApiCall' and 'throttledApiCall'. Either include them or remove the dependency array.",["464"],"'displayId' is assigned a value but never used.","'forexName' is assigned a value but never used.","'aggregatedSearch' is assigned a value but never used.","'setAggregatedSearch' is assigned a value but never used.","'input' is assigned a value but never used.","'setInput' is assigned a value but never used.","'mergeForex' is assigned a value but never used.","'mergeCrypto' is assigned a value but never used.","'mergeCommodity' is assigned a value but never used.","'Component' is defined but never used.",["460"],["461"],"'store' is defined but never used.","'Provider' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.",["460"],["461"],["460"],["461"],["465"],["460"],["461"],["466"],"'LogInButton' is defined but never used.","'SignUpButton' is defined but never used.","'useDispatch' is defined but never used.","'userSlice' is defined but never used.","'userActions' is defined but never used.","'settings' is assigned a value but never used.","'handleLogIn' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'status'. Either include it or remove the dependency array.",["467"],"'Button' is defined but never used.","'watchlistSlice' is defined but never used.","'watchlistActions' is defined but never used.","'singleToken' is defined but never used.","'dispatch' is assigned a value but never used.","'faves' is assigned a value but never used.","'navigate' is assigned a value but never used.","'portfolioRedux' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkIfLoggedIn'. Either include it or remove the dependency array.",["468"],["469"],"'PortfolioResultsTable' is defined but never used.","'backendAPIs' is defined but never used.","'user' is defined but never used.","'useState' is defined but never used.",["470"],"'portfolioSlice' is defined but never used.","'loading' is assigned a value but never used.","'initialValues' is assigned a value but never used.","'res' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkEditMode'. Either include it or remove the dependency array.",["471"],"'loginUrl' is assigned a value but never used.","'porfolioUrl' is assigned a value but never used.","'watchlistUrl' is assigned a value but never used.","'user' is assigned a value but never used.","'store' is assigned a value but never used.",["472"],"'Api' is defined but never used.","React Hook useEffect has a missing dependency: 'callForWatchlist'. Either include it or remove the dependency array.",["473"],"'axios' is defined but never used.","'tokenList' is defined but never used.","'Box' is defined but never used.","'StarBorderIcon' is defined but never used.","'configureStore' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"474","fix":"475"},{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},{"desc":"478","fix":"480"},{"desc":"476","fix":"481"},{"desc":"482","fix":"483"},{"desc":"484","fix":"485"},{"desc":"474","fix":"486"},{"desc":"482","fix":"487"},{"desc":"488","fix":"489"},{"desc":"482","fix":"490"},{"desc":"491","fix":"492"},"Update the dependencies array to be: [getResults, props.forexState]",{"range":"493","text":"494"},"Update the dependencies array to be: [getResults, props.cryptoState]",{"range":"495","text":"496"},"Update the dependencies array to be: [makeApiCall, throttledApiCall]",{"range":"497","text":"498"},{"range":"499","text":"498"},{"range":"500","text":"496"},"Update the dependencies array to be: [status]",{"range":"501","text":"502"},"Update the dependencies array to be: [checkIfLoggedIn]",{"range":"503","text":"504"},{"range":"505","text":"494"},{"range":"506","text":"502"},"Update the dependencies array to be: [checkEditMode, portfolio]",{"range":"507","text":"508"},{"range":"509","text":"502"},"Update the dependencies array to be: [callForWatchlist, watchlist]",{"range":"510","text":"511"},[8446,8464],"[getResults, props.forexState]",[556,575],"[getResults, props.cryptoState]",[1175,1177],"[makeApiCall, throttledApiCall]",[1175,1177],[556,575],[1861,1863],"[status]",[2077,2079],"[checkIfLoggedIn]",[8446,8464],[940,942],[5243,5254],"[checkEditMode, portfolio]",[818,820],[2724,2735],"[callForWatchlist, watchlist]"]