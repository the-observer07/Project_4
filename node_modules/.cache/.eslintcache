[{"/Users/inspireadmin/Documents/GitHub/Project_2/src/index.js":"1","/Users/inspireadmin/Documents/GitHub/Project_2/src/App.js":"2","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Commodity.js":"3","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Forex.js":"4","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Crypto.js":"5","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenListApiData.js":"6","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenList.js":"7","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/AggregateInput.js":"8","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/CommodityList.js":"9","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/ForexList.js":"10","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/DataTicker.js":"11","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/WatchList.js":"12","/Users/inspireadmin/Documents/GitHub/Project_4/src/index.js":"13","/Users/inspireadmin/Documents/GitHub/Project_4/src/App.js":"14","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Home.js":"15","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/DataTicker.js":"16","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/Crypto.js":"17","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/User.js":"18","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/ResponsiveAppBar.js":"19","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/Table.js":"20","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/unused/Forex.js":"21","/Users/inspireadmin/Documents/GitHub/Project_4/src/utils/coingeckoAPICalls.js":"22","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/LogInButton.js":"23","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Portfolio.js":"24","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/PortfolioForm.js":"25","/Users/inspireadmin/Documents/GitHub/Project_4/src/utils/backendAPIs.js":"26","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Login.js":"27","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/SignUp.js":"28","/Users/inspireadmin/Documents/GitHub/Project_4/src/redux/store.js":"29","/Users/inspireadmin/Documents/GitHub/Project_4/src/redux/user.js":"30","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Watchlist.js":"31","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/WatchListTable.js":"32","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/PortfolioTable.js":"33","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/unused/PortfolioResultsTable.js":"34","/Users/inspireadmin/Documents/GitHub/Project_4/src/redux/portfolioSlice.js":"35","/Users/inspireadmin/Documents/GitHub/Project_4/src/redux/watchlistSlice.js":"36","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/Loading.js":"37","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/charts/MainLineChart.js":"38","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/unused/SignUpButton.js":"39","/Users/inspireadmin/Documents/GitHub/Project_4/src/redux/coingeckoAPISlice.js":"40","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/Popup.js":"41"},{"size":142,"mtime":1616592305000,"results":"42","hashOfConfig":"43"},{"size":463,"mtime":1648198519549,"results":"44","hashOfConfig":"43"},{"size":2076,"mtime":1648198519550,"results":"45","hashOfConfig":"43"},{"size":11290,"mtime":1648198519552,"results":"46","hashOfConfig":"43"},{"size":1663,"mtime":1648198519551,"results":"47","hashOfConfig":"43"},{"size":845502,"mtime":1648198519558,"results":"48","hashOfConfig":"43"},{"size":1355,"mtime":1648198519553,"results":"49","hashOfConfig":"43"},{"size":2226,"mtime":1648198519550,"results":"50","hashOfConfig":"43"},{"size":238,"mtime":1648007118042,"results":"51","hashOfConfig":"43"},{"size":7155,"mtime":1648025038708,"results":"52","hashOfConfig":"43"},{"size":1904,"mtime":1648198519552,"results":"53","hashOfConfig":"43"},{"size":263,"mtime":1648198519559,"results":"54","hashOfConfig":"43"},{"size":329,"mtime":1651250847871,"results":"55","hashOfConfig":"56"},{"size":1033,"mtime":1651762431608,"results":"57","hashOfConfig":"56"},{"size":876,"mtime":1651802283743,"results":"58","hashOfConfig":"56"},{"size":3015,"mtime":1651803015430,"results":"59","hashOfConfig":"56"},{"size":1663,"mtime":1648198519551,"results":"60","hashOfConfig":"56"},{"size":102,"mtime":1650942127776,"results":"61","hashOfConfig":"56"},{"size":11002,"mtime":1651778489651,"results":"62","hashOfConfig":"56"},{"size":21677,"mtime":1651806195530,"results":"63","hashOfConfig":"56"},{"size":11290,"mtime":1648198519552,"results":"64","hashOfConfig":"56"},{"size":546,"mtime":1651758025768,"results":"65","hashOfConfig":"56"},{"size":1732,"mtime":1651048159780,"results":"66","hashOfConfig":"56"},{"size":1314,"mtime":1651775585977,"results":"67","hashOfConfig":"56"},{"size":8776,"mtime":1651779258615,"results":"68","hashOfConfig":"56"},{"size":3338,"mtime":1651754854335,"results":"69","hashOfConfig":"56"},{"size":4938,"mtime":1651806383586,"results":"70","hashOfConfig":"56"},{"size":4052,"mtime":1651806584135,"results":"71","hashOfConfig":"56"},{"size":404,"mtime":1651399889150,"results":"72","hashOfConfig":"56"},{"size":835,"mtime":1651654609890,"results":"73","hashOfConfig":"56"},{"size":1036,"mtime":1651775707339,"results":"74","hashOfConfig":"56"},{"size":11159,"mtime":1651777468102,"results":"75","hashOfConfig":"56"},{"size":11644,"mtime":1651778231407,"results":"76","hashOfConfig":"56"},{"size":2488,"mtime":1651049013220,"results":"77","hashOfConfig":"56"},{"size":2875,"mtime":1651743454932,"results":"78","hashOfConfig":"56"},{"size":2673,"mtime":1651730736641,"results":"79","hashOfConfig":"56"},{"size":357,"mtime":1651751934149,"results":"80","hashOfConfig":"56"},{"size":587,"mtime":1651751981458,"results":"81","hashOfConfig":"56"},{"size":2408,"mtime":1651048571664,"results":"82","hashOfConfig":"56"},{"size":885,"mtime":1651751722726,"results":"83","hashOfConfig":"56"},{"size":1283,"mtime":1651761809545,"results":"84","hashOfConfig":"56"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1as9eb2",{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},"9317a4",{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"125"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"125"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"125"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"125"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"125"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"125"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"125"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"125"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"125"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"125"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"125"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"125"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"125"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"125"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"125"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/inspireadmin/Documents/GitHub/Project_2/src/index.js",[],[],["227","228"],"/Users/inspireadmin/Documents/GitHub/Project_2/src/App.js",["229"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Commodity.js",["230","231","232","233"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Forex.js",["234","235","236","237","238","239","240","241","242","243"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Crypto.js",["244","245","246","247","248"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenListApiData.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenList.js",["249","250","251","252"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/AggregateInput.js",["253","254","255","256","257","258","259","260"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/CommodityList.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/ForexList.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/DataTicker.js",["261"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/WatchList.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/index.js",[],[],["262","263"],"/Users/inspireadmin/Documents/GitHub/Project_4/src/App.js",["264","265"],[],"// import \"./App.css\";\nimport React from \"react\";\nimport { Route, Navigate, BrowserRouter, Routes } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Portfolio from \"./pages/Portfolio\";\nimport User from \"./pages/User\";\nimport SignUp from \"./pages/SignUp\";\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport Watchlist from \"./pages/Watchlist\";\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <Routes>\n                <Route path=\"/home\" element={<Home />} />\n                <Route path=\"logout\" element={<Navigate replace to=\"/\" />} />\n                <Route path=\"/login\" element={<Login />} />\n                <Route path=\"/signup\" element={<SignUp />} />\n                <Route path=\"/user\" element={<User />} />\n                <Route path=\"/portfolio\" element={<Portfolio />} />\n                <Route path=\"/watchlist\" element={<Watchlist />} />\n            </Routes>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Home.js",["266","267","268","269","270","271"],[],"import React, { useEffect } from \"react\";\nimport DataTicker from \"../component/DataTicker\";\nimport { AppBar, Container, Toolbar, Typography } from \"@mui/material\";\n// import WatchList from \"./component/WatchList\";\n// import { useNavigate } from \"react-router-dom\";\nimport ResponsiveAppBar from \"../component/ResponsiveAppBar\";\nimport Table from \"../component/Table\";\nimport MainLineChart from \"../component/charts/MainLineChart\";\n\nconst Home = () => {\n    return (\n        <div>\n            <ResponsiveAppBar />\n            <DataTicker />\n            <br />\n            <br />\n            <br />\n            <div className=\"container\">\n                <Table />\n            </div>\n            <br />\n            {/* <MainLineChart /> */}\n            <br />\n            <br />\n            <br />\n            {/* <WatchList /> */}\n        </div>\n    );\n};\n\nexport default Home;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/DataTicker.js",["272"],[],"import React, { useState, useEffect, Component } from \"react\";\nimport Ticker, { FinancialTicker, NewsTicker } from \"nice-react-ticker\";\nimport \"../index.css\";\n\nconst DataTicker = () => {\n    const [cryptoData, setCryptoData] = useState([]);\n    const [newsData, setNewsData] = useState(\"\");\n\n    const cryptoApiTicker =\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\";\n    const financialNewsTicker =\n        \"https://api.marketaux.com/v1/news/all?symbols=TSLA,GME,AMC&filter_entities=true&language=en&api_token=WMIGwTBG1aEbYNV6vYbrBbu8TXB4R0mAXH1Zu5tU\";\n\n    useEffect(() => {\n        fetchFinancialNewsAPI();\n        fetchCryptoAPI();\n        setInterval(() => {\n            fetchCryptoAPI();\n        }, 10000);\n    }, []);\n\n    const fetchCryptoAPI = async () => {\n        const percentageChange = \"\";\n\n        const res = await fetch(cryptoApiTicker);\n        const rawData = await res.json();\n        // console.log(rawData);\n        // let sevenData = rawData.tickers;\n        // console.log(sevenData);\n        const firstSeven = rawData.filter((element, index) => index < 10);\n        // console.log(firstSeven);\n\n        const filteredData = firstSeven.map((element, index) => {\n            // console.log(element.price_change_percentage_24h);\n            return (\n                <FinancialTicker\n                    id={index}\n                    change={\n                        percentageChange\n                            ? element.price_change_percentage_24h < 0\n                            : element.price_change_percentage_24h > 0\n                    }\n                    symbol={element.symbol} // to upper case it...\n                    lastPrice={`${parseFloat(element.high_24h).toFixed(2)}`}\n                    currentPrice={`${parseFloat(element.current_price).toFixed(\n                        2\n                    )}`}\n                    percentage={`${parseFloat(\n                        element.price_change_percentage_24h\n                    ).toFixed(2)}`}\n                />\n            );\n        });\n        setCryptoData(filteredData);\n    };\n\n    const fetchFinancialNewsAPI = async () => {\n        const res = await fetch(financialNewsTicker);\n        const rawData = await res.json();\n        const financialMappedData = rawData.data.map((element, index) => {\n            return (\n                <NewsTicker\n                    id={index}\n                    icon={element.image_url}\n                    title={element.title}\n                    url={element.url}\n                />\n            );\n        });\n        setNewsData(financialMappedData);\n    };\n\n    return (\n        <div>\n            <Ticker className=\"tickerItemFinancial\" sx={{ display: \"flex\" }}>\n                {cryptoData}\n            </Ticker>\n            <div className=\"newsticker\">\n                <Ticker isNewsTicker={true}>{newsData}</Ticker>\n            </div>\n        </div>\n    );\n};\n\nexport default DataTicker;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/Crypto.js",["273","274","275","276","277"],[],"import React, { useState, useEffect } from \"react\";\n\nimport tokenList from \"./TokenListApiData\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\n// import AggregateInput from \"./AggregateInput\";\n\nconst Crypto = (props) => {\n  const [filterData, setFilterData] = useState(\"\");\n  const [tokenPrice, setTokenPrice] = useState([]);\n  const [extractedData, setExtractedData] = useState(\"\");\n\n  const cryptoAPIQuery = `https://api.coingecko.com/api/v3/simple/price?ids=${filterData}&vs_currencies=USD`;\n\n  useEffect(() => {\n    getResults();\n  }, [props.cryptoState]);\n\n  const getResults = () => {\n    const searchWord = props.searchWord;\n    console.log(searchWord);\n    const newFilter = Object.keys(tokenList).reduce((result, key) => {\n      if (tokenList[key].name.match(searchWord)) {\n        result = tokenList[key].id;\n      }\n\n      return result;\n    }, \"\");\n    setFilterData(newFilter);\n    console.log(newFilter);\n  };\n\n  const makeApiCall = async () => {\n    const res = await fetch(cryptoAPIQuery);\n    const rawData = await res.json();\n\n    setTokenPrice(rawData);\n    console.log(rawData);\n\n    const tokenPriceArray = [rawData];\n    const obj1 = tokenPriceArray[0];\n    console.log(obj1);\n\n    const obj2 = obj1[Object.keys(obj1)[0]];\n    console.log(obj2);\n\n    const value = obj2[Object.keys(obj2)[0]];\n    console.log(value);\n    setExtractedData(value);\n  };\n\n  return (\n    <div>\n      <br />\n      <Button onClick={makeApiCall} size=\"lg\">\n        Submit\n      </Button>\n      <br />\n      <br />\n      <br />\n      <div className=\"data\">Token price : ${extractedData}</div>\n      <br />\n    </div>\n  );\n};\n\nexport default Crypto;\n",["278","279"],"/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/User.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/component/ResponsiveAppBar.js",["280","281","282","283","284","285","286"],[],"import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useState, useEffect } from \"react\";\nimport LogInButton from \"../component/LogInButton\";\nimport SignUpButton from \"./unused/SignUpButton\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport userSlice, { userActions } from \"../redux/user\";\nimport logo from \"../cryptowhale.png\";\n\nconst pages = [\"Home\", \"Watchlist\", \"Portfolio\"];\nconst settings = [\"Profile\", \"Preferences\", \"Logout\"];\n\nconst ResponsiveAppBar = () => {\n    const [loggedIn, setLoggedIn] = useState(false);\n\n    const [anchorElNav, setAnchorElNav] = React.useState(null);\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n    //===========================================================================\n\n    // REDUX //\n\n    const dispatch = useDispatch();\n    const user = useSelector((state) => state.user);\n\n    //===========================================================================\n\n    const navigate = useNavigate();\n\n    const status = () => {\n        setLoggedIn(user.auth);\n        console.log(user.auth);\n    };\n\n    const handleOpenNavMenu = (event) => {\n        setAnchorElNav(event.currentTarget);\n    };\n\n    const handleOpenUserMenu = (event) => {\n        setAnchorElUser(event.currentTarget);\n    };\n\n    const handleCloseNavMenu = () => {\n        setAnchorElNav(null);\n    };\n\n    const handleCloseUserMenu = () => {\n        setAnchorElUser(null);\n    };\n\n    const handleLogIn = () => {};\n\n    const handleLogout = () => {\n        dispatch(userActions.logout());\n        navigate(\"/home\");\n    };\n\n    useEffect(() => {\n        status();\n    }, []);\n\n    return (\n        <AppBar position=\"static\" sx={{ bgcolor: \"#16181f\" }}>\n            <Container maxWidth=\"xl\">\n                <Toolbar disableGutters>\n                    <Box>\n                        <Typography\n                            variant=\"h6\"\n                            noWrap\n                            component=\"div\"\n                            sx={{\n                                mr: 2,\n                                width: 60,\n                                height: 60,\n                                display: { xs: \"none\", md: \"flex\" },\n                            }}\n                        >\n                            <img src={logo} />\n                        </Typography>\n                    </Box>\n                    <Box\n                        sx={{\n                            flexGrow: 1,\n                            display: { xs: \"flex\", md: \"none\" },\n                        }}\n                    >\n                        <IconButton\n                            size=\"large\"\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            onClick={handleOpenNavMenu}\n                            color=\"inherit\"\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Menu\n                            id=\"menu-appbar\"\n                            anchorEl={anchorElNav}\n                            anchorOrigin={{\n                                vertical: \"bottom\",\n                                horizontal: \"left\",\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: \"top\",\n                                horizontal: \"left\",\n                            }}\n                            open={Boolean(anchorElNav)}\n                            onClose={handleCloseNavMenu}\n                            sx={{\n                                display: { xs: \"block\", md: \"none\" },\n                            }}\n                        >\n                            {pages.map((page) => (\n                                <MenuItem\n                                    key={page}\n                                    onClick={handleCloseNavMenu}\n                                >\n                                    <Typography textAlign=\"center\">\n                                        <Link\n                                            style={{\n                                                textDecoration: \"none\",\n                                                color: \"white\",\n                                            }}\n                                            to={`/${page}`}\n                                        >\n                                            {page}\n                                        </Link>\n                                    </Typography>\n                                </MenuItem>\n                            ))}\n                        </Menu>\n                    </Box>\n                    <Typography\n                        variant=\"h6\"\n                        noWrap\n                        component=\"div\"\n                        sx={{\n                            flexGrow: 1,\n                            display: { xs: \"flex\", md: \"none\" },\n                        }}\n                    >\n                        LOGO\n                    </Typography>\n                    <Box\n                        sx={{\n                            flexGrow: 1,\n                            display: { xs: \"none\", md: \"flex\" },\n                        }}\n                    >\n                        {pages.map((page) => (\n                            <Button\n                                key={page}\n                                onClick={handleCloseNavMenu}\n                                sx={{ my: 2, color: \"white\", display: \"block\" }}\n                            >\n                                <Link\n                                    style={{\n                                        textDecoration: \"none\",\n                                        color: \"white\",\n                                    }}\n                                    to={`/${page}`}\n                                >\n                                    {page}\n                                </Link>\n                            </Button>\n                        ))}\n                    </Box>\n\n                    {loggedIn === true ? (\n                        <div>\n                            <Box sx={{ flexGrow: 0 }}>\n                                <Tooltip title=\"Open settings\">\n                                    <IconButton\n                                        onClick={handleOpenUserMenu}\n                                        sx={{ p: 0 }}\n                                    >\n                                        <Avatar\n                                            alt=\"Remy Sharp\"\n                                            src=\"/static/images/avatar/2.jpg\"\n                                        />\n                                    </IconButton>\n                                </Tooltip>\n                                <Menu\n                                    sx={{ mt: \"45px\" }}\n                                    id=\"menu-appbar\"\n                                    anchorEl={anchorElUser}\n                                    anchorOrigin={{\n                                        vertical: \"top\",\n                                        horizontal: \"right\",\n                                    }}\n                                    keepMounted\n                                    transformOrigin={{\n                                        vertical: \"top\",\n                                        horizontal: \"right\",\n                                    }}\n                                    open={Boolean(anchorElUser)}\n                                    onClose={handleCloseUserMenu}\n                                >\n                                    {/* {settings.map((setting) => (\n                                        <MenuItem\n                                            key={setting}\n                                            onClick={handleCloseUserMenu}\n                                        >\n                                            <Typography textAlign=\"center\">\n                                                {setting}\n                                            </Typography>\n                                        </MenuItem>\n                                    ))} */}\n                                    <MenuItem\n                                        // key={setting}\n                                        onClick={handleCloseUserMenu}\n                                    >\n                                        <Typography textAlign=\"center\">\n                                            Profile\n                                        </Typography>\n                                    </MenuItem>\n                                    <MenuItem\n                                        // key={setting}\n                                        onClick={handleCloseUserMenu}\n                                    >\n                                        <Typography textAlign=\"center\">\n                                            Preferences\n                                        </Typography>\n                                    </MenuItem>\n                                    <MenuItem\n                                        // key={setting}\n                                        onClick={handleLogout}\n                                    >\n                                        <Typography textAlign=\"center\">\n                                            Logout\n                                        </Typography>\n                                    </MenuItem>\n                                </Menu>\n                            </Box>\n                        </div>\n                    ) : (\n                        <div>\n                            <Button\n                                variant=\"contained\"\n                                href=\"/login\"\n                                sx={{ margin: 1.5 }}\n                            >\n                                Login\n                            </Button>\n                            <Button variant=\"contained\" href=\"/signup\">\n                                Sign Up\n                            </Button>\n                        </div>\n                    )}\n                </Toolbar>\n            </Container>\n        </AppBar>\n    );\n};\nexport default ResponsiveAppBar;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/Table.js",["287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303"],[],"import axios from \"axios\";\nimport React from \"react\";\nimport { tokenList } from \"../utils/coingeckoAPICalls\";\nimport { useState, useEffect } from \"react\";\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    Container,\n    Button,\n    Box,\n    Typography,\n    IconButton,\n} from \"@mui/material\";\nimport ArrowDropUpRoundedIcon from \"@mui/icons-material/ArrowDropUpRounded\";\nimport ArrowDropDownRoundedIcon from \"@mui/icons-material/ArrowDropDownRounded\";\nimport \"../fonts.css\";\nimport StarBorderIcon from \"@mui/icons-material/StarBorder\";\nimport watchlistSlice, { watchlistActions } from \"../redux/watchlistSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { singleToken, chart } from \"../utils/coingeckoAPICalls\";\nimport backendAPIs from \"../utils/backendAPIs\";\nimport userSlice, { userActions } from \"../redux/user\";\nimport { useNavigate } from \"react-router-dom\";\nimport Loading from \"../component/Loading\";\nimport geckoAPISlice, { geckoAPIActions } from \"../redux/coingeckoAPISlice\";\nimport Popup from \"./Popup\";\n\nconst TableData = ({ setOpenModal }) => {\n    const [tokens, setTokens] = useState([]);\n    const topTen = tokens.filter((element, index) => index < 10);\n    const dispatch = useDispatch();\n    const [faves, setFaves] = useState([]);\n    const [status, setStatus] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [extAPI, setExtAPI] = useState(\"\");\n    let navigate = useNavigate();\n\n    // const [openModal, setOpenModal] = useState(false);\n\n    const user = useSelector((state) => state.user);\n    const portfolioRedux = useSelector((state) => state.portfolio);\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    const togglePopup = () => {\n        setIsOpen(!isOpen);\n    };\n\n    const getData = async () => {\n        setLoading(true);\n        const callForTokenList = await axios.get(tokenList());\n        setTokens(callForTokenList.data);\n\n        const getTokenIds = callForTokenList.data.map((data) => data.id);\n        const getTopTenTokenIds = getTokenIds.filter(\n            (element, index) => index < 10\n        );\n\n        setExtAPI(getTopTenTokenIds);\n\n        setLoading(false);\n    };\n\n    const checkIfLoggedIn = async () => {\n        if (user.auth === true) {\n            setStatus(true);\n        }\n    };\n\n    /// MAYBE FOR FUTURE DEVELOPMENT //////////////////////////////////////\n\n    // const callExternalAPI = async () => {\n    //     for (let i = 0; i < extAPI.length; i++) {\n    //         const id = extAPI[i];\n    //         const res = await axios.get(chart(id));\n    //         console.log(res);\n    //     }\n    // };\n\n    useEffect(() => {\n        getData();\n        checkIfLoggedIn();\n    }, []);\n\n    /// MAYBE FOR FUTURE DEVELOPMENT //////////////////////////////////////\n\n    // useEffect(() => {\n    //     callExternalAPI();\n    // }, [extAPI]);\n\n    const handleAddToFavs = async (e) => {\n        const body = { username: user.username, token: e.currentTarget.value };\n        setFaves(body.token);\n        const res = await backendAPIs.addWatchlist(body);\n        if (res) {\n        }\n    };\n\n    const handleTokenClick = () => {\n        setOpenModal(true);\n    };\n\n    return (\n        <div>\n            {/* {openModal && <Popup closeModal={setOpenModal} />} */}\n            {status === true ? (\n                <div className=\"int-container\">\n                    <div className=\"holder\">\n                        {/* <h2 className=\"header\">\n                        Cryptocurrency Tokens by Market Cap\n                    </h2> */}\n                        <Typography\n                            variant=\"h1\"\n                            align=\"center\"\n                            sx={{ margin: 2 }}\n                        >\n                            CRYPTO WHALE\n                        </Typography>\n\n                        {loading === true ? (\n                            <Container\n                                // justifyItems=\"bottom\"\n                                sx={{\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                }}\n                            >\n                                <Box margin={10}>\n                                    <Loading />\n                                </Box>\n                            </Container>\n                        ) : (\n                            <Box\n                                sx={{\n                                    display: \"flex\",\n                                    justifyContent: \"space-around\",\n                                    p: 1,\n                                    m: 1,\n                                    // bgcolor: \"background.paper\",\n                                    borderRadius: 1,\n                                }}\n                            >\n                                <TableContainer\n                                    component={Paper}\n                                    className=\"table\"\n                                    sx={{\n                                        maxWidth: 750,\n                                    }}\n                                >\n                                    <Table\n                                        // position=\"fixed\"\n                                        // alignSelf=\"center\"\n                                        sx={{\n                                            minWidth: 350,\n                                        }}\n                                        aria-label=\"simple table\"\n                                    >\n                                        <Typography\n                                            variant=\"h4\"\n                                            style={{\n                                                margin: 18,\n                                                fontFamily: \"Roboto\",\n                                            }}\n                                        ></Typography>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell></TableCell>\n                                                <TableCell>Token</TableCell>\n                                                <TableCell align=\"center\">\n                                                    Price\n                                                </TableCell>\n                                                <TableCell align=\"center\">\n                                                    Market Cap\n                                                </TableCell>\n                                                <TableCell align=\"center\">\n                                                    % Change (24hr)\n                                                </TableCell>\n                                                <TableCell></TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {topTen.map((token) => (\n                                                <TableRow\n                                                    key={token.name}\n                                                    sx={{\n                                                        \"&:last-child td, &:last-child th\":\n                                                            {\n                                                                border: 0,\n                                                            },\n                                                    }}\n                                                >\n                                                    <TableCell align=\"right\">\n                                                        <Box\n                                                            component=\"img\"\n                                                            sx={{\n                                                                height: 25,\n                                                                width: 25,\n                                                                maxHeight: {\n                                                                    xs: 233,\n                                                                    md: 167,\n                                                                },\n                                                                maxWidth: {\n                                                                    xs: 350,\n                                                                    md: 250,\n                                                                },\n                                                            }}\n                                                            alt=\"\"\n                                                            src={`${token.image}`}\n                                                        />\n                                                    </TableCell>\n                                                    <TableCell\n                                                        value={token.id}\n                                                        component=\"th\"\n                                                        scope=\"row\"\n                                                        onClick={\n                                                            handleTokenClick\n                                                        }\n                                                    >\n                                                        {token.name}\n                                                    </TableCell>\n                                                    <TableCell\n                                                        align=\"center\"\n                                                        sx={{ width: 150 }}\n                                                    >\n                                                        {`$ ${parseFloat(\n                                                            token.current_price\n                                                        ).toLocaleString(\n                                                            \"en-US\"\n                                                        )}`}\n                                                        {token.price_change_percentage_24h >\n                                                            0}\n                                                        ? (\n                                                        <ArrowDropUpRoundedIcon />\n                                                        ):(\n                                                        <ArrowDropDownRoundedIcon />\n                                                        )\n                                                    </TableCell>\n\n                                                    <TableCell\n                                                        align=\"center\"\n                                                        sx={{ width: 250 }}\n                                                    >\n                                                        {`$ ${parseFloat(\n                                                            token.market_cap\n                                                        ).toLocaleString(\n                                                            \"en-US\"\n                                                        )}`}\n                                                    </TableCell>\n                                                    <TableCell\n                                                        align=\"center\"\n                                                        sx={{ width: 150 }}\n                                                    >\n                                                        {` ${parseFloat(\n                                                            token.price_change_percentage_24h\n                                                        ).toFixed(2)}`}\n                                                    </TableCell>\n\n                                                    <TableCell align=\"center\">\n                                                        <IconButton\n                                                            value={token.id}\n                                                            color=\"primary\"\n                                                            aria-label=\"add to faves\"\n                                                            sx={{\n                                                                height: 30,\n                                                                width: 30,\n                                                            }}\n                                                            onClick={\n                                                                handleAddToFavs\n                                                            }\n                                                        >\n                                                            <StarBorderIcon />\n                                                        </IconButton>\n                                                    </TableCell>\n                                                </TableRow>\n                                            ))}\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                            </Box>\n                        )}\n                    </div>\n                </div>\n            ) : (\n                <div className=\"int-container\">\n                    <div className=\"holder\">\n                        {/* <h2 className=\"header\">\n                        Cryptocurrency Tokens by Market Cap\n                    </h2> */}\n                        <Typography\n                            variant=\"h1\"\n                            align=\"center\"\n                            sx={{ margin: 2 }}\n                        >\n                            CRYPTO WHALE\n                        </Typography>\n                        <TableContainer component={Paper} className=\"table\">\n                            {loading === true ? (\n                                <Container\n                                    // justifyItems=\"bottom\"\n                                    sx={{\n                                        display: \"flex\",\n                                        justifyContent: \"center\",\n                                    }}\n                                >\n                                    <Box margin={10}>\n                                        <Loading />\n                                    </Box>\n                                </Container>\n                            ) : (\n                                <Table\n                                    sx={{ minWidth: 350 }}\n                                    aria-label=\"simple table\"\n                                >\n                                    <Typography\n                                        variant=\"h4\"\n                                        style={{\n                                            margin: 18,\n                                            fontFamily: \"Roboto\",\n                                        }}\n                                    ></Typography>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell></TableCell>\n                                            <TableCell>Token</TableCell>\n                                            <TableCell align=\"center\">\n                                                Price\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                Market Cap\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                % Change (24hr)\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n\n                                    <TableBody>\n                                        {topTen.map((token) => (\n                                            <TableRow\n                                                key={token.name}\n                                                sx={{\n                                                    \"&:last-child td, &:last-child th\":\n                                                        {\n                                                            border: 0,\n                                                        },\n                                                }}\n                                            >\n                                                <TableCell align=\"center\">\n                                                    <Box\n                                                        component=\"img\"\n                                                        sx={{\n                                                            height: 25,\n                                                            width: 25,\n                                                            maxHeight: {\n                                                                xs: 233,\n                                                                md: 167,\n                                                            },\n                                                            maxWidth: {\n                                                                xs: 350,\n                                                                md: 250,\n                                                            },\n                                                        }}\n                                                        alt=\"\"\n                                                        src={`${token.image}`}\n                                                    />\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                    onClick={handleTokenClick}\n                                                >\n                                                    {token.name}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"center\"\n                                                    sx={{ width: 150 }}\n                                                >\n                                                    {`$ ${parseFloat(\n                                                        token.current_price\n                                                    ).toLocaleString(\"en-US\")}`}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"center\"\n                                                    sx={{ width: 250 }}\n                                                >\n                                                    {`$ ${parseFloat(\n                                                        token.market_cap\n                                                    ).toLocaleString(\"en-US\")}`}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"center\"\n                                                    sx={{ width: 200 }}\n                                                >\n                                                    {` ${parseFloat(\n                                                        token.price_change_percentage_24h\n                                                    ).toFixed(2)}`}\n\n                                                    {token.price_change_percentage_24h >\n                                                    0 ? (\n                                                        <ArrowDropUpRoundedIcon\n                                                            color=\"success\"\n                                                            fontSize=\"large\"\n                                                        />\n                                                    ) : (\n                                                        <ArrowDropDownRoundedIcon\n                                                            color=\"error\"\n                                                            fontSize=\"large\"\n                                                        />\n                                                    )}\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            )}\n                        </TableContainer>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default TableData;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/unused/Forex.js",["304","305","306","307","308","309","310","311","312","313"],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/utils/coingeckoAPICalls.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/component/LogInButton.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Portfolio.js",["314","315","316","317","318","319","320","321"],[],"import React from \"react\";\nimport PortfolioResultsTable from \"../component/unused/PortfolioResultsTable\";\nimport PortfolioForm from \"../component/PortfolioForm\";\nimport backendAPIs from \"../utils/backendAPIs\";\nimport ResponsiveAppBar from \"../component/ResponsiveAppBar\";\nimport PortfolioTable from \"../component/PortfolioTable\";\nimport user from \"../redux/user\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport userSlice, { userActions } from \"../redux/user\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Portfolio = () => {\n    let navigate = useNavigate();\n\n    // const dispatch = useDispatch();\n    const user = useSelector((state) => state.user);\n\n    const status = () => {\n        if (user.auth === true) {\n            console.log(\"you may enter\");\n        } else {\n            navigate(\"/home\");\n        }\n    };\n\n    useEffect(() => {\n        status();\n    }, []);\n\n    return (\n        <div>\n            <ResponsiveAppBar />\n            <br />\n            <br />\n            <br />\n\n            <div className=\"container\">\n                <PortfolioForm />\n                <br />\n                <br />\n                <br />\n\n                <PortfolioTable />\n            </div>\n        </div>\n    );\n};\n\nexport default Portfolio;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/PortfolioForm.js",["322","323","324","325","326","327","328","329","330"],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/utils/backendAPIs.js",["331","332","333"],[],"import axios from \"axios\";\nconst loginUrl = \"/users\";\nconst porfolioUrl = \"/portfolio\";\nconst watchlistUrl = \"/watchlist\";\nconst localHost = \"http://127.0.0.1:5001\";\n\n//=======================\n\n//      USER\n\n//=======================\n\nconst login = async (body) => {\n    // console.log(body);\n    const res = await axios.post(localHost + \"/users/login\", body);\n    return res;\n\n    // console.log(res);\n};\n\nconst loginStatus = async (body) => {\n    const res = await axios.post(localHost + \"/users/login/status\", body);\n    return res;\n};\n\nconst status = async () => {\n    const res = await axios.post(localHost + \"/users/status\");\n    return res;\n};\n\nconst logout = async () => {\n    const res = await axios.post(localHost + \"/users/logout\");\n    return res;\n};\n\nconst createNewUser = async (body) => {\n    const res = await axios.post(localHost + \"/users/newuser\", body);\n    return res;\n};\n\nconst addUserNewPortfolio = async (body) => {\n    console.log(body);\n    const res = await axios.post(localHost + \"/users/portfolio/newentry\", body);\n    // console.log(response);\n    return res;\n};\n\n//=======================\n\n//      PORTFOLIO\n\n//=======================\nconst addNewPortfolio = async (body) => {\n    console.log(body);\n    const res = await axios.post(localHost + \"/users/portfolio/newentry\", body);\n    // console.log(response);\n    return res;\n};\n\nconst removePortfolio = async (body) => {\n    console.log(`backendAPI ${body}`);\n    const res = await axios.post(\n        localHost + \"/users/portfolio/removeentry\",\n        body\n    );\n    console.log(\"Removed Entry\", res);\n    return res;\n};\n\nconst editPortfolio = async (body) => {\n    const res = await axios.post(\n        localHost + \"/users/portfolio/entryupdate\",\n        body\n    );\n    return res;\n};\n\nconst submitEditedPortfolio = async (body) => {\n    console.log(body);\n    const res = await axios.post(\n        localHost + \"/users/portfolio/entryupdatesubmit\",\n        body\n    );\n    console.log(\"hello\");\n    return res;\n};\n\nconst pullPortfolio = async (body) => {\n    console.log(body);\n    const res = await axios.post(localHost + \"/users/portfolio/pull\", body);\n    return res;\n};\n\n//=======================\n\n//      WATCHLIST\n\n//=======================\n\nconst addWatchlist = async (body) => {\n    console.log(body);\n    const res = await axios.post(localHost + \"/users/watchlist/newwatch\", body);\n    return res;\n};\n\nconst callWatchlistData = async (body) => {\n    console.log(body);\n    const res = await axios.post(localHost + \"/users/watchlist/getwatch\", body);\n    return res;\n};\n\nconst removeWatchlist = async (body) => {\n    console.log(body);\n    const res = await axios.post(\n        localHost + \"/users/watchlist/removewatch\",\n        body\n    );\n    console.log(res);\n    return res;\n};\n\n//=======================\n\n//      EXTERNAL API\n\n//=======================\n\nconst initialCall = async (body) => {\n    console.log(body);\n    const res = await axios.post(localHost + \"/extAPI/initial\", body);\n    return res;\n};\n\nconst apiCalls = {\n    login,\n    logout,\n    createNewUser,\n    addNewPortfolio,\n    removePortfolio,\n    editPortfolio,\n    pullPortfolio,\n    addWatchlist,\n    removeWatchlist,\n    callWatchlistData,\n    submitEditedPortfolio,\n    addUserNewPortfolio,\n    loginStatus,\n    status,\n    initialCall,\n};\n\nexport default apiCalls;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Login.js",["334"],[],"import React, { useState } from \"react\";\nimport { Container, TextField, Box, Button } from \"@mui/material\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { userActions } from \"../redux/user\";\nimport backendAPIs from \"../utils/backendAPIs\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../index.css\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport VisibilityOutlinedIcon from \"@mui/icons-material/VisibilityOutlined\";\n\nconst Login = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [viewPassword, setViewPassword] = useState(false);\n\n    let navigate = useNavigate();\n\n    const dispatch = useDispatch();\n    const user = useSelector((state) => state.user);\n\n    const handleUsernameChange = (event) => {\n        setUsername(event.target.value);\n    };\n\n    const handlePasswordChange = (event) => {\n        setPassword(event.target.value);\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // console.log(username);\n        const data = {\n            username: username,\n            password: password,\n        };\n        console.log(data);\n        backendAPIs.login(data);\n        // backendAPIs.loginStatus(true);\n        dispatch(userActions.login(username));\n        navigate(\"/home\");\n    };\n\n    const handleMouseDownPassword = () => {\n        setViewPassword(true);\n    };\n\n    const handleMouseUpPassword = () => {\n        setViewPassword(false);\n    };\n\n    return (\n        <>\n            <div>\n                <div>\n                    {/* <img\n                        src={background}\n                        // width=\"500\"\n                        // height=\"150px\"\n                        // overflow=\"hidden\"\n                        style={{ marginleft: 1000, marginright: 1000 }}\n                    /> */}\n                    <Container className=\"parent\" maxWidth=\"sm\">\n                        <br />\n                        <br />\n                        <br />\n                        <br />\n                        <br />\n                        <Box\n                            display=\"flex\"\n                            flexDirection=\"column\"\n                            alignItems=\"stretch\"\n                            margin={5}\n                            // justifyItems=\"bottom\"\n                            sx={{ alignContent: \"flex-end\" }}\n                        >\n                            <TextField\n                                color=\"secondary\"\n                                variant=\"standard\"\n                                className=\"child-one\"\n                                helperText=\"Please enter your username\"\n                                id=\"Username\"\n                                label=\"Username\"\n                                onChange={handleUsernameChange}\n                                // margin={5}\n                            />\n                            <TextField\n                                color=\"secondary\"\n                                variant=\"standard\"\n                                className=\"child-two\"\n                                helperText=\"Please enter a password\"\n                                id=\"Password\"\n                                label=\"Password\"\n                                onChange={handlePasswordChange}\n                                // color=\"white\"\n                                type={viewPassword ? \"text\" : \"password\"}\n                            />\n                            {viewPassword ? (\n                                <VisibilityIcon\n                                    onMouseUp={handleMouseUpPassword}\n                                />\n                            ) : (\n                                <VisibilityOutlinedIcon\n                                    onMouseDown={handleMouseDownPassword}\n                                />\n                            )}\n                            <br />\n                            <br />\n                            <Button\n                                variant=\"contained\"\n                                className=\"button-one\"\n                                onClick={handleSubmit}\n                                border=\"50px\"\n                            >\n                                Login\n                            </Button>\n                            <br />\n                            <br />\n                            <Button\n                                variant=\"contained\"\n                                className=\"button-two\"\n                                href=\"/signup\"\n                                padding={5}\n                            >\n                                Sign Up\n                            </Button>\n                        </Box>\n                    </Container>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Login;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/SignUp.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/redux/store.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/redux/user.js",["335"],[],"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst userSlice = createSlice({\n    name: \"user\",\n    initialState: { username: \"\", name: \"\", password: \"\", auth: false },\n    reducers: {\n        login(state, action) {\n            console.log(\"Logged In\");\n            state.username = action.payload;\n            state.auth = true;\n        },\n        logout(state) {\n            state.username = \"\";\n            state.auth = false;\n        },\n        createRegistration: (state, action) => {\n            state.username = action.payload.userName;\n            state.name = action.payload.name;\n            state.password = action.payload.password;\n        },\n    },\n});\n\nconst store = configureStore({\n    reducer: userSlice.reducer,\n});\n\nexport const userActions = userSlice.actions;\n\nexport default userSlice.reducer;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Watchlist.js",["336","337","338","339","340","341"],[],"import React from \"react\";\nimport ResponsiveAppBar from \"../component/ResponsiveAppBar\";\nimport WatchListTable from \"../component/WatchListTable\";\n// import WatchlistTable from \"../component/WatchListTable\";\nimport user from \"../redux/user\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport userSlice, { userActions } from \"../redux/user\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Watchlist = () => {\n    let navigate = useNavigate();\n\n    // const dispatch = useDispatch();\n    const user = useSelector((state) => state.user);\n\n    const status = () => {\n        if (user.auth === true) {\n            console.log(\"you may enter\");\n        } else {\n            navigate(\"/home\");\n        }\n    };\n\n    useEffect(() => {\n        status();\n    }, []);\n    return (\n        <>\n            <ResponsiveAppBar />\n            <br />\n            <br />\n            <br />\n            <br />\n            <WatchListTable />\n        </>\n    );\n};\n\nexport default Watchlist;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/WatchListTable.js",["342","343","344","345","346"],[],"import React from \"react\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport axios from \"axios\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { Typography } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\n// import { Container } from \"@mui/material\";\nimport { Container, Button, Box } from \"@mui/material\";\nimport backendAPIs from \"../utils/backendAPIs\";\nimport { singleToken } from \"../utils/coingeckoAPICalls\";\nimport { useState, useEffect } from \"react\";\nimport { Api } from \"@mui/icons-material\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport watchlistSlice, { watchlistActions } from \"../redux/watchlistSlice\";\nimport Loading from \"../component/Loading\";\n\nconst WatchListTable = () => {\n    const watchlist = useSelector((state) => state.watchlist);\n    const [watchlistData, setWatchlistData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    // console.log(watchlist);\n    // const list = \"\"\n    let recalledData = [];\n    // const [watchlist, setWatchlist] = useState([]);\n    // const mappedData = [];\n    // const topTen = [];\n    const coingeckoData = [];\n    const dispatch = useDispatch();\n    const user = useSelector((state) => state.user);\n    // console.log(user);\n\n    const callForWatchlist = async () => {\n        setLoading(true);\n        // console.log(watchlist);\n        const body = { username: user.username };\n        // console.log(body);\n        const res = await backendAPIs.callWatchlistData(body);\n        // console.log(res);\n        recalledData = res.data.getWatch.watchlist;\n        // console.log(recalledData);\n\n        for await (let element of recalledData) {\n            // console.log(element);\n            const response = await axios.get(singleToken(element));\n            // console.log(\"hello\");\n            coingeckoData.push(response.data);\n            // console.log(coingeckoData);\n        }\n\n        setWatchlistData(coingeckoData);\n        console.log(\"thisisforcoingeckodata\", coingeckoData);\n        setLoading(false);\n    };\n\n    // console.log(watchlistData);\n\n    // const getString = mappedData.map ((element, index) => {\n    //     const coingeckoRes = await axios.get(singleToken(getString));\n    // console.log(watchlistData);\n    //     return index\n    // });\n    // const coingeckoRes = await axios.get(singleToken(getString));\n\n    // setWatchlistData(res.data.data);\n\n    // console.log(callWatchlistData);\n    // setFaves(res.data); // -> should be redux state\n    // console.log(res);\n\n    useEffect(() => {\n        console.log(\"calling for watchlist\");\n        callForWatchlist();\n        // outsideApi();\n    }, [watchlist]);\n\n    const handleDelete = async (e) => {\n        // const body = { username: user.username };\n        e.preventDefault();\n        const body = { username: user.username, token: e.currentTarget.value };\n        // console.log(body);\n        console.log(\"TRYING TO PRINTTTTT\");\n        dispatch(watchlistActions.setDelete()); // not setting\n        // dispatch(watchlistActions.setToken(body.token)); // not setting\n        console.log(watchlist);\n        const res = await backendAPIs.removeWatchlist(body);\n        // console.log(res);\n        dispatch(watchlistActions.setDefault());\n        console.log(watchlist);\n        console.log(\"loggingwatchlistDATA\", watchlistData);\n\n        // dispatch(watchlistActions.setToken(\"\"));\n        // dispatch(portfolioActions.setDeleteMode(true));\n        // dispatch(portfolioActions.setDelete(true));\n        // dispatch(portfolioActions.handleReset());\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"holder\">\n                <Typography variant=\"h1\" align=\"center\" sx={{ margin: 2 }}>\n                    WATCHLIST\n                </Typography>\n                {loading === true ? (\n                    <Container\n                        // justifyItems=\"bottom\"\n                        sx={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Box margin={10}>\n                            <Loading />\n                        </Box>\n                    </Container>\n                ) : (\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            justifyContent: \"space-around\",\n                            p: 1,\n                            m: 1,\n                            // bgcolor: \"background.paper\",\n                            borderRadius: 1,\n                        }}\n                    >\n                        <TableContainer\n                            component={Paper}\n                            sx={{ maxWidth: 750 }}\n                        >\n                            <Table\n                                sx={{ minWidth: 350 }}\n                                aria-label=\"simple table\"\n                            >\n                                <Typography\n                                    variant=\"h4\"\n                                    style={{ margin: 18, fontFamily: \"Roboto\" }}\n                                ></Typography>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell></TableCell>\n                                        <TableCell>Token</TableCell>\n                                        <TableCell align=\"center\">\n                                            Price\n                                        </TableCell>\n                                        <TableCell align=\"center\">\n                                            Market Cap\n                                        </TableCell>\n                                        <TableCell align=\"center\">\n                                            % Change\n                                        </TableCell>\n                                        <TableCell></TableCell>\n                                    </TableRow>\n                                </TableHead>\n\n                                <TableBody>\n                                    {/* {JSON.stringify(watchlistData[1].id)} */}\n                                    {watchlistData.map((token) => (\n                                        <TableRow\n                                            key={token.name}\n                                            sx={{\n                                                \"&:last-child td, &:last-child th\":\n                                                    {\n                                                        border: 0,\n                                                    },\n                                            }}\n                                        >\n                                            <TableCell align=\"center\">\n                                                <Box\n                                                    component=\"img\"\n                                                    sx={{\n                                                        height: 25,\n                                                        width: 25,\n                                                        maxHeight: {\n                                                            xs: 233,\n                                                            md: 167,\n                                                        },\n                                                        maxWidth: {\n                                                            xs: 350,\n                                                            md: 250,\n                                                        },\n                                                    }}\n                                                    alt=\"\"\n                                                    src={`${token.image.small}`}\n                                                />\n                                            </TableCell>\n                                            <TableCell\n                                                component=\"th\"\n                                                scope=\"row\"\n                                            >\n                                                {token.name}\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                {`$ ${parseFloat(\n                                                    token.market_data\n                                                        .current_price.usd\n                                                ).toLocaleString(\"en-US\")}`}\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                {`$ ${parseFloat(\n                                                    token.market_data.market_cap\n                                                        .usd\n                                                ).toLocaleString(\"en-US\")}`}\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                {` ${parseFloat(\n                                                    token.market_data\n                                                        .price_change_percentage_24h\n                                                ).toFixed(2)}`}\n                                            </TableCell>\n\n                                            <TableCell align=\"center\">\n                                                <IconButton\n                                                    value={token.id}\n                                                    color=\"primary\"\n                                                    aria-label=\"add to shopping cart\"\n                                                    sx={{\n                                                        height: 30,\n                                                        width: 30,\n                                                    }}\n                                                    onClick={handleDelete}\n                                                >\n                                                    <DeleteIcon />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </Box>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default WatchListTable;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/PortfolioTable.js",["347","348","349","350","351","352","353","354"],[],"import axios from \"axios\";\nimport React from \"react\";\nimport { tokenList } from \"../utils/coingeckoAPICalls\";\nimport { useState, useEffect } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport \"../fonts.css\";\nimport { Typography } from \"@mui/material\";\nimport { Button, Box } from \"@mui/material\";\nimport StarBorderIcon from \"@mui/icons-material/StarBorder\";\nimport IconButton from \"@mui/material/IconButton\";\nimport backendAPIs from \"../utils/backendAPIs\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport portfolioSlice, { portfolioActions } from \"../redux/portfolioSlice\";\n// import { AirlineSeatReclineNormalOutlined } from \"@material-ui/icons\";\n\nconst PortfolioTable = () => {\n    // const [tokens, setTokens] = useState([]);\n    // const topTen = tokens.filter((element, index) => index < 10);\n    // console.log(topTen);\n    // const [Pending, setPending] = useState();\n    const [portfolio, setPortfolio] = useState([]);\n    // const [apiData, setApiData] = useState();\n    // const [recallData, setRecallData] = useState([]);\n\n    // const portfolioDelete = useSelector((state) => state.portfolio);\n    // console.log(portfolio);\n\n    //===========================================================================\n\n    // REDUX //\n\n    const dispatch = useDispatch();\n    const user = useSelector((state) => state.user);\n    const portfolioRedux = useSelector((state) => state.portfolio);\n\n    //\n\n    //===========================================================================\n\n    const callForPortfolio = async () => {\n        const body = {\n            username: user.username,\n        };\n\n        const res = await backendAPIs.pullPortfolio(body);\n        console.log(res.data.data.portfolio);\n        setPortfolio(res.data.data.portfolio);\n    };\n\n    const handleDelete = async (e) => {\n        // console.log(value);\n        const token = e.currentTarget.value;\n        const body = { username: user.username, token: token };\n        console.log(body);\n        const res = await backendAPIs.removePortfolio(body);\n        // dispatch(portfolioActions.setDeleteMode(true));\n        dispatch(portfolioActions.setDelete(true));\n        dispatch(portfolioActions.handleReset());\n        // dispatch(portfolioActions.setDeleteMode(false));\n    };\n\n    const handleEdit = async (e) => {\n        dispatch(portfolioActions.setEdit(true));\n        const token = e.currentTarget.value;\n        const body = { username: user.username, token: token };\n        console.log(body);\n        const res = await backendAPIs.editPortfolio(body);\n        const portfolioData = res.data.editedEntry.portfolio;\n        console.log(portfolioData);\n        const filteredData = portfolioData.filter(\n            (element) => element.token == token\n        );\n        console.log(filteredData[0]);\n        const data = filteredData[0];\n        console.log(data);\n        // for (let element of portfolioData) {\n        dispatch(\n            portfolioActions.setRecall({\n                recalledToken: data.token,\n                recalledPrice: data.price,\n                recalledQty: data.quantity,\n            })\n        );\n        // }\n\n        // dispatch(\n        //     portfolioActions.setRecall({\n        //         recalledToken: res.data.editedEntry.token,\n        //         recalledPrice: res.data.editedEntry.price,\n        //         recalledQty: res.data.editedEntry.quantity,\n        //     })\n\n        // need to refresh form and update table\n        // );\n    };\n\n    useEffect(() => {\n        callForPortfolio();\n    }, [portfolioRedux]);\n\n    // console.log(portfolioRedux);\n\n    return (\n        <div>\n            {/* {JSON.stringify(tokens)} */}\n            <div className=\"int-container\">\n                <div className=\"holder\">\n                    <Typography variant=\"h1\" align=\"center\" sx={{ margin: 2 }}>\n                        PORTFOLIO\n                    </Typography>\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            justifyContent: \"space-around\",\n                            p: 1,\n                            m: 1,\n                            // bgcolor: \"background.paper\",\n                            borderRadius: 1,\n                        }}\n                    >\n                        <TableContainer\n                            component={Paper}\n                            sx={{ maxWidth: 750 }}\n                        >\n                            <Table\n                                sx={{ minWidth: 350 }}\n                                aria-label=\"simple table\"\n                            >\n                                <Typography\n                                    variant=\"h4\"\n                                    style={{ margin: 18, fontFamily: \"Roboto\" }}\n                                ></Typography>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell\n                                            align=\"center\"\n                                            sx={{ width: 100 }}\n                                        >\n                                            Token\n                                        </TableCell>\n                                        {/* <TableCell\n                                            align=\"center\"\n                                            sx={{ width: 100 }}\n                                        >\n                                            Chart\n                                        </TableCell> */}\n                                        <TableCell\n                                            align=\"center\"\n                                            sx={{ width: 150 }}\n                                        >\n                                            Price\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            sx={{ width: 120 }}\n                                        >\n                                            Quantity\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            sx={{ width: 100 }}\n                                        >\n                                            Current Price\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"center\"\n                                            sx={{ width: 70 }}\n                                        ></TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {portfolio.map((portfolio) => (\n                                        <TableRow\n                                            key={portfolio.name}\n                                            sx={{\n                                                \"&:last-child td, &:last-child th\":\n                                                    {\n                                                        border: 0,\n                                                    },\n                                            }}\n                                        >\n                                            <TableCell\n                                                component=\"th\"\n                                                scope=\"row\"\n                                                align=\"center\"\n                                            >\n                                                {portfolio.token}\n                                            </TableCell>\n                                            {/* <TableCell></TableCell> */}\n                                            <TableCell\n                                                align=\"center\"\n                                                sx={{ width: 150 }}\n                                            >\n                                                {`$ ${parseFloat(\n                                                    portfolio.price\n                                                ).toFixed(2)}`}\n                                            </TableCell>\n                                            <TableCell\n                                                align=\"center\"\n                                                sx={{ width: 120 }}\n                                            >\n                                                {portfolio.quantity.toLocaleString(\n                                                    \"en-US\"\n                                                )}\n                                            </TableCell>\n                                            <TableCell\n                                                align=\"center\"\n                                                sx={{ width: 100 }}\n                                            ></TableCell>\n                                            <TableCell sx={{ width: 50 }}>\n                                                <IconButton\n                                                    value={portfolio.token}\n                                                    color=\"primary\"\n                                                    aria-label=\"Edit button\"\n                                                    sx={{\n                                                        height: 30,\n                                                        width: 30,\n                                                    }}\n                                                    onClick={handleEdit}\n                                                >\n                                                    <EditIcon />\n                                                </IconButton>\n                                                <IconButton\n                                                    value={portfolio.token}\n                                                    color=\"primary\"\n                                                    aria-label=\"Del button\"\n                                                    sx={{\n                                                        height: 30,\n                                                        width: 30,\n                                                    }}\n                                                    onClick={handleDelete}\n                                                >\n                                                    <DeleteIcon />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </Box>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default PortfolioTable;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/unused/PortfolioResultsTable.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/redux/portfolioSlice.js",["355"],[],"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst portfolioSlice = createSlice({\n    name: \"portfolio\",\n    initialState: {\n        delete: false,\n        token: \"\",\n        price: \"\",\n        qty: \"\",\n        editMode: false,\n        recalledTokens: \"\",\n        editedToken: \"\",\n        editedPrice: \"\",\n        editedQty: \"\",\n        deleteMode: false,\n        submit: false,\n        // recalledPrice: \"\",\n        // reaclledQty: \"\",\n    },\n    reducers: {\n        setToken: (state, action) => {\n            // console.log(state.token, action.payload);\n            state.token = action.payload;\n        },\n        setPrice: (state, action) => {\n            // console.log(state.price, action.payload);\n            state.price = action.payload;\n        },\n        setQty: (state, action) => {\n            // console.log(state.token, action.payload);\n            state.qty = action.payload;\n        },\n\n        setSubmit: (state, action) => {\n            state.submit = true;\n        },\n\n        setEditedToken: (state, action) => {\n            // console.log(state.token, action.payload);\n            state.token = action.payload;\n        },\n        setEditedPrice: (state, action) => {\n            // console.log(state.price, action.payload);\n            state.price = action.payload;\n        },\n        setEditedQty: (state, action) => {\n            // console.log(state.token, action.payload);\n            state.qty = action.payload;\n        },\n\n        handleSubmit: (state, action) => {\n            // state.submission = action.payload.submission;\n            state.token = \"\";\n            state.price = \"\";\n            state.qty = \"\";\n            state.submit = false;\n        },\n        setDelete: (state, action) => {\n            state.delete = action.payload;\n            console.log(state.delete, action.payload);\n        },\n        handleReset: (state, action) => {\n            state.delete = \"\";\n        },\n        setEdit: (state, action) => {\n            state.editMode = action.payload;\n            console.log(state.editMode);\n        },\n        setRecall: (state, action) => {\n            console.log(action.payload);\n            state.recalledTokens = action.payload;\n\n            // console.log(state.recalledToken);\n        },\n        handleResetEdit: (state, action) => {\n            state.recalledTokens = \"\";\n        },\n\n        // setRecallPrice: (state, action) => {\n        //     state.recalledPrice = action.payload;\n        //     console.log(state.recalledPrice);\n        // },\n        // setRecallQty: (state, action) => {\n        //     state.reacalledQty = action.payload;\n        //     console.log(state.reacalledQty);\n        // },\n    },\n});\n\n// const store = configureStore({\n//     reducer: userSlice.reducer,\n// });\n\nexport const portfolioActions = portfolioSlice.actions;\n\nexport default portfolioSlice.reducer;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/redux/watchlistSlice.js",["356"],[],"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst watchlistSlice = createSlice({\n    name: \"watchlist\",\n    initialState: {\n        delete: false,\n        token: \"\",\n        // price: \"\",\n        // qty: \"\",\n        // editMode: false,\n        // recall: \"\",\n        // recalledPrice: \"\",\n        // reaclledQty: \"\",\n    },\n    reducers: {\n        setToken: (state, action) => {\n            // console.log(state.token, action.payload);\n            state.token = action.payload;\n        },\n\n        setDelete: (state, action) => {\n            console.log(\"TRYING TO DELETE\", action.payload);\n            state.delete = true;\n            console.log(state.delete, action.payload);\n        },\n\n        setDefault: (state, action) => {\n            // console.log(\"TRYING TO RESET\", action.payload);\n            state.delete = false;\n            state.token = \"\";\n            // console.log(state.delete, action.payload);\n        },\n        // setPrice: (state, action) => {\n        //     // console.log(state.price, action.payload);\n        //     state.price = action.payload;\n        // },\n        // setQty: (state, action) => {\n        //     // console.log(state.token, action.payload);\n        //     state.qty = action.payload;\n        // },\n        // handleSubmit: (state, action) => {\n        //     // state.submission = action.payload.submission;\n        //     state.token = \"\";\n        //     state.price = \"\";\n        //     state.qty = \"\";\n        // },\n        // setDelete: (state, action) => {\n        //     state.delete = action.payload;\n        // },\n        // handleReset: (state, action) => {\n        //     state.delete = \"\";\n        // },\n        // setEdit: (state, action) => {\n        //     state.edit = action.payload;\n        //     console.log(state.editMode);\n        // },\n        // setRecall: (state, action) => {\n        //     console.log(action.payload);\n        //     state.recalledToken = action.payload;\n        //     state.recalledPrice = action.payload;\n        //     state.reacalledQty = action.payload;\n\n        //     // console.log(state.recalledToken);\n        // },\n\n        // // setRecallPrice: (state, action) => {\n        // //     state.recalledPrice = action.payload;\n        // //     console.log(state.recalledPrice);\n        // // },\n        // // setRecallQty: (state, action) => {\n        // //     state.reacalledQty = action.payload;\n        // //     console.log(state.reacalledQty);\n        // // },\n    },\n});\n\n// const store = configureStore({\n//     reducer: userSlice.reducer,\n// });\n\nexport const watchlistActions = watchlistSlice.actions;\n\nexport default watchlistSlice.reducer;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/Loading.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/component/charts/MainLineChart.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/component/unused/SignUpButton.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/redux/coingeckoAPISlice.js",["357"],[],"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst coingeckoSlice = createSlice({\n    name: \"geckoAPI\",\n    initialState: {\n        mainTableIds: [],\n        // delete: false,\n        // token: \"\",\n        // price: \"\",\n        // qty: \"\",\n        // editMode: false,\n        // recalledTokens: \"\",\n        // editedToken: \"\",\n        // editedPrice: \"\",\n        // editedQty: \"\",\n        // deleteMode: false,\n        // submit: false,\n        // recalledPrice: \"\",\n        // reaclledQty: \"\",\n    },\n    reducers: {\n        setMainTableIds: (state, action) => {\n            // console.log(state.token, action.payload);\n            state.mainTableIds = action.payload;\n        },\n    },\n});\n\n// const store = configureStore({\n//     reducer: userSlice.reducer,\n// });\n\nexport const geckoAPIActions = coingeckoSlice.actions;\n\nexport default coingeckoSlice.reducer;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/Popup.js",[],[],{"ruleId":"358","replacedBy":"359"},{"ruleId":"360","replacedBy":"361"},{"ruleId":"362","severity":1,"message":"363","line":4,"column":8,"nodeType":"364","messageId":"365","endLine":4,"endColumn":17},{"ruleId":"362","severity":1,"message":"366","line":1,"column":27,"nodeType":"364","messageId":"365","endLine":1,"endColumn":36},{"ruleId":"362","severity":1,"message":"367","line":2,"column":18,"nodeType":"364","messageId":"365","endLine":2,"endColumn":27},{"ruleId":"362","severity":1,"message":"368","line":2,"column":29,"nodeType":"364","messageId":"365","endLine":2,"endColumn":32},{"ruleId":"362","severity":1,"message":"369","line":6,"column":7,"nodeType":"364","messageId":"365","endLine":6,"endColumn":20},{"ruleId":"362","severity":1,"message":"370","line":2,"column":24,"nodeType":"364","messageId":"365","endLine":2,"endColumn":44},{"ruleId":"362","severity":1,"message":"367","line":3,"column":18,"nodeType":"364","messageId":"365","endLine":3,"endColumn":27},{"ruleId":"362","severity":1,"message":"368","line":3,"column":29,"nodeType":"364","messageId":"365","endLine":3,"endColumn":32},{"ruleId":"362","severity":1,"message":"371","line":3,"column":34,"nodeType":"364","messageId":"365","endLine":3,"endColumn":37},{"ruleId":"362","severity":1,"message":"372","line":182,"column":10,"nodeType":"364","messageId":"365","endLine":182,"endColumn":16},{"ruleId":"362","severity":1,"message":"373","line":185,"column":9,"nodeType":"364","messageId":"365","endLine":185,"endColumn":17},{"ruleId":"362","severity":1,"message":"374","line":186,"column":9,"nodeType":"364","messageId":"365","endLine":186,"endColumn":26},{"ruleId":"362","severity":1,"message":"375","line":203,"column":9,"nodeType":"364","messageId":"365","endLine":203,"endColumn":20},{"ruleId":"376","severity":1,"message":"377","line":209,"column":6,"nodeType":"378","endLine":209,"endColumn":24,"suggestions":"379"},{"ruleId":"362","severity":1,"message":"380","line":234,"column":9,"nodeType":"364","messageId":"365","endLine":234,"endColumn":19},{"ruleId":"362","severity":1,"message":"367","line":4,"column":18,"nodeType":"364","messageId":"365","endLine":4,"endColumn":27},{"ruleId":"362","severity":1,"message":"368","line":4,"column":29,"nodeType":"364","messageId":"365","endLine":4,"endColumn":32},{"ruleId":"362","severity":1,"message":"371","line":4,"column":34,"nodeType":"364","messageId":"365","endLine":4,"endColumn":37},{"ruleId":"362","severity":1,"message":"381","line":9,"column":10,"nodeType":"364","messageId":"365","endLine":9,"endColumn":20},{"ruleId":"376","severity":1,"message":"377","line":16,"column":6,"nodeType":"378","endLine":16,"endColumn":25,"suggestions":"382"},{"ruleId":"362","severity":1,"message":"383","line":5,"column":10,"nodeType":"364","messageId":"365","endLine":5,"endColumn":14},{"ruleId":"362","severity":1,"message":"384","line":33,"column":11,"nodeType":"364","messageId":"365","endLine":33,"endColumn":16},{"ruleId":"376","severity":1,"message":"385","line":45,"column":6,"nodeType":"378","endLine":45,"endColumn":8,"suggestions":"386"},{"ruleId":"362","severity":1,"message":"387","line":48,"column":9,"nodeType":"364","messageId":"365","endLine":48,"endColumn":18},{"ruleId":"362","severity":1,"message":"388","line":12,"column":9,"nodeType":"364","messageId":"365","endLine":12,"endColumn":18},{"ruleId":"362","severity":1,"message":"389","line":17,"column":10,"nodeType":"364","messageId":"365","endLine":17,"endColumn":26},{"ruleId":"362","severity":1,"message":"390","line":17,"column":28,"nodeType":"364","messageId":"365","endLine":17,"endColumn":47},{"ruleId":"362","severity":1,"message":"391","line":21,"column":10,"nodeType":"364","messageId":"365","endLine":21,"endColumn":15},{"ruleId":"362","severity":1,"message":"392","line":21,"column":17,"nodeType":"364","messageId":"365","endLine":21,"endColumn":25},{"ruleId":"362","severity":1,"message":"393","line":25,"column":9,"nodeType":"364","messageId":"365","endLine":25,"endColumn":19},{"ruleId":"362","severity":1,"message":"394","line":29,"column":9,"nodeType":"364","messageId":"365","endLine":29,"endColumn":20},{"ruleId":"362","severity":1,"message":"395","line":33,"column":9,"nodeType":"364","messageId":"365","endLine":33,"endColumn":23},{"ruleId":"362","severity":1,"message":"396","line":1,"column":38,"nodeType":"364","messageId":"365","endLine":1,"endColumn":47},{"ruleId":"358","replacedBy":"397"},{"ruleId":"360","replacedBy":"398"},{"ruleId":"362","severity":1,"message":"399","line":9,"column":10,"nodeType":"364","messageId":"365","endLine":9,"endColumn":15},{"ruleId":"362","severity":1,"message":"400","line":10,"column":10,"nodeType":"364","messageId":"365","endLine":10,"endColumn":18},{"ruleId":"362","severity":1,"message":"366","line":1,"column":17,"nodeType":"364","messageId":"365","endLine":1,"endColumn":26},{"ruleId":"362","severity":1,"message":"401","line":3,"column":10,"nodeType":"364","messageId":"365","endLine":3,"endColumn":16},{"ruleId":"362","severity":1,"message":"367","line":3,"column":18,"nodeType":"364","messageId":"365","endLine":3,"endColumn":27},{"ruleId":"362","severity":1,"message":"402","line":3,"column":29,"nodeType":"364","messageId":"365","endLine":3,"endColumn":36},{"ruleId":"362","severity":1,"message":"403","line":3,"column":38,"nodeType":"364","messageId":"365","endLine":3,"endColumn":48},{"ruleId":"362","severity":1,"message":"404","line":8,"column":8,"nodeType":"364","messageId":"365","endLine":8,"endColumn":21},{"ruleId":"362","severity":1,"message":"396","line":1,"column":38,"nodeType":"364","messageId":"365","endLine":1,"endColumn":47},{"ruleId":"362","severity":1,"message":"367","line":4,"column":18,"nodeType":"364","messageId":"365","endLine":4,"endColumn":27},{"ruleId":"362","severity":1,"message":"368","line":4,"column":29,"nodeType":"364","messageId":"365","endLine":4,"endColumn":32},{"ruleId":"362","severity":1,"message":"371","line":4,"column":34,"nodeType":"364","messageId":"365","endLine":4,"endColumn":37},{"ruleId":"362","severity":1,"message":"381","line":9,"column":10,"nodeType":"364","messageId":"365","endLine":9,"endColumn":20},{"ruleId":"376","severity":1,"message":"377","line":16,"column":6,"nodeType":"378","endLine":16,"endColumn":25,"suggestions":"405"},{"ruleId":"358","replacedBy":"406"},{"ruleId":"360","replacedBy":"407"},{"ruleId":"362","severity":1,"message":"408","line":15,"column":8,"nodeType":"364","messageId":"365","endLine":15,"endColumn":19},{"ruleId":"362","severity":1,"message":"409","line":16,"column":8,"nodeType":"364","messageId":"365","endLine":16,"endColumn":20},{"ruleId":"362","severity":1,"message":"410","line":19,"column":8,"nodeType":"364","messageId":"365","endLine":19,"endColumn":17},{"ruleId":"362","severity":1,"message":"411","line":23,"column":7,"nodeType":"364","messageId":"365","endLine":23,"endColumn":15},{"ruleId":"362","severity":1,"message":"412","line":63,"column":11,"nodeType":"364","messageId":"365","endLine":63,"endColumn":22},{"ruleId":"376","severity":1,"message":"413","line":72,"column":8,"nodeType":"378","endLine":72,"endColumn":10,"suggestions":"414"},{"ruleId":"415","severity":1,"message":"416","line":90,"column":29,"nodeType":"417","endLine":90,"endColumn":47},{"ruleId":"362","severity":1,"message":"418","line":14,"column":5,"nodeType":"364","messageId":"365","endLine":14,"endColumn":11},{"ruleId":"362","severity":1,"message":"419","line":23,"column":8,"nodeType":"364","messageId":"365","endLine":23,"endColumn":22},{"ruleId":"362","severity":1,"message":"420","line":23,"column":26,"nodeType":"364","messageId":"365","endLine":23,"endColumn":42},{"ruleId":"362","severity":1,"message":"421","line":25,"column":10,"nodeType":"364","messageId":"365","endLine":25,"endColumn":21},{"ruleId":"362","severity":1,"message":"422","line":25,"column":23,"nodeType":"364","messageId":"365","endLine":25,"endColumn":28},{"ruleId":"362","severity":1,"message":"410","line":27,"column":8,"nodeType":"364","messageId":"365","endLine":27,"endColumn":17},{"ruleId":"362","severity":1,"message":"423","line":27,"column":21,"nodeType":"364","messageId":"365","endLine":27,"endColumn":32},{"ruleId":"362","severity":1,"message":"424","line":30,"column":8,"nodeType":"364","messageId":"365","endLine":30,"endColumn":21},{"ruleId":"362","severity":1,"message":"425","line":30,"column":25,"nodeType":"364","messageId":"365","endLine":30,"endColumn":40},{"ruleId":"362","severity":1,"message":"426","line":31,"column":8,"nodeType":"364","messageId":"365","endLine":31,"endColumn":13},{"ruleId":"362","severity":1,"message":"427","line":36,"column":11,"nodeType":"364","messageId":"365","endLine":36,"endColumn":19},{"ruleId":"362","severity":1,"message":"428","line":37,"column":12,"nodeType":"364","messageId":"365","endLine":37,"endColumn":17},{"ruleId":"362","severity":1,"message":"429","line":40,"column":12,"nodeType":"364","messageId":"365","endLine":40,"endColumn":18},{"ruleId":"362","severity":1,"message":"430","line":41,"column":9,"nodeType":"364","messageId":"365","endLine":41,"endColumn":17},{"ruleId":"362","severity":1,"message":"431","line":46,"column":11,"nodeType":"364","messageId":"365","endLine":46,"endColumn":25},{"ruleId":"362","severity":1,"message":"432","line":50,"column":11,"nodeType":"364","messageId":"365","endLine":50,"endColumn":22},{"ruleId":"376","severity":1,"message":"433","line":88,"column":8,"nodeType":"378","endLine":88,"endColumn":10,"suggestions":"434"},{"ruleId":"362","severity":1,"message":"370","line":2,"column":24,"nodeType":"364","messageId":"365","endLine":2,"endColumn":44},{"ruleId":"362","severity":1,"message":"367","line":3,"column":18,"nodeType":"364","messageId":"365","endLine":3,"endColumn":27},{"ruleId":"362","severity":1,"message":"368","line":3,"column":29,"nodeType":"364","messageId":"365","endLine":3,"endColumn":32},{"ruleId":"362","severity":1,"message":"371","line":3,"column":34,"nodeType":"364","messageId":"365","endLine":3,"endColumn":37},{"ruleId":"362","severity":1,"message":"372","line":182,"column":10,"nodeType":"364","messageId":"365","endLine":182,"endColumn":16},{"ruleId":"362","severity":1,"message":"373","line":185,"column":9,"nodeType":"364","messageId":"365","endLine":185,"endColumn":17},{"ruleId":"362","severity":1,"message":"374","line":186,"column":9,"nodeType":"364","messageId":"365","endLine":186,"endColumn":26},{"ruleId":"362","severity":1,"message":"375","line":203,"column":9,"nodeType":"364","messageId":"365","endLine":203,"endColumn":20},{"ruleId":"376","severity":1,"message":"377","line":209,"column":6,"nodeType":"378","endLine":209,"endColumn":24,"suggestions":"435"},{"ruleId":"362","severity":1,"message":"380","line":234,"column":9,"nodeType":"364","messageId":"365","endLine":234,"endColumn":19},{"ruleId":"362","severity":1,"message":"436","line":2,"column":8,"nodeType":"364","messageId":"365","endLine":2,"endColumn":29},{"ruleId":"362","severity":1,"message":"437","line":4,"column":8,"nodeType":"364","messageId":"365","endLine":4,"endColumn":19},{"ruleId":"362","severity":1,"message":"438","line":7,"column":8,"nodeType":"364","messageId":"365","endLine":7,"endColumn":12},{"ruleId":"362","severity":1,"message":"439","line":8,"column":21,"nodeType":"364","messageId":"365","endLine":8,"endColumn":29},{"ruleId":"362","severity":1,"message":"440","line":9,"column":23,"nodeType":"364","messageId":"365","endLine":9,"endColumn":34},{"ruleId":"362","severity":1,"message":"410","line":10,"column":8,"nodeType":"364","messageId":"365","endLine":10,"endColumn":17},{"ruleId":"362","severity":1,"message":"423","line":10,"column":21,"nodeType":"364","messageId":"365","endLine":10,"endColumn":32},{"ruleId":"376","severity":1,"message":"413","line":29,"column":8,"nodeType":"378","endLine":29,"endColumn":10,"suggestions":"441"},{"ruleId":"362","severity":1,"message":"442","line":8,"column":8,"nodeType":"364","messageId":"365","endLine":8,"endColumn":22},{"ruleId":"362","severity":1,"message":"410","line":9,"column":8,"nodeType":"364","messageId":"365","endLine":9,"endColumn":17},{"ruleId":"362","severity":1,"message":"423","line":9,"column":21,"nodeType":"364","messageId":"365","endLine":9,"endColumn":32},{"ruleId":"362","severity":1,"message":"443","line":19,"column":12,"nodeType":"364","messageId":"365","endLine":19,"endColumn":19},{"ruleId":"362","severity":1,"message":"444","line":43,"column":11,"nodeType":"364","messageId":"365","endLine":43,"endColumn":24},{"ruleId":"362","severity":1,"message":"445","line":99,"column":15,"nodeType":"364","messageId":"365","endLine":99,"endColumn":18},{"ruleId":"362","severity":1,"message":"446","line":109,"column":11,"nodeType":"364","messageId":"365","endLine":109,"endColumn":29},{"ruleId":"362","severity":1,"message":"445","line":127,"column":15,"nodeType":"364","messageId":"365","endLine":127,"endColumn":18},{"ruleId":"376","severity":1,"message":"447","line":145,"column":8,"nodeType":"378","endLine":145,"endColumn":19,"suggestions":"448"},{"ruleId":"362","severity":1,"message":"449","line":2,"column":7,"nodeType":"364","messageId":"365","endLine":2,"endColumn":15},{"ruleId":"362","severity":1,"message":"450","line":3,"column":7,"nodeType":"364","messageId":"365","endLine":3,"endColumn":18},{"ruleId":"362","severity":1,"message":"451","line":4,"column":7,"nodeType":"364","messageId":"365","endLine":4,"endColumn":19},{"ruleId":"362","severity":1,"message":"452","line":19,"column":11,"nodeType":"364","messageId":"365","endLine":19,"endColumn":15},{"ruleId":"362","severity":1,"message":"453","line":24,"column":7,"nodeType":"364","messageId":"365","endLine":24,"endColumn":12},{"ruleId":"362","severity":1,"message":"438","line":5,"column":8,"nodeType":"364","messageId":"365","endLine":5,"endColumn":12},{"ruleId":"362","severity":1,"message":"439","line":6,"column":21,"nodeType":"364","messageId":"365","endLine":6,"endColumn":29},{"ruleId":"362","severity":1,"message":"440","line":7,"column":23,"nodeType":"364","messageId":"365","endLine":7,"endColumn":34},{"ruleId":"362","severity":1,"message":"410","line":8,"column":8,"nodeType":"364","messageId":"365","endLine":8,"endColumn":17},{"ruleId":"362","severity":1,"message":"423","line":8,"column":21,"nodeType":"364","messageId":"365","endLine":8,"endColumn":32},{"ruleId":"376","severity":1,"message":"413","line":27,"column":8,"nodeType":"378","endLine":27,"endColumn":10,"suggestions":"454"},{"ruleId":"362","severity":1,"message":"418","line":14,"column":21,"nodeType":"364","messageId":"365","endLine":14,"endColumn":27},{"ruleId":"362","severity":1,"message":"455","line":18,"column":10,"nodeType":"364","messageId":"365","endLine":18,"endColumn":13},{"ruleId":"362","severity":1,"message":"419","line":20,"column":8,"nodeType":"364","messageId":"365","endLine":20,"endColumn":22},{"ruleId":"376","severity":1,"message":"456","line":80,"column":8,"nodeType":"378","endLine":80,"endColumn":19,"suggestions":"457"},{"ruleId":"362","severity":1,"message":"445","line":91,"column":15,"nodeType":"364","messageId":"365","endLine":91,"endColumn":18},{"ruleId":"362","severity":1,"message":"458","line":1,"column":8,"nodeType":"364","messageId":"365","endLine":1,"endColumn":13},{"ruleId":"362","severity":1,"message":"459","line":3,"column":10,"nodeType":"364","messageId":"365","endLine":3,"endColumn":19},{"ruleId":"362","severity":1,"message":"418","line":14,"column":10,"nodeType":"364","messageId":"365","endLine":14,"endColumn":16},{"ruleId":"362","severity":1,"message":"460","line":15,"column":8,"nodeType":"364","messageId":"365","endLine":15,"endColumn":22},{"ruleId":"362","severity":1,"message":"442","line":21,"column":8,"nodeType":"364","messageId":"365","endLine":21,"endColumn":22},{"ruleId":"362","severity":1,"message":"445","line":63,"column":15,"nodeType":"364","messageId":"365","endLine":63,"endColumn":18},{"ruleId":"461","severity":1,"message":"462","line":79,"column":40,"nodeType":"463","messageId":"464","endLine":79,"endColumn":42},{"ruleId":"376","severity":1,"message":"465","line":107,"column":8,"nodeType":"378","endLine":107,"endColumn":24,"suggestions":"466"},{"ruleId":"362","severity":1,"message":"467","line":1,"column":23,"nodeType":"364","messageId":"365","endLine":1,"endColumn":37},{"ruleId":"362","severity":1,"message":"467","line":1,"column":23,"nodeType":"364","messageId":"365","endLine":1,"endColumn":37},{"ruleId":"362","severity":1,"message":"467","line":1,"column":23,"nodeType":"364","messageId":"365","endLine":1,"endColumn":37},"no-native-reassign",["468"],"no-negated-in-lhs",["469"],"no-unused-vars","'WatchList' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'commodityList' is assigned a value but never used.","'SlideTransitionGroup' is defined but never used.","'Col' is defined but never used.","'result' is assigned a value but never used.","'forexAPI' is assigned a value but never used.","'secondaryForexAPI' is assigned a value but never used.","'displayName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getResults'. Either include it or remove the dependency array.","ArrayExpression",["470"],"'forexArray' is assigned a value but never used.","'tokenPrice' is assigned a value but never used.",["471"],"'data' is assigned a value but never used.","'getId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'makeApiCall' and 'throttledApiCall'. Either include them or remove the dependency array.",["472"],"'displayId' is assigned a value but never used.","'forexName' is assigned a value but never used.","'aggregatedSearch' is assigned a value but never used.","'setAggregatedSearch' is assigned a value but never used.","'input' is assigned a value but never used.","'setInput' is assigned a value but never used.","'mergeForex' is assigned a value but never used.","'mergeCrypto' is assigned a value but never used.","'mergeCommodity' is assigned a value but never used.","'Component' is defined but never used.",["468"],["469"],"'store' is defined but never used.","'Provider' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'MainLineChart' is defined but never used.",["473"],["468"],["469"],"'LogInButton' is defined but never used.","'SignUpButton' is defined but never used.","'userSlice' is defined but never used.","'settings' is assigned a value but never used.","'handleLogIn' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'status'. Either include it or remove the dependency array.",["474"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'watchlistSlice' is defined but never used.","'watchlistActions' is defined but never used.","'singleToken' is defined but never used.","'chart' is defined but never used.","'userActions' is defined but never used.","'geckoAPISlice' is defined but never used.","'geckoAPIActions' is defined but never used.","'Popup' is defined but never used.","'dispatch' is assigned a value but never used.","'faves' is assigned a value but never used.","'extAPI' is assigned a value but never used.","'navigate' is assigned a value but never used.","'portfolioRedux' is assigned a value but never used.","'togglePopup' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkIfLoggedIn'. Either include it or remove the dependency array.",["475"],["476"],"'PortfolioResultsTable' is defined but never used.","'backendAPIs' is defined but never used.","'user' is defined but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.",["477"],"'portfolioSlice' is defined but never used.","'loading' is assigned a value but never used.","'initialValues' is assigned a value but never used.","'res' is assigned a value but never used.","'handleEditIdChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkEditMode'. Either include it or remove the dependency array.",["478"],"'loginUrl' is assigned a value but never used.","'porfolioUrl' is assigned a value but never used.","'watchlistUrl' is assigned a value but never used.","'user' is assigned a value but never used.","'store' is assigned a value but never used.",["479"],"'Api' is defined but never used.","React Hook useEffect has a missing dependency: 'callForWatchlist'. Either include it or remove the dependency array.",["480"],"'axios' is defined but never used.","'tokenList' is defined but never used.","'StarBorderIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'callForPortfolio'. Either include it or remove the dependency array.",["481"],"'configureStore' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"482","fix":"483"},{"desc":"484","fix":"485"},{"desc":"486","fix":"487"},{"desc":"484","fix":"488"},{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"482","fix":"493"},{"desc":"489","fix":"494"},{"desc":"495","fix":"496"},{"desc":"489","fix":"497"},{"desc":"498","fix":"499"},{"desc":"500","fix":"501"},"Update the dependencies array to be: [getResults, props.forexState]",{"range":"502","text":"503"},"Update the dependencies array to be: [getResults, props.cryptoState]",{"range":"504","text":"505"},"Update the dependencies array to be: [makeApiCall, throttledApiCall]",{"range":"506","text":"507"},{"range":"508","text":"505"},"Update the dependencies array to be: [status]",{"range":"509","text":"510"},"Update the dependencies array to be: [checkIfLoggedIn]",{"range":"511","text":"512"},{"range":"513","text":"503"},{"range":"514","text":"510"},"Update the dependencies array to be: [checkEditMode, portfolio]",{"range":"515","text":"516"},{"range":"517","text":"510"},"Update the dependencies array to be: [callForWatchlist, watchlist]",{"range":"518","text":"519"},"Update the dependencies array to be: [callForPortfolio, portfolioRedux]",{"range":"520","text":"521"},[8446,8464],"[getResults, props.forexState]",[556,575],"[getResults, props.cryptoState]",[1175,1177],"[makeApiCall, throttledApiCall]",[556,575],[2200,2202],"[status]",[2758,2760],"[checkIfLoggedIn]",[8446,8464],[940,942],[4714,4725],"[checkEditMode, portfolio]",[818,820],[2952,2963],"[callForWatchlist, watchlist]",[3951,3967],"[callForPortfolio, portfolioRedux]"]