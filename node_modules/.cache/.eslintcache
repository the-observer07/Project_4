[{"/Users/inspireadmin/Documents/GitHub/Project_2/src/index.js":"1","/Users/inspireadmin/Documents/GitHub/Project_2/src/App.js":"2","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Commodity.js":"3","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Forex.js":"4","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Crypto.js":"5","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenListApiData.js":"6","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenList.js":"7","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/AggregateInput.js":"8","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/CommodityList.js":"9","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/ForexList.js":"10","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/DataTicker.js":"11","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/WatchList.js":"12","/Users/inspireadmin/Documents/GitHub/Project_4/src/index.js":"13","/Users/inspireadmin/Documents/GitHub/Project_4/src/App.js":"14","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Landing.js":"15","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Home.js":"16","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/DataTicker.js":"17","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/AggregateInput.js":"18","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/TokenList.js":"19","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/Crypto.js":"20","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/TokenListApiData.js":"21","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/User.js":"22","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/ResponsiveAppBar.js":"23","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/Table.js":"24","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/unused/Forex.js":"25","/Users/inspireadmin/Documents/GitHub/Project_4/src/utils/coingeckoAPICalls.js":"26","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/LogInButton.js":"27","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/SignUpButton.js":"28","/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Portfolio.js":"29","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/PortfolioResultsTable.js":"30","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/PortfolioForm.js":"31","/Users/inspireadmin/Documents/GitHub/Project_4/src/utils/backendAPIs.js":"32"},{"size":142,"mtime":1616592305000,"results":"33","hashOfConfig":"34"},{"size":463,"mtime":1648198519549,"results":"35","hashOfConfig":"34"},{"size":2076,"mtime":1648198519550,"results":"36","hashOfConfig":"34"},{"size":11290,"mtime":1648198519552,"results":"37","hashOfConfig":"34"},{"size":1663,"mtime":1648198519551,"results":"38","hashOfConfig":"34"},{"size":845502,"mtime":1648198519558,"results":"39","hashOfConfig":"34"},{"size":1355,"mtime":1648198519553,"results":"40","hashOfConfig":"34"},{"size":2226,"mtime":1648198519550,"results":"41","hashOfConfig":"34"},{"size":238,"mtime":1648007118042,"results":"42","hashOfConfig":"34"},{"size":7155,"mtime":1648025038708,"results":"43","hashOfConfig":"34"},{"size":1904,"mtime":1648198519552,"results":"44","hashOfConfig":"34"},{"size":263,"mtime":1648198519559,"results":"45","hashOfConfig":"34"},{"size":142,"mtime":1616592305000,"results":"46","hashOfConfig":"47"},{"size":752,"mtime":1651049377390,"results":"48","hashOfConfig":"47"},{"size":111,"mtime":1650943826155,"results":"49","hashOfConfig":"47"},{"size":756,"mtime":1650972307451,"results":"50","hashOfConfig":"47"},{"size":1904,"mtime":1648198519552,"results":"51","hashOfConfig":"47"},{"size":2593,"mtime":1650971894961,"results":"52","hashOfConfig":"47"},{"size":1355,"mtime":1648198519553,"results":"53","hashOfConfig":"47"},{"size":1663,"mtime":1648198519551,"results":"54","hashOfConfig":"47"},{"size":845502,"mtime":1648198519558,"results":"55","hashOfConfig":"47"},{"size":102,"mtime":1650942127776,"results":"56","hashOfConfig":"47"},{"size":7460,"mtime":1651048353993,"results":"57","hashOfConfig":"47"},{"size":6388,"mtime":1651053238614,"results":"58","hashOfConfig":"47"},{"size":11290,"mtime":1648198519552,"results":"59","hashOfConfig":"47"},{"size":564,"mtime":1650976216886,"results":"60","hashOfConfig":"47"},{"size":1732,"mtime":1651048159780,"results":"61","hashOfConfig":"47"},{"size":2408,"mtime":1651048571664,"results":"62","hashOfConfig":"47"},{"size":377,"mtime":1651051191379,"results":"63","hashOfConfig":"47"},{"size":2488,"mtime":1651049013220,"results":"64","hashOfConfig":"47"},{"size":1732,"mtime":1651052667153,"results":"65","hashOfConfig":"47"},{"size":1447,"mtime":1651051882151,"results":"66","hashOfConfig":"47"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1as9eb2",{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"9317a4",{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"107"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"119"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"107"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"107"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"111"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"166"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/inspireadmin/Documents/GitHub/Project_2/src/index.js",[],[],["177","178"],"/Users/inspireadmin/Documents/GitHub/Project_2/src/App.js",["179"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Commodity.js",["180","181","182","183"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Forex.js",["184","185","186","187","188","189","190","191","192","193"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Crypto.js",["194","195","196","197","198"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenListApiData.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenList.js",["199","200","201","202"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/AggregateInput.js",["203","204","205","206","207","208","209","210"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/CommodityList.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/ForexList.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/DataTicker.js",["211"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/WatchList.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/index.js",[],[],["212","213"],"/Users/inspireadmin/Documents/GitHub/Project_4/src/App.js",[],[],["214","215"],"/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Landing.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Home.js",["216","217","218","219","220"],[],"import React, { useEffect } from \"react\";\nimport DataTicker from \"../component/DataTicker\";\nimport { AppBar, Container, Toolbar, Typography } from \"@mui/material\";\n// import WatchList from \"./component/WatchList\";\n// import { useNavigate } from \"react-router-dom\";\nimport ResponsiveAppBar from \"../component/ResponsiveAppBar\";\nimport Table from \"../component/Table\";\n\nconst Home = () => {\n    return (\n        <div>\n            <ResponsiveAppBar />\n            <DataTicker />\n            <br />\n            <br />\n            <div className=\"container\">\n                <Table />\n            </div>\n            <br />\n            <br />\n            <br />\n            <br />\n            {/* <WatchList /> */}\n        </div>\n    );\n};\n\nexport default Home;\n",["221","222"],"/Users/inspireadmin/Documents/GitHub/Project_4/src/component/DataTicker.js",["223"],[],"import React, { useState, useEffect, Component } from \"react\";\nimport Ticker, { FinancialTicker, NewsTicker } from \"nice-react-ticker\";\n\nconst DataTicker = () => {\n  const [cryptoData, setCryptoData] = useState([]);\n  const [newsData, setNewsData] = useState(\"\");\n\n  const cryptoApiTicker = \"https://api.coingecko.com/api/v3/exchanges/binance\";\n  const financialNewsTicker =\n    \"https://api.marketaux.com/v1/news/all?symbols=TSLA,GME,AMC&filter_entities=true&language=en&api_token=WMIGwTBG1aEbYNV6vYbrBbu8TXB4R0mAXH1Zu5tU\";\n\n  useEffect(() => {\n    fetchFinancialNewsAPI();\n    fetchCryptoAPI();\n    setInterval(() => {\n      fetchCryptoAPI();\n    }, 10000);\n  }, []);\n\n  const fetchCryptoAPI = async () => {\n    const res = await fetch(cryptoApiTicker);\n    const rawData = await res.json();\n    let sevenData = rawData.tickers;\n    const firstSeven = sevenData.filter((element, index) => index < 9);\n    const filteredData = firstSeven.map((element, index) => {\n      return (\n        <FinancialTicker\n          id={index}\n          change={true}\n          symbol={element.base}\n          lastPrice={element.converted_last.usd}\n          currentPrice={element.last}\n        />\n      );\n    });\n    setCryptoData(filteredData);\n  };\n\n  const fetchFinancialNewsAPI = async () => {\n    const res = await fetch(financialNewsTicker);\n    const rawData = await res.json();\n    const financialMappedData = rawData.data.map((element, index) => {\n      return (\n        <NewsTicker\n          id={index}\n          icon={element.image_url}\n          title={element.title}\n          url={element.url}\n        />\n      );\n    });\n    setNewsData(financialMappedData);\n  };\n\n  return (\n    <div>\n      <Ticker className=\"tickerItemFinancial\">{cryptoData}</Ticker>\n      <div className=\"newsticker\">\n        <Ticker isNewsTicker={true}>{newsData}</Ticker>\n      </div>\n    </div>\n  );\n};\n\nexport default DataTicker;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/AggregateInput.js",["224","225","226","227","228","229","230","231"],[],"import React, { useState } from \"react\";\nimport commodityList from \"./CommodityList\";\nimport forexList from \"./ForexList\";\nimport { DropdownList } from \"react-widgets/cjs\";\nimport TokenList from \"./TokenList\";\nimport Crypto from \"./Crypto\";\nimport Forex from \"./unused/Forex\";\nimport Commodity from \"./Commodity\";\n\nconst AggregateInput = (props) => {\n    const forexNameArray = [];\n    const forexName = forexList.map((chicken) => {\n        return forexNameArray.push(chicken.name);\n    });\n\n    const [id, setId] = useState([]);\n    const [aggregatedSearch, setAggregatedSearch] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [forexState, setForexState] = useState(false);\n    const [cryptoState, setCryptoState] = useState(false);\n    const [input, setInput] = useState(\"\");\n\n    const aggregatedArray = [];\n\n    const mergeForex = forexNameArray.map((chicken) => {\n        return aggregatedArray.push(chicken);\n    });\n\n    const mergeCrypto = id.map((chicken) => {\n        return aggregatedArray.push(chicken);\n    });\n\n    const mergeCommodity = commodityList.map((chicken) => {\n        return aggregatedArray.push(chicken);\n    });\n\n    const handleSearchAggregate = (event) => {\n        const searchWord = event;\n\n        if (commodityList.indexOf(searchWord) !== -1) {\n            setContent(<Commodity commoditySearchWord={searchWord} />);\n        } else if (\n            forexList.find((element) => element.name === searchWord) !==\n            undefined\n        ) {\n            setContent(\n                <Forex\n                    forexSearchWord={searchWord}\n                    forexState={forexState}\n                    setForexState={setForexState}\n                />\n            );\n        } else {\n            setContent(\n                <Crypto\n                    searchWord={searchWord}\n                    cryptoState={cryptoState}\n                    setCryptoState={setCryptoState}\n                />\n            );\n        }\n    };\n\n    return (\n        <div>\n            <div className=\"int-container\">\n                <div className=\"holder\">\n                    <br />\n                    <h2 className=\"header\">QUERY YOUR MOONSHOT</h2>\n                    <br />\n                    <DropdownList\n                        data={aggregatedArray}\n                        onChange={handleSearchAggregate}\n                    />\n                    <br />\n                    <TokenList id={id} setId={setId} />\n                    {content}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AggregateInput;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/TokenList.js",["232","233","234","235"],[],"import React, { useEffect, useState } from \"react\";\nimport Bottleneck from \"bottleneck\";\n\nconst TokenList = (props) => {\n  const [data, setData] = useState([]);\n  const [type, setType] = useState([]);\n\n  const tickerData = \"https://api.coingecko.com/api/v3/exchanges/binance\";\n\n  const limiter = new Bottleneck({\n    reservoir: 100, // initial value\n    reservoirRefreshAmount: 100,\n    reservoirRefreshInterval: 60 * 500,\n\n    // also use maxConcurrent and/or minTime for safety\n    maxConcurrent: 1,\n    minTime: 333, // pick a value that makes sense for your use case\n  });\n\n  const makeApiCall = async () => {\n    const res = await fetch(tickerData);\n    const rawData = await res.json();\n    setData(rawData.tickers);\n    const filteredData = rawData.tickers.map((duck) => {\n      return {\n        id: duck.base,\n        price: duck.last,\n      };\n    });\n\n    setType(filteredData);\n    const emptyArray = [];\n    const getId = filteredData.map((chicken) => {\n      return emptyArray.push(chicken.id);\n    });\n\n    props.setId(emptyArray);\n  };\n\n  const throttledApiCall = limiter.wrap(makeApiCall);\n\n  useEffect(() => {\n    throttledApiCall();\n    makeApiCall();\n  }, []);\n\n  const cryptoIdArray = [];\n  const displayId = type.map((chicken) => {\n    return cryptoIdArray.push(chicken.id);\n  });\n\n  return <div></div>;\n};\n\nexport default TokenList;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/Crypto.js",["236","237","238","239","240"],[],"import React, { useState, useEffect } from \"react\";\n\nimport tokenList from \"./TokenListApiData\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\n// import AggregateInput from \"./AggregateInput\";\n\nconst Crypto = (props) => {\n  const [filterData, setFilterData] = useState(\"\");\n  const [tokenPrice, setTokenPrice] = useState([]);\n  const [extractedData, setExtractedData] = useState(\"\");\n\n  const cryptoAPIQuery = `https://api.coingecko.com/api/v3/simple/price?ids=${filterData}&vs_currencies=USD`;\n\n  useEffect(() => {\n    getResults();\n  }, [props.cryptoState]);\n\n  const getResults = () => {\n    const searchWord = props.searchWord;\n    console.log(searchWord);\n    const newFilter = Object.keys(tokenList).reduce((result, key) => {\n      if (tokenList[key].name.match(searchWord)) {\n        result = tokenList[key].id;\n      }\n\n      return result;\n    }, \"\");\n    setFilterData(newFilter);\n    console.log(newFilter);\n  };\n\n  const makeApiCall = async () => {\n    const res = await fetch(cryptoAPIQuery);\n    const rawData = await res.json();\n\n    setTokenPrice(rawData);\n    console.log(rawData);\n\n    const tokenPriceArray = [rawData];\n    const obj1 = tokenPriceArray[0];\n    console.log(obj1);\n\n    const obj2 = obj1[Object.keys(obj1)[0]];\n    console.log(obj2);\n\n    const value = obj2[Object.keys(obj2)[0]];\n    console.log(value);\n    setExtractedData(value);\n  };\n\n  return (\n    <div>\n      <br />\n      <Button onClick={makeApiCall} size=\"lg\">\n        Submit\n      </Button>\n      <br />\n      <br />\n      <br />\n      <div className=\"data\">Token price : ${extractedData}</div>\n      <br />\n    </div>\n  );\n};\n\nexport default Crypto;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/TokenListApiData.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/User.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/component/ResponsiveAppBar.js",["241","242"],[],"import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useState } from \"react\";\nimport LogInButton from \"../component/LogInButton\";\nimport SignUpButton from \"../component/SignUpButton\";\n\nconst pages = [\"Watchlist\", \"Portfolio\"];\nconst settings = [\"Profile\", \"Preferences\", \"Logout\"];\n\nconst ResponsiveAppBar = () => {\n    const [loggedIn, setLoggedIn] = useState(\"false\");\n\n    const [anchorElNav, setAnchorElNav] = React.useState(null);\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n    const handleOpenNavMenu = (event) => {\n        setAnchorElNav(event.currentTarget);\n    };\n    const handleOpenUserMenu = (event) => {\n        setAnchorElUser(event.currentTarget);\n    };\n\n    const handleCloseNavMenu = () => {\n        setAnchorElNav(null);\n    };\n\n    const handleCloseUserMenu = () => {\n        setAnchorElUser(null);\n    };\n\n    const handleLogIn = () => {};\n\n    return (\n        <AppBar position=\"static\" sx={{ bgcolor: \"#16181f\" }}>\n            <Container maxWidth=\"xl\">\n                <Toolbar disableGutters>\n                    <Typography\n                        variant=\"h6\"\n                        noWrap\n                        component=\"div\"\n                        sx={{ mr: 2, display: { xs: \"none\", md: \"flex\" } }}\n                    >\n                        LOGO\n                    </Typography>\n\n                    <Box\n                        sx={{\n                            flexGrow: 1,\n                            display: { xs: \"flex\", md: \"none\" },\n                        }}\n                    >\n                        <IconButton\n                            size=\"large\"\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            onClick={handleOpenNavMenu}\n                            color=\"inherit\"\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Menu\n                            id=\"menu-appbar\"\n                            anchorEl={anchorElNav}\n                            anchorOrigin={{\n                                vertical: \"bottom\",\n                                horizontal: \"left\",\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: \"top\",\n                                horizontal: \"left\",\n                            }}\n                            open={Boolean(anchorElNav)}\n                            onClose={handleCloseNavMenu}\n                            sx={{\n                                display: { xs: \"block\", md: \"none\" },\n                            }}\n                        >\n                            {pages.map((page) => (\n                                <MenuItem\n                                    key={page}\n                                    onClick={handleCloseNavMenu}\n                                >\n                                    <Typography textAlign=\"center\">\n                                        {page}\n                                    </Typography>\n                                </MenuItem>\n                            ))}\n                        </Menu>\n                    </Box>\n                    <Typography\n                        variant=\"h6\"\n                        noWrap\n                        component=\"div\"\n                        sx={{\n                            flexGrow: 1,\n                            display: { xs: \"flex\", md: \"none\" },\n                        }}\n                    >\n                        LOGO\n                    </Typography>\n                    <Box\n                        sx={{\n                            flexGrow: 1,\n                            display: { xs: \"none\", md: \"flex\" },\n                        }}\n                    >\n                        {pages.map((page) => (\n                            <Button\n                                key={page}\n                                onClick={handleCloseNavMenu}\n                                sx={{ my: 2, color: \"white\", display: \"block\" }}\n                            >\n                                {page}\n                            </Button>\n                        ))}\n                    </Box>\n\n                    {loggedIn === \"true\" ? (\n                        <div>\n                            <Box sx={{ flexGrow: 0 }}>\n                                <Tooltip title=\"Open settings\">\n                                    <IconButton\n                                        onClick={handleOpenUserMenu}\n                                        sx={{ p: 0 }}\n                                    >\n                                        <Avatar\n                                            alt=\"Remy Sharp\"\n                                            src=\"/static/images/avatar/2.jpg\"\n                                        />\n                                    </IconButton>\n                                </Tooltip>\n                                <Menu\n                                    sx={{ mt: \"45px\" }}\n                                    id=\"menu-appbar\"\n                                    anchorEl={anchorElUser}\n                                    anchorOrigin={{\n                                        vertical: \"top\",\n                                        horizontal: \"right\",\n                                    }}\n                                    keepMounted\n                                    transformOrigin={{\n                                        vertical: \"top\",\n                                        horizontal: \"right\",\n                                    }}\n                                    open={Boolean(anchorElUser)}\n                                    onClose={handleCloseUserMenu}\n                                >\n                                    {settings.map((setting) => (\n                                        <MenuItem\n                                            key={setting}\n                                            onClick={handleCloseUserMenu}\n                                        >\n                                            <Typography textAlign=\"center\">\n                                                {setting}\n                                            </Typography>\n                                        </MenuItem>\n                                    ))}\n                                </Menu>\n                            </Box>\n                        </div>\n                    ) : (\n                        <div>\n                            <LogInButton />\n                            <SignUpButton />\n                        </div>\n                    )}\n                </Toolbar>\n            </Container>\n        </AppBar>\n    );\n};\nexport default ResponsiveAppBar;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/Table.js",["243"],[],"import axios from \"axios\";\nimport React from \"react\";\nimport { tokenList } from \"../utils/coingeckoAPICalls\";\nimport { useState, useEffect } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport \"../fonts.css\";\nimport { Typography } from \"@mui/material\";\nimport { Button, Box } from \"@mui/material\";\nimport StarBorderIcon from \"@mui/icons-material/StarBorder\";\nimport IconButton from \"@mui/material/IconButton\";\n\nconst TableData = () => {\n    const [tokens, setTokens] = useState([]);\n    // const [Pending, setPending] = useState();\n\n    const getData = async () => {\n        const callForTokenList = await axios.get(tokenList());\n\n        setTokens(callForTokenList.data);\n\n        console.log(callForTokenList);\n    };\n\n    useEffect(() => {\n        getData();\n    }, []);\n    return (\n        <div>\n            {/* {JSON.stringify(tokens)} */}\n            <div className=\"int-container\">\n                <div className=\"holder\">\n                    <br />\n                    {/* <h2 className=\"header\">\n                        Cryptocurrency Tokens by Market Cap\n                    </h2> */}\n                    <br />\n                    <TableContainer component={Paper}>\n                        <Table sx={{ minWidth: 350 }} aria-label=\"simple table\">\n                            <Typography\n                                variant=\"h4\"\n                                style={{ margin: 18, fontFamily: \"Roboto\" }}\n                            ></Typography>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell></TableCell>\n                                    <TableCell>Token</TableCell>\n                                    <TableCell align=\"right\">Price</TableCell>\n                                    <TableCell align=\"right\">\n                                        Market Cap\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        % Change\n                                    </TableCell>\n                                    <TableCell></TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {tokens.map((token) => (\n                                    <TableRow\n                                        key={token.name}\n                                        sx={{\n                                            \"&:last-child td, &:last-child th\":\n                                                {\n                                                    border: 0,\n                                                },\n                                        }}\n                                    >\n                                        <TableCell align=\"right\">\n                                            <Box\n                                                component=\"img\"\n                                                sx={{\n                                                    height: 25,\n                                                    width: 25,\n                                                    maxHeight: {\n                                                        xs: 233,\n                                                        md: 167,\n                                                    },\n                                                    maxWidth: {\n                                                        xs: 350,\n                                                        md: 250,\n                                                    },\n                                                }}\n                                                alt=\"\"\n                                                src={`${token.image}`}\n                                            />\n                                        </TableCell>\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            {token.name}\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            {`$ ${parseFloat(\n                                                token.current_price\n                                            ).toFixed(2)}`}\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            {`$ ${parseFloat(\n                                                token.market_cap\n                                            ).toLocaleString(\"en-US\")}`}\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            {` ${parseFloat(\n                                                token.market_cap_change_percentage_24h\n                                            ).toFixed(2)}`}\n                                        </TableCell>\n\n                                        <TableCell align=\"right\">\n                                            <IconButton\n                                                color=\"primary\"\n                                                aria-label=\"add to shopping cart\"\n                                                sx={{\n                                                    height: 30,\n                                                    width: 30,\n                                                }}\n                                            >\n                                                <StarBorderIcon />\n                                            </IconButton>\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TableData;\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/component/unused/Forex.js",["244","245","246","247","248","249","250","251","252","253"],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/utils/coingeckoAPICalls.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/component/LogInButton.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/component/SignUpButton.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/pages/Portfolio.js",["254"],[],"import React from \"react\";\nimport PortfolioResultsTable from \"../component/PortfolioResultsTable\";\nimport PortfolioForm from \"../component/PortfolioForm\";\nimport backendAPIs from \"../utils/backendAPIs\";\n\nconst Portfolio = () => {\n    return (\n        <div>\n            <PortfolioForm />\n            <PortfolioResultsTable />\n        </div>\n    );\n};\n\nexport default Portfolio;\n",["255","256"],"/Users/inspireadmin/Documents/GitHub/Project_4/src/component/PortfolioResultsTable.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_4/src/component/PortfolioForm.js",["257","258","259"],[],"import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport backendAPIs from \"../utils/backendAPIs\";\nimport { useState } from \"react\";\n\nexport default function HelperTextMisaligned() {\n    const [data, setData] = useState(\"\");\n    const handleChange = (event) => {\n        console.log(event.target.value);\n    };\n    const handleSubmit = () => {};\n\n    return (\n        <Box\n            sx={{\n                bgcolor: \"primary.main\",\n                display: \"flex\",\n                alignItems: \"center\",\n                \"& > :not(style)\": { m: 1 },\n            }}\n        >\n            <TextField\n                helperText=\"Please enter your token\"\n                id=\"demo-helper-text-misaligned\"\n                label=\"Token\"\n                variant=\"filled\"\n                color=\"\"\n                focused\n                onChange={handleChange}\n            />\n            <TextField\n                helperText=\"Please enter your purchase price\"\n                id=\"demo-helper-text-misaligned-no-helper\"\n                label=\"Price\"\n                variant=\"filled\"\n                color=\"\"\n                focused\n                onChange={handleChange}\n            />\n            <TextField\n                helperText=\"Please enter your purchase quantity\"\n                id=\"demo-helper-text-misaligned-no-helper\"\n                label=\"Qty\"\n                variant=\"filled\"\n                color=\"\"\n                focused\n                onChange={handleChange}\n            />\n            <Button variant=\"contained\" onSubmit={handleSubmit}>\n                Submit\n            </Button>\n        </Box>\n    );\n}\n","/Users/inspireadmin/Documents/GitHub/Project_4/src/utils/backendAPIs.js",[],[],{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","severity":1,"message":"265","line":4,"column":8,"nodeType":"266","messageId":"267","endLine":4,"endColumn":17},{"ruleId":"264","severity":1,"message":"268","line":1,"column":27,"nodeType":"266","messageId":"267","endLine":1,"endColumn":36},{"ruleId":"264","severity":1,"message":"269","line":2,"column":18,"nodeType":"266","messageId":"267","endLine":2,"endColumn":27},{"ruleId":"264","severity":1,"message":"270","line":2,"column":29,"nodeType":"266","messageId":"267","endLine":2,"endColumn":32},{"ruleId":"264","severity":1,"message":"271","line":6,"column":7,"nodeType":"266","messageId":"267","endLine":6,"endColumn":20},{"ruleId":"264","severity":1,"message":"272","line":2,"column":24,"nodeType":"266","messageId":"267","endLine":2,"endColumn":44},{"ruleId":"264","severity":1,"message":"269","line":3,"column":18,"nodeType":"266","messageId":"267","endLine":3,"endColumn":27},{"ruleId":"264","severity":1,"message":"270","line":3,"column":29,"nodeType":"266","messageId":"267","endLine":3,"endColumn":32},{"ruleId":"264","severity":1,"message":"273","line":3,"column":34,"nodeType":"266","messageId":"267","endLine":3,"endColumn":37},{"ruleId":"264","severity":1,"message":"274","line":182,"column":10,"nodeType":"266","messageId":"267","endLine":182,"endColumn":16},{"ruleId":"264","severity":1,"message":"275","line":185,"column":9,"nodeType":"266","messageId":"267","endLine":185,"endColumn":17},{"ruleId":"264","severity":1,"message":"276","line":186,"column":9,"nodeType":"266","messageId":"267","endLine":186,"endColumn":26},{"ruleId":"264","severity":1,"message":"277","line":203,"column":9,"nodeType":"266","messageId":"267","endLine":203,"endColumn":20},{"ruleId":"278","severity":1,"message":"279","line":209,"column":6,"nodeType":"280","endLine":209,"endColumn":24,"suggestions":"281"},{"ruleId":"264","severity":1,"message":"282","line":234,"column":9,"nodeType":"266","messageId":"267","endLine":234,"endColumn":19},{"ruleId":"264","severity":1,"message":"269","line":4,"column":18,"nodeType":"266","messageId":"267","endLine":4,"endColumn":27},{"ruleId":"264","severity":1,"message":"270","line":4,"column":29,"nodeType":"266","messageId":"267","endLine":4,"endColumn":32},{"ruleId":"264","severity":1,"message":"273","line":4,"column":34,"nodeType":"266","messageId":"267","endLine":4,"endColumn":37},{"ruleId":"264","severity":1,"message":"283","line":9,"column":10,"nodeType":"266","messageId":"267","endLine":9,"endColumn":20},{"ruleId":"278","severity":1,"message":"279","line":16,"column":6,"nodeType":"280","endLine":16,"endColumn":25,"suggestions":"284"},{"ruleId":"264","severity":1,"message":"285","line":5,"column":10,"nodeType":"266","messageId":"267","endLine":5,"endColumn":14},{"ruleId":"264","severity":1,"message":"286","line":33,"column":11,"nodeType":"266","messageId":"267","endLine":33,"endColumn":16},{"ruleId":"278","severity":1,"message":"287","line":45,"column":6,"nodeType":"280","endLine":45,"endColumn":8,"suggestions":"288"},{"ruleId":"264","severity":1,"message":"289","line":48,"column":9,"nodeType":"266","messageId":"267","endLine":48,"endColumn":18},{"ruleId":"264","severity":1,"message":"290","line":12,"column":9,"nodeType":"266","messageId":"267","endLine":12,"endColumn":18},{"ruleId":"264","severity":1,"message":"291","line":17,"column":10,"nodeType":"266","messageId":"267","endLine":17,"endColumn":26},{"ruleId":"264","severity":1,"message":"292","line":17,"column":28,"nodeType":"266","messageId":"267","endLine":17,"endColumn":47},{"ruleId":"264","severity":1,"message":"293","line":21,"column":10,"nodeType":"266","messageId":"267","endLine":21,"endColumn":15},{"ruleId":"264","severity":1,"message":"294","line":21,"column":17,"nodeType":"266","messageId":"267","endLine":21,"endColumn":25},{"ruleId":"264","severity":1,"message":"295","line":25,"column":9,"nodeType":"266","messageId":"267","endLine":25,"endColumn":19},{"ruleId":"264","severity":1,"message":"296","line":29,"column":9,"nodeType":"266","messageId":"267","endLine":29,"endColumn":20},{"ruleId":"264","severity":1,"message":"297","line":33,"column":9,"nodeType":"266","messageId":"267","endLine":33,"endColumn":23},{"ruleId":"264","severity":1,"message":"298","line":1,"column":38,"nodeType":"266","messageId":"267","endLine":1,"endColumn":47},{"ruleId":"260","replacedBy":"299"},{"ruleId":"262","replacedBy":"300"},{"ruleId":"260","replacedBy":"301"},{"ruleId":"262","replacedBy":"302"},{"ruleId":"264","severity":1,"message":"268","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":26},{"ruleId":"264","severity":1,"message":"303","line":3,"column":10,"nodeType":"266","messageId":"267","endLine":3,"endColumn":16},{"ruleId":"264","severity":1,"message":"269","line":3,"column":18,"nodeType":"266","messageId":"267","endLine":3,"endColumn":27},{"ruleId":"264","severity":1,"message":"304","line":3,"column":29,"nodeType":"266","messageId":"267","endLine":3,"endColumn":36},{"ruleId":"264","severity":1,"message":"305","line":3,"column":38,"nodeType":"266","messageId":"267","endLine":3,"endColumn":48},{"ruleId":"260","replacedBy":"306"},{"ruleId":"262","replacedBy":"307"},{"ruleId":"264","severity":1,"message":"298","line":1,"column":38,"nodeType":"266","messageId":"267","endLine":1,"endColumn":47},{"ruleId":"264","severity":1,"message":"290","line":12,"column":11,"nodeType":"266","messageId":"267","endLine":12,"endColumn":20},{"ruleId":"264","severity":1,"message":"291","line":17,"column":12,"nodeType":"266","messageId":"267","endLine":17,"endColumn":28},{"ruleId":"264","severity":1,"message":"292","line":17,"column":30,"nodeType":"266","messageId":"267","endLine":17,"endColumn":49},{"ruleId":"264","severity":1,"message":"293","line":21,"column":12,"nodeType":"266","messageId":"267","endLine":21,"endColumn":17},{"ruleId":"264","severity":1,"message":"294","line":21,"column":19,"nodeType":"266","messageId":"267","endLine":21,"endColumn":27},{"ruleId":"264","severity":1,"message":"295","line":25,"column":11,"nodeType":"266","messageId":"267","endLine":25,"endColumn":21},{"ruleId":"264","severity":1,"message":"296","line":29,"column":11,"nodeType":"266","messageId":"267","endLine":29,"endColumn":22},{"ruleId":"264","severity":1,"message":"297","line":33,"column":11,"nodeType":"266","messageId":"267","endLine":33,"endColumn":25},{"ruleId":"264","severity":1,"message":"285","line":5,"column":10,"nodeType":"266","messageId":"267","endLine":5,"endColumn":14},{"ruleId":"264","severity":1,"message":"286","line":33,"column":11,"nodeType":"266","messageId":"267","endLine":33,"endColumn":16},{"ruleId":"278","severity":1,"message":"287","line":45,"column":6,"nodeType":"280","endLine":45,"endColumn":8,"suggestions":"308"},{"ruleId":"264","severity":1,"message":"289","line":48,"column":9,"nodeType":"266","messageId":"267","endLine":48,"endColumn":18},{"ruleId":"264","severity":1,"message":"269","line":4,"column":18,"nodeType":"266","messageId":"267","endLine":4,"endColumn":27},{"ruleId":"264","severity":1,"message":"270","line":4,"column":29,"nodeType":"266","messageId":"267","endLine":4,"endColumn":32},{"ruleId":"264","severity":1,"message":"273","line":4,"column":34,"nodeType":"266","messageId":"267","endLine":4,"endColumn":37},{"ruleId":"264","severity":1,"message":"283","line":9,"column":10,"nodeType":"266","messageId":"267","endLine":9,"endColumn":20},{"ruleId":"278","severity":1,"message":"279","line":16,"column":6,"nodeType":"280","endLine":16,"endColumn":25,"suggestions":"309"},{"ruleId":"264","severity":1,"message":"310","line":22,"column":22,"nodeType":"266","messageId":"267","endLine":22,"endColumn":33},{"ruleId":"264","severity":1,"message":"311","line":42,"column":11,"nodeType":"266","messageId":"267","endLine":42,"endColumn":22},{"ruleId":"264","severity":1,"message":"312","line":14,"column":10,"nodeType":"266","messageId":"267","endLine":14,"endColumn":16},{"ruleId":"264","severity":1,"message":"272","line":2,"column":24,"nodeType":"266","messageId":"267","endLine":2,"endColumn":44},{"ruleId":"264","severity":1,"message":"269","line":3,"column":18,"nodeType":"266","messageId":"267","endLine":3,"endColumn":27},{"ruleId":"264","severity":1,"message":"270","line":3,"column":29,"nodeType":"266","messageId":"267","endLine":3,"endColumn":32},{"ruleId":"264","severity":1,"message":"273","line":3,"column":34,"nodeType":"266","messageId":"267","endLine":3,"endColumn":37},{"ruleId":"264","severity":1,"message":"274","line":182,"column":10,"nodeType":"266","messageId":"267","endLine":182,"endColumn":16},{"ruleId":"264","severity":1,"message":"275","line":185,"column":9,"nodeType":"266","messageId":"267","endLine":185,"endColumn":17},{"ruleId":"264","severity":1,"message":"276","line":186,"column":9,"nodeType":"266","messageId":"267","endLine":186,"endColumn":26},{"ruleId":"264","severity":1,"message":"277","line":203,"column":9,"nodeType":"266","messageId":"267","endLine":203,"endColumn":20},{"ruleId":"278","severity":1,"message":"279","line":209,"column":6,"nodeType":"280","endLine":209,"endColumn":24,"suggestions":"313"},{"ruleId":"264","severity":1,"message":"282","line":234,"column":9,"nodeType":"266","messageId":"267","endLine":234,"endColumn":19},{"ruleId":"264","severity":1,"message":"314","line":4,"column":8,"nodeType":"266","messageId":"267","endLine":4,"endColumn":19},{"ruleId":"260","replacedBy":"315"},{"ruleId":"262","replacedBy":"316"},{"ruleId":"264","severity":1,"message":"314","line":5,"column":8,"nodeType":"266","messageId":"267","endLine":5,"endColumn":19},{"ruleId":"264","severity":1,"message":"285","line":9,"column":12,"nodeType":"266","messageId":"267","endLine":9,"endColumn":16},{"ruleId":"264","severity":1,"message":"317","line":9,"column":18,"nodeType":"266","messageId":"267","endLine":9,"endColumn":25},"no-native-reassign",["318"],"no-negated-in-lhs",["319"],"no-unused-vars","'WatchList' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'commodityList' is assigned a value but never used.","'SlideTransitionGroup' is defined but never used.","'Col' is defined but never used.","'result' is assigned a value but never used.","'forexAPI' is assigned a value but never used.","'secondaryForexAPI' is assigned a value but never used.","'displayName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getResults'. Either include it or remove the dependency array.","ArrayExpression",["320"],"'forexArray' is assigned a value but never used.","'tokenPrice' is assigned a value but never used.",["321"],"'data' is assigned a value but never used.","'getId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'makeApiCall' and 'throttledApiCall'. Either include them or remove the dependency array.",["322"],"'displayId' is assigned a value but never used.","'forexName' is assigned a value but never used.","'aggregatedSearch' is assigned a value but never used.","'setAggregatedSearch' is assigned a value but never used.","'input' is assigned a value but never used.","'setInput' is assigned a value but never used.","'mergeForex' is assigned a value but never used.","'mergeCrypto' is assigned a value but never used.","'mergeCommodity' is assigned a value but never used.","'Component' is defined but never used.",["318"],["319"],["318"],["319"],"'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.",["318"],["319"],["323"],["324"],"'setLoggedIn' is assigned a value but never used.","'handleLogIn' is assigned a value but never used.","'Button' is defined but never used.",["325"],"'backendAPIs' is defined but never used.",["318"],["319"],"'setData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"330","fix":"332"},{"desc":"328","fix":"333"},{"desc":"326","fix":"334"},"Update the dependencies array to be: [getResults, props.forexState]",{"range":"335","text":"336"},"Update the dependencies array to be: [getResults, props.cryptoState]",{"range":"337","text":"338"},"Update the dependencies array to be: [makeApiCall, throttledApiCall]",{"range":"339","text":"340"},{"range":"341","text":"340"},{"range":"342","text":"338"},{"range":"343","text":"336"},[8446,8464],"[getResults, props.forexState]",[556,575],"[getResults, props.cryptoState]",[1175,1177],"[makeApiCall, throttledApiCall]",[1175,1177],[556,575],[8446,8464]]