{"ast":null,"code":"import _asyncToGenerator from\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect,Component}from\"react\";import Ticker,{FinancialTicker,NewsTicker}from\"nice-react-ticker\";import icon from\"./news-icon.png\";// import Ticker from \"react-ticker\";\nimport Bottleneck from\"bottleneck\";// import bootstrap from \"bootstrap\";\nimport{type}from\"@testing-library/user-event/dist/type\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DataTicker=function DataTicker(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),cryptoData=_useState2[0],setCryptoData=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),newsData=_useState4[0],setNewsData=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),type=_useState6[0],setType=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),newsTitle=_useState8[0],setNewsTitle=_useState8[1];var cryptoApiTicker=\"https://api.coingecko.com/api/v3/exchanges/binance\";var financialNewsTicker=\"https://api.marketaux.com/v1/news/all?symbols=TSLA,GME,AMC&filter_entities=true&language=en&api_token=tCXxnvvlVvQUAkFItjmYeycDW7eQEEbw1KhLCZI1\";// meta=\"11:10:20\"]\n// const limiter = new Bottleneck({\n//   maxConcurrent: 1,\n//   minTime: 5000, // pick a value that makes sense for your use case\n// });\n// const result = await limiter.schedule(() => fetchCryptoAPI());\n//   const result = await limiter.schedule(() => makeApiCall());\nuseEffect(function(){fetchFinancialNewsAPI();fetchCryptoAPI();setInterval(function(){fetchCryptoAPI();},10000);},[]);var fetchCryptoAPI=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,rawData,sevenData,firstSeven,filteredData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(cryptoApiTicker);case 2:res=_context.sent;_context.next=5;return res.json();case 5:rawData=_context.sent;sevenData=rawData.tickers;firstSeven=sevenData.filter(function(element,index){return index<9;});filteredData=firstSeven.map(function(element,index){return/*#__PURE__*/_jsx(FinancialTicker,{id:index,change:true,symbol:element.base,lastPrice:element.converted_last.usd,currentPrice:element.last});});setCryptoData(filteredData);case 10:case\"end\":return _context.stop();}}},_callee);}));return function fetchCryptoAPI(){return _ref.apply(this,arguments);};}();// console.log(cryptoData);\nvar fetchFinancialNewsAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var res,rawData,financialMappedData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(financialNewsTicker);case 2:res=_context2.sent;_context2.next=5;return res.json();case 5:rawData=_context2.sent;// console.log(rawData.data);\nfinancialMappedData=rawData.data.map(function(element,index){return/*#__PURE__*/_jsx(NewsTicker,{id:index,icon:element.image_url,title:element.title,url:element.url});});setNewsData(financialMappedData);case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchFinancialNewsAPI(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Ticker,{className:\"tickerItemFinancial\",children:cryptoData}),/*#__PURE__*/_jsx(\"div\",{className:\"newsticker\",children:/*#__PURE__*/_jsx(Ticker,{isNewsTicker:true,children:newsData})})]});};export default DataTicker;","map":{"version":3,"sources":["/Users/inspireadmin/Documents/GitHub/Project_2/src/component/DataTicker.js"],"names":["React","useState","useEffect","Component","Ticker","FinancialTicker","NewsTicker","icon","Bottleneck","type","DataTicker","cryptoData","setCryptoData","newsData","setNewsData","setType","newsTitle","setNewsTitle","cryptoApiTicker","financialNewsTicker","fetchFinancialNewsAPI","fetchCryptoAPI","setInterval","fetch","res","json","rawData","sevenData","tickers","firstSeven","filter","element","index","filteredData","map","base","converted_last","usd","last","financialMappedData","data","image_url","title","url"],"mappings":"+YAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,SAArC,KAAsD,OAAtD,CACA,MAAOC,CAAAA,MAAP,EAAiBC,eAAjB,CAAkCC,UAAlC,KAAoD,mBAApD,CACA,MAAOC,CAAAA,IAAP,KAAiB,iBAAjB,CACA;AACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA;AAEA,OAASC,IAAT,KAAqB,uCAArB,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,cAAoCT,QAAQ,CAAC,EAAD,CAA5C,wCAAOU,UAAP,eAAmBC,aAAnB,eACA,eAAgCX,QAAQ,CAAC,EAAD,CAAxC,yCAAOY,QAAP,eAAiBC,WAAjB,eACA,eAAwBb,QAAQ,CAAC,EAAD,CAAhC,yCAAOQ,IAAP,eAAaM,OAAb,eACA,eAAkCd,QAAQ,CAAC,EAAD,CAA1C,yCAAOe,SAAP,eAAkBC,YAAlB,eAEA,GAAMC,CAAAA,eAAe,CAAG,oDAAxB,CACA,GAAMC,CAAAA,mBAAmB,CACvB,gJADF,CAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEAjB,SAAS,CAAC,UAAM,CACdkB,qBAAqB,GACrBC,cAAc,GACdC,WAAW,CAAC,UAAM,CAChBD,cAAc,GACf,CAFU,CAER,KAFQ,CAAX,CAGD,CANQ,CAMN,EANM,CAAT,CAQA,GAAMA,CAAAA,cAAc,0FAAG,2MACHE,CAAAA,KAAK,CAACL,eAAD,CADF,QACfM,GADe,qCAECA,CAAAA,GAAG,CAACC,IAAJ,EAFD,QAEfC,OAFe,eAGjBC,SAHiB,CAGLD,OAAO,CAACE,OAHH,CAIfC,UAJe,CAIFF,SAAS,CAACG,MAAV,CAAiB,SAACC,OAAD,CAAUC,KAAV,QAAoBA,CAAAA,KAAK,CAAG,CAA5B,EAAjB,CAJE,CAKfC,YALe,CAKAJ,UAAU,CAACK,GAAX,CAAe,SAACH,OAAD,CAAUC,KAAV,CAAoB,CACtD,mBACE,KAAC,eAAD,EACE,EAAE,CAAEA,KADN,CAEE,MAAM,CAAE,IAFV,CAGE,MAAM,CAAED,OAAO,CAACI,IAHlB,CAIE,SAAS,CAAEJ,OAAO,CAACK,cAAR,CAAuBC,GAJpC,CAKE,YAAY,CAAEN,OAAO,CAACO,IALxB,EADF,CASD,CAVoB,CALA,CAgBrB1B,aAAa,CAACqB,YAAD,CAAb,CAhBqB,uDAAH,kBAAdZ,CAAAA,cAAc,0CAApB,CAkBA;AAEA,GAAMD,CAAAA,qBAAqB,2FAAG,mMACVG,CAAAA,KAAK,CAACJ,mBAAD,CADK,QACtBK,GADsB,uCAENA,CAAAA,GAAG,CAACC,IAAJ,EAFM,QAEtBC,OAFsB,gBAG5B;AACMa,mBAJsB,CAIAb,OAAO,CAACc,IAAR,CAAaN,GAAb,CAAiB,SAACH,OAAD,CAAUC,KAAV,CAAoB,CAC/D,mBACE,KAAC,UAAD,EACE,EAAE,CAAEA,KADN,CAEE,IAAI,CAAED,OAAO,CAACU,SAFhB,CAGE,KAAK,CAAEV,OAAO,CAACW,KAHjB,CAIE,GAAG,CAAEX,OAAO,CAACY,GAJf,EADF,CAQD,CAT2B,CAJA,CAc5B7B,WAAW,CAACyB,mBAAD,CAAX,CAd4B,wDAAH,kBAArBnB,CAAAA,qBAAqB,2CAA3B,CAiBA,mBACE,oCACE,KAAC,MAAD,EAAQ,SAAS,CAAC,qBAAlB,UAAyCT,UAAzC,EADF,cAEE,YAAK,SAAS,CAAC,YAAf,uBACE,KAAC,MAAD,EAAQ,YAAY,CAAE,IAAtB,UAA6BE,QAA7B,EADF,EAFF,GADF,CAQD,CAzED,CA2EA,cAAeH,CAAAA,UAAf","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport Ticker, { FinancialTicker, NewsTicker } from \"nice-react-ticker\";\nimport icon from \"./news-icon.png\";\n// import Ticker from \"react-ticker\";\nimport Bottleneck from \"bottleneck\";\n// import bootstrap from \"bootstrap\";\n\nimport { type } from \"@testing-library/user-event/dist/type\";\n\nconst DataTicker = () => {\n  const [cryptoData, setCryptoData] = useState([]);\n  const [newsData, setNewsData] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [newsTitle, setNewsTitle] = useState([]);\n\n  const cryptoApiTicker = \"https://api.coingecko.com/api/v3/exchanges/binance\";\n  const financialNewsTicker =\n    \"https://api.marketaux.com/v1/news/all?symbols=TSLA,GME,AMC&filter_entities=true&language=en&api_token=tCXxnvvlVvQUAkFItjmYeycDW7eQEEbw1KhLCZI1\";\n\n  // meta=\"11:10:20\"]\n  // const limiter = new Bottleneck({\n  //   maxConcurrent: 1,\n  //   minTime: 5000, // pick a value that makes sense for your use case\n  // });\n\n  // const result = await limiter.schedule(() => fetchCryptoAPI());\n\n  //   const result = await limiter.schedule(() => makeApiCall());\n\n  useEffect(() => {\n    fetchFinancialNewsAPI();\n    fetchCryptoAPI();\n    setInterval(() => {\n      fetchCryptoAPI();\n    }, 10000);\n  }, []);\n\n  const fetchCryptoAPI = async () => {\n    const res = await fetch(cryptoApiTicker);\n    const rawData = await res.json();\n    let sevenData = rawData.tickers;\n    const firstSeven = sevenData.filter((element, index) => index < 9);\n    const filteredData = firstSeven.map((element, index) => {\n      return (\n        <FinancialTicker\n          id={index}\n          change={true}\n          symbol={element.base}\n          lastPrice={element.converted_last.usd}\n          currentPrice={element.last}\n        />\n      );\n    });\n    setCryptoData(filteredData);\n  };\n  // console.log(cryptoData);\n\n  const fetchFinancialNewsAPI = async () => {\n    const res = await fetch(financialNewsTicker);\n    const rawData = await res.json();\n    // console.log(rawData.data);\n    const financialMappedData = rawData.data.map((element, index) => {\n      return (\n        <NewsTicker\n          id={index}\n          icon={element.image_url}\n          title={element.title}\n          url={element.url}\n        />\n      );\n    });\n    setNewsData(financialMappedData);\n  };\n\n  return (\n    <div>\n      <Ticker className=\"tickerItemFinancial\">{cryptoData}</Ticker>\n      <div className=\"newsticker\">\n        <Ticker isNewsTicker={true}>{newsData}</Ticker>\n      </div>\n    </div>\n  );\n};\n\nexport default DataTicker;\n"]},"metadata":{},"sourceType":"module"}