{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar BottleneckError, States;\nBottleneckError = require(\"./BottleneckError\");\n\nStates = /*#__PURE__*/function () {\n  function States(status1) {\n    _classCallCheck(this, States);\n\n    this.status = status1;\n    this._jobs = {};\n    this.counts = this.status.map(function () {\n      return 0;\n    });\n  }\n\n  _createClass(States, [{\n    key: \"next\",\n    value: function next(id) {\n      var current, next;\n      current = this._jobs[id];\n      next = current + 1;\n\n      if (current != null && next < this.status.length) {\n        this.counts[current]--;\n        this.counts[next]++;\n        return this._jobs[id]++;\n      } else if (current != null) {\n        this.counts[current]--;\n        return delete this._jobs[id];\n      }\n    }\n  }, {\n    key: \"start\",\n    value: function start(id) {\n      var initial;\n      initial = 0;\n      this._jobs[id] = initial;\n      return this.counts[initial]++;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(id) {\n      var current;\n      current = this._jobs[id];\n\n      if (current != null) {\n        this.counts[current]--;\n        delete this._jobs[id];\n      }\n\n      return current != null;\n    }\n  }, {\n    key: \"jobStatus\",\n    value: function jobStatus(id) {\n      var ref;\n      return (ref = this.status[this._jobs[id]]) != null ? ref : null;\n    }\n  }, {\n    key: \"statusJobs\",\n    value: function statusJobs(status) {\n      var k, pos, ref, results, v;\n\n      if (status != null) {\n        pos = this.status.indexOf(status);\n\n        if (pos < 0) {\n          throw new BottleneckError(\"status must be one of \".concat(this.status.join(', ')));\n        }\n\n        ref = this._jobs;\n        results = [];\n\n        for (k in ref) {\n          v = ref[k];\n\n          if (v === pos) {\n            results.push(k);\n          }\n        }\n\n        return results;\n      } else {\n        return Object.keys(this._jobs);\n      }\n    }\n  }, {\n    key: \"statusCounts\",\n    value: function statusCounts() {\n      var _this = this;\n\n      return this.counts.reduce(function (acc, v, i) {\n        acc[_this.status[i]] = v;\n        return acc;\n      }, {});\n    }\n  }]);\n\n  return States;\n}();\n\nmodule.exports = States;","map":{"version":3,"sources":["/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/bottleneck/lib/States.js"],"names":["BottleneckError","States","require","status1","status","_jobs","counts","map","id","current","next","length","initial","ref","k","pos","results","v","indexOf","join","push","Object","keys","reduce","acc","i","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar BottleneckError, States;\nBottleneckError = require(\"./BottleneckError\");\nStates = class States {\n  constructor(status1) {\n    this.status = status1;\n    this._jobs = {};\n    this.counts = this.status.map(function () {\n      return 0;\n    });\n  }\n\n  next(id) {\n    var current, next;\n    current = this._jobs[id];\n    next = current + 1;\n\n    if (current != null && next < this.status.length) {\n      this.counts[current]--;\n      this.counts[next]++;\n      return this._jobs[id]++;\n    } else if (current != null) {\n      this.counts[current]--;\n      return delete this._jobs[id];\n    }\n  }\n\n  start(id) {\n    var initial;\n    initial = 0;\n    this._jobs[id] = initial;\n    return this.counts[initial]++;\n  }\n\n  remove(id) {\n    var current;\n    current = this._jobs[id];\n\n    if (current != null) {\n      this.counts[current]--;\n      delete this._jobs[id];\n    }\n\n    return current != null;\n  }\n\n  jobStatus(id) {\n    var ref;\n    return (ref = this.status[this._jobs[id]]) != null ? ref : null;\n  }\n\n  statusJobs(status) {\n    var k, pos, ref, results, v;\n\n    if (status != null) {\n      pos = this.status.indexOf(status);\n\n      if (pos < 0) {\n        throw new BottleneckError(`status must be one of ${this.status.join(', ')}`);\n      }\n\n      ref = this._jobs;\n      results = [];\n\n      for (k in ref) {\n        v = ref[k];\n\n        if (v === pos) {\n          results.push(k);\n        }\n      }\n\n      return results;\n    } else {\n      return Object.keys(this._jobs);\n    }\n  }\n\n  statusCounts() {\n    return this.counts.reduce((acc, v, i) => {\n      acc[this.status[i]] = v;\n      return acc;\n    }, {});\n  }\n\n};\nmodule.exports = States;"]},"metadata":{},"sourceType":"script"}