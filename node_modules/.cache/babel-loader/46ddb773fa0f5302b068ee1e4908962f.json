{"ast":null,"code":"var _jsxFileName = \"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/AggregateInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport commodityList from \"./CommodityList\";\nimport forexList from \"./ForexList\";\nimport { DropdownList } from \"react-widgets/cjs\";\nimport TokenList from \"./TokenList\";\nimport Crypto from \"./Crypto\";\nimport Forex from \"./Forex\";\nimport Commodity from \"./Commodity\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AggregateInput = props => {\n  _s();\n\n  const forexNameArray = [];\n  const forexName = forexList.map(chicken => {\n    return forexNameArray.push(chicken.name);\n  });\n  const [id, setId] = useState([]);\n  const [aggregatedSearch, setAggregatedSearch] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [forexState, setForexState] = useState(false);\n  const [cryptoState, setCryptoState] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const aggregatedArray = [];\n  const mergeForex = forexNameArray.map(chicken => {\n    return aggregatedArray.push(chicken);\n  });\n  const mergeCrypto = id.map(chicken => {\n    return aggregatedArray.push(chicken);\n  });\n  const mergeCommodity = commodityList.map(chicken => {\n    return aggregatedArray.push(chicken);\n  });\n\n  const handleSearchAggregate = event => {\n    const searchWord = event;\n\n    if (commodityList.indexOf(searchWord) !== -1) {\n      setContent( /*#__PURE__*/_jsxDEV(Commodity, {\n        commoditySearchWord: searchWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 18\n      }, this));\n    } else if (forexList.find(element => element.name === searchWord) !== undefined) {\n      setContent( /*#__PURE__*/_jsxDEV(Forex, {\n        forexSearchWord: searchWord,\n        forexState: forexState,\n        setForexState: setForexState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this));\n    } else {\n      setContent( /*#__PURE__*/_jsxDEV(Crypto, {\n        searchWord: searchWord,\n        cryptoState: cryptoState,\n        setCryptoState: setCryptoState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"int-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"holder\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"header\",\n          children: \"QUERY YOUR MOONSHOT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DropdownList, {\n          data: aggregatedArray,\n          onChange: handleSearchAggregate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TokenList, {\n          id: id,\n          setId: setId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AggregateInput, \"nd6xqUTicHoNAVqL74F58Cv4XqU=\");\n\n_c = AggregateInput;\nexport default AggregateInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"AggregateInput\");","map":{"version":3,"sources":["/Users/inspireadmin/Documents/GitHub/Project_2/src/component/AggregateInput.js"],"names":["React","useState","commodityList","forexList","DropdownList","TokenList","Crypto","Forex","Commodity","AggregateInput","props","forexNameArray","forexName","map","chicken","push","name","id","setId","aggregatedSearch","setAggregatedSearch","content","setContent","forexState","setForexState","cryptoState","setCryptoState","input","setInput","aggregatedArray","mergeForex","mergeCrypto","mergeCommodity","handleSearchAggregate","event","searchWord","indexOf","find","element","undefined"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport commodityList from \"./CommodityList\";\nimport forexList from \"./ForexList\";\nimport { DropdownList } from \"react-widgets/cjs\";\nimport TokenList from \"./TokenList\";\nimport Crypto from \"./Crypto\";\nimport Forex from \"./Forex\";\nimport Commodity from \"./Commodity\";\n\nconst AggregateInput = (props) => {\n  const forexNameArray = [];\n  const forexName = forexList.map((chicken) => {\n    return forexNameArray.push(chicken.name);\n  });\n\n  const [id, setId] = useState([]);\n  const [aggregatedSearch, setAggregatedSearch] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [forexState, setForexState] = useState(false);\n  const [cryptoState, setCryptoState] = useState(false);\n  const [input, setInput] = useState(\"\");\n\n  const aggregatedArray = [];\n\n  const mergeForex = forexNameArray.map((chicken) => {\n    return aggregatedArray.push(chicken);\n  });\n\n  const mergeCrypto = id.map((chicken) => {\n    return aggregatedArray.push(chicken);\n  });\n\n  const mergeCommodity = commodityList.map((chicken) => {\n    return aggregatedArray.push(chicken);\n  });\n\n  const handleSearchAggregate = (event) => {\n    const searchWord = event;\n\n    if (commodityList.indexOf(searchWord) !== -1) {\n      setContent(<Commodity commoditySearchWord={searchWord} />);\n    } else if (\n      forexList.find((element) => element.name === searchWord) !== undefined\n    ) {\n      setContent(\n        <Forex\n          forexSearchWord={searchWord}\n          forexState={forexState}\n          setForexState={setForexState}\n        />\n      );\n    } else {\n      setContent(\n        <Crypto\n          searchWord={searchWord}\n          cryptoState={cryptoState}\n          setCryptoState={setCryptoState}\n        />\n      );\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"int-container\">\n        <div className=\"holder\">\n          <br />\n          <h2 className=\"header\">QUERY YOUR MOONSHOT</h2>\n          <br />\n          <DropdownList\n            data={aggregatedArray}\n            onChange={handleSearchAggregate}\n          />\n          <br />\n          <TokenList id={id} setId={setId} />\n          {content}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AggregateInput;\n"]},"metadata":{},"sourceType":"module"}