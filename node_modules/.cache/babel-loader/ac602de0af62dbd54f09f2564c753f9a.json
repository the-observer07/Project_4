{"ast":null,"code":"var _jsxFileName = \"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/AggregateInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport commodityList from \"./CommodityList\";\nimport forexList from \"./ForexList\";\nimport { DropdownList } from \"react-widgets/cjs\";\nimport TokenList from \"./TokenList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AggregateInput = () => {\n  _s();\n\n  console.log(commodityList); //   console.log(forexList);\n\n  const forexNameArray = [];\n  const forexName = forexList.map(chicken => {\n    return forexNameArray.push(chicken.name);\n  });\n  console.log(forexNameArray);\n  const [id, setId] = useState([]);\n  console.log(id);\n  const aggregatedArray = [];\n  const mergeForex = forexNameArray.map(chicken => {\n    return aggregatedArray.push(chicken);\n  });\n  const mergeCrypto = id.map(chicken => {\n    return aggregatedArray.push(chicken);\n  });\n  const mergeCommodity = commodityList.map(chicken => {\n    return aggregatedArray.push(chicken);\n  });\n  console.log(aggregatedArray);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DropdownList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TokenList, {\n      id: id,\n      setId: setId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AggregateInput, \"0IlG3nv7EcfIueW49+bfYsYfADo=\");\n\n_c = AggregateInput;\nexport default AggregateInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"AggregateInput\");","map":{"version":3,"sources":["/Users/inspireadmin/Documents/GitHub/Project_2/src/component/AggregateInput.js"],"names":["React","useState","commodityList","forexList","DropdownList","TokenList","AggregateInput","console","log","forexNameArray","forexName","map","chicken","push","name","id","setId","aggregatedArray","mergeForex","mergeCrypto","mergeCommodity"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYN,aAAZ,EAD2B,CAG3B;;AAEA,QAAMO,cAAc,GAAG,EAAvB;AACA,QAAMC,SAAS,GAAGP,SAAS,CAACQ,GAAV,CAAeC,OAAD,IAAa;AAC3C,WAAOH,cAAc,CAACI,IAAf,CAAoBD,OAAO,CAACE,IAA5B,CAAP;AACD,GAFiB,CAAlB;AAGAP,EAAAA,OAAO,CAACC,GAAR,CAAYC,cAAZ;AAEA,QAAM,CAACM,EAAD,EAAKC,KAAL,IAAcf,QAAQ,CAAC,EAAD,CAA5B;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYO,EAAZ;AAEA,QAAME,eAAe,GAAG,EAAxB;AAEA,QAAMC,UAAU,GAAGT,cAAc,CAACE,GAAf,CAAoBC,OAAD,IAAa;AACjD,WAAOK,eAAe,CAACJ,IAAhB,CAAqBD,OAArB,CAAP;AACD,GAFkB,CAAnB;AAIA,QAAMO,WAAW,GAAGJ,EAAE,CAACJ,GAAH,CAAQC,OAAD,IAAa;AACtC,WAAOK,eAAe,CAACJ,IAAhB,CAAqBD,OAArB,CAAP;AACD,GAFmB,CAApB;AAIA,QAAMQ,cAAc,GAAGlB,aAAa,CAACS,GAAd,CAAmBC,OAAD,IAAa;AACpD,WAAOK,eAAe,CAACJ,IAAhB,CAAqBD,OAArB,CAAP;AACD,GAFsB,CAAvB;AAIAL,EAAAA,OAAO,CAACC,GAAR,CAAYS,eAAZ;AAEA,sBACE;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,SAAD;AAAW,MAAA,EAAE,EAAEF,EAAf;AAAmB,MAAA,KAAK,EAAEC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArCD;;GAAMV,c;;KAAAA,c;AAuCN,eAAeA,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport commodityList from \"./CommodityList\";\nimport forexList from \"./ForexList\";\nimport { DropdownList } from \"react-widgets/cjs\";\nimport TokenList from \"./TokenList\";\n\nconst AggregateInput = () => {\n  console.log(commodityList);\n\n  //   console.log(forexList);\n\n  const forexNameArray = [];\n  const forexName = forexList.map((chicken) => {\n    return forexNameArray.push(chicken.name);\n  });\n  console.log(forexNameArray);\n\n  const [id, setId] = useState([]);\n  console.log(id);\n\n  const aggregatedArray = [];\n\n  const mergeForex = forexNameArray.map((chicken) => {\n    return aggregatedArray.push(chicken);\n  });\n\n  const mergeCrypto = id.map((chicken) => {\n    return aggregatedArray.push(chicken);\n  });\n\n  const mergeCommodity = commodityList.map((chicken) => {\n    return aggregatedArray.push(chicken);\n  });\n\n  console.log(aggregatedArray);\n\n  return (\n    <div>\n      <DropdownList />\n      <button>Submit</button>\n      <TokenList id={id} setId={setId} />\n    </div>\n  );\n};\n\nexport default AggregateInput;\n"]},"metadata":{},"sourceType":"module"}