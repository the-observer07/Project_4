{"ast":null,"code":"var _jsxFileName = \"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Crypto.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Ticker from \"react-ticker\";\nimport { DropdownList } from \"react-widgets/cjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cryptoList = [];\n\nconst Crypto = () => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [otherToken, setOtherToken] = useState(\"\"); // ForexAPI\n\n  const apiQuery = `https://api.coingecko.com/api/v3/simple/price?ids=${token}&vs_currencies=${otherToken}`;\n  const apiTicker = ``; // const makeApiCall = async () => {\n  //   const res = await fetch(forexAPI);\n  //   const rawData = await res.json();\n  //   // console.log(rawData);\n  //   const rawDataArray = [rawData];\n  //   // console.log(rawDataArray);\n  //   const sortForex = forexList.map((chicken) => {\n  //     return {\n  //       CountryName: chicken.name,\n  //     };\n  //   });\n  //   setForexType(sortForex);\n  //   const filteredData = rawDataArray.map((duck) => {\n  //     return {\n  //       price: duck.data.rates,\n  //       unit: duck.data.unit,\n  //     };\n  //   });\n  //   setType(filteredData);\n  // };\n  // console.log(type);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Ticker, {\n      children: _ref => {\n        let {\n          index\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"This is the Headline of element #\", index, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"www.my-image-source.com/\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select a token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropdownList, {\n      data: cryptoToken // forex={forexList}\n      ,\n      onChange: nextValue => setQuery(nextValue)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: makeApiCall,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Crypto, \"YmZiJUrxUum7aZ7GdrBxwiK9mIc=\");\n\n_c = Crypto;\nexport default Crypto;\n\nvar _c;\n\n$RefreshReg$(_c, \"Crypto\");","map":{"version":3,"sources":["/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Crypto.js"],"names":["React","useState","useEffect","Ticker","DropdownList","cryptoList","Crypto","query","setQuery","type","setType","token","setToken","otherToken","setOtherToken","apiQuery","apiTicker","index","cryptoToken","nextValue","makeApiCall"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,QAA6B,mBAA7B;;;AAEA,MAAMC,UAAU,GAAG,EAAnB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C,CAJmB,CAMnB;;AAEA,QAAMc,QAAQ,GAAI,qDAAoDJ,KAAM,kBAAiBE,UAAW,EAAxG;AACA,QAAMG,SAAS,GAAI,EAAnB,CATmB,CAWnB;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA,gBACG;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,4BACC;AAAA,kCACE;AAAA,4DAAsCA,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,GAAG,EAAC,0BAAT;AAAoC,YAAA,GAAG,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,wBADD;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE,QAAC,YAAD;AACE,MAAA,IAAI,EAAEC,WADR,CAEE;AAFF;AAGE,MAAA,QAAQ,EAAGC,SAAD,IAAeX,QAAQ,CAACW,SAAD;AAHnC;AAAA;AAAA;AAAA;AAAA,YAXF,eAgBE;AAAQ,MAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA3DD;;GAAMd,M;;KAAAA,M;AA6DN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Ticker from \"react-ticker\";\nimport { DropdownList } from \"react-widgets/cjs\";\n\nconst cryptoList = [];\n\nconst Crypto = () => {\n  const [query, setQuery] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [otherToken, setOtherToken] = useState(\"\");\n\n  // ForexAPI\n\n  const apiQuery = `https://api.coingecko.com/api/v3/simple/price?ids=${token}&vs_currencies=${otherToken}`;\n  const apiTicker = ``;\n\n  // const makeApiCall = async () => {\n  //   const res = await fetch(forexAPI);\n  //   const rawData = await res.json();\n\n  //   // console.log(rawData);\n\n  //   const rawDataArray = [rawData];\n\n  //   // console.log(rawDataArray);\n\n  //   const sortForex = forexList.map((chicken) => {\n  //     return {\n  //       CountryName: chicken.name,\n  //     };\n  //   });\n  //   setForexType(sortForex);\n\n  //   const filteredData = rawDataArray.map((duck) => {\n  //     return {\n  //       price: duck.data.rates,\n  //       unit: duck.data.unit,\n  //     };\n  //   });\n  //   setType(filteredData);\n  // };\n  // console.log(type);\n\n  return (\n    <div>\n      <Ticker>\n        {({ index }) => (\n          <>\n            <h1>This is the Headline of element #{index}!</h1>\n            <img src=\"www.my-image-source.com/\" alt=\"\" />\n          </>\n        )}\n      </Ticker>\n      <br />\n      <h2>Select a token</h2>\n      <DropdownList\n        data={cryptoToken}\n        // forex={forexList}\n        onChange={(nextValue) => setQuery(nextValue)}\n      />\n      <button onClick={makeApiCall}>Submit</button>\n      {/* <Result type={type} /> */}\n    </div>\n  );\n};\n\nexport default Crypto;\n"]},"metadata":{},"sourceType":"module"}