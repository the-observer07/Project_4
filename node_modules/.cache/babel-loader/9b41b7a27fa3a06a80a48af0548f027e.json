{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.notify = notify;\nexports.useFirstFocusedRender = useFirstFocusedRender;\nexports.useInstanceId = void 0;\n\nvar _react = require(\"react\");\n\nlet idCount = 0;\n\nfunction uniqueId(prefix) {\n  return '' + ((prefix == null ? '' : prefix) + ++idCount);\n}\n\nfunction notify(handler, args) {\n  // eslint-disable-next-line prefer-spread\n  if (handler) handler.apply(null, args);\n}\n\nconst useInstanceId = function (otherId) {\n  let suffix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  const id = (0, _react.useRef)();\n  if (!id.current) id.current = uniqueId('rw_');\n  return (otherId || id.current) + suffix;\n};\n/**\n * Allows for defering popup rendering untill the widget is focused,\n * or has been opened (in order to not remove it suddenly on close)\n */\n\n\nexports.useInstanceId = useInstanceId;\n\nfunction useFirstFocusedRender(focused, open) {\n  const ref = (0, _react.useRef)(false);\n  return ref.current || (focused || !!open) && (ref.current = true);\n}","map":{"version":3,"sources":["/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/react-widgets/cjs/WidgetHelpers.js"],"names":["exports","__esModule","notify","useFirstFocusedRender","useInstanceId","_react","require","idCount","uniqueId","prefix","handler","args","apply","otherId","suffix","id","useRef","current","focused","open","ref"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,MAAR,GAAiBA,MAAjB;AACAF,OAAO,CAACG,qBAAR,GAAgCA,qBAAhC;AACAH,OAAO,CAACI,aAAR,GAAwB,KAAK,CAA7B;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,OAAO,GAAG,CAAd;;AAEA,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AACxB,SAAO,MAAM,CAACA,MAAM,IAAI,IAAV,GAAiB,EAAjB,GAAsBA,MAAvB,IAAiC,EAAEF,OAAzC,CAAP;AACD;;AAED,SAASL,MAAT,CAAgBQ,OAAhB,EAAyBC,IAAzB,EAA+B;AAC7B;AACA,MAAID,OAAJ,EAAaA,OAAO,CAACE,KAAR,CAAc,IAAd,EAAoBD,IAApB;AACd;;AAED,MAAMP,aAAa,GAAG,UAACS,OAAD,EAA0B;AAAA,MAAhBC,MAAgB,uEAAP,EAAO;AAC9C,QAAMC,EAAE,GAAG,CAAC,GAAGV,MAAM,CAACW,MAAX,GAAX;AACA,MAAI,CAACD,EAAE,CAACE,OAAR,EAAiBF,EAAE,CAACE,OAAH,GAAaT,QAAQ,CAAC,KAAD,CAArB;AACjB,SAAO,CAACK,OAAO,IAAIE,EAAE,CAACE,OAAf,IAA0BH,MAAjC;AACD,CAJD;AAKA;AACA;AACA;AACA;;;AAGAd,OAAO,CAACI,aAAR,GAAwBA,aAAxB;;AAEA,SAASD,qBAAT,CAA+Be,OAA/B,EAAwCC,IAAxC,EAA8C;AAC5C,QAAMC,GAAG,GAAG,CAAC,GAAGf,MAAM,CAACW,MAAX,EAAmB,KAAnB,CAAZ;AACA,SAAOI,GAAG,CAACH,OAAJ,IAAe,CAACC,OAAO,IAAI,CAAC,CAACC,IAAd,MAAwBC,GAAG,CAACH,OAAJ,GAAc,IAAtC,CAAtB;AACD","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.notify = notify;\nexports.useFirstFocusedRender = useFirstFocusedRender;\nexports.useInstanceId = void 0;\n\nvar _react = require(\"react\");\n\nlet idCount = 0;\n\nfunction uniqueId(prefix) {\n  return '' + ((prefix == null ? '' : prefix) + ++idCount);\n}\n\nfunction notify(handler, args) {\n  // eslint-disable-next-line prefer-spread\n  if (handler) handler.apply(null, args);\n}\n\nconst useInstanceId = (otherId, suffix = '') => {\n  const id = (0, _react.useRef)();\n  if (!id.current) id.current = uniqueId('rw_');\n  return (otherId || id.current) + suffix;\n};\n/**\n * Allows for defering popup rendering untill the widget is focused,\n * or has been opened (in order to not remove it suddenly on close)\n */\n\n\nexports.useInstanceId = useInstanceId;\n\nfunction useFirstFocusedRender(focused, open) {\n  const ref = (0, _react.useRef)(false);\n  return ref.current || (focused || !!open) && (ref.current = true);\n}"]},"metadata":{},"sourceType":"script"}