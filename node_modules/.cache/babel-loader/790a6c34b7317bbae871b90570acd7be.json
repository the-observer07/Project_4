{"ast":null,"code":"var _jsxFileName = \"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TokenList = () => {\n  _s();\n\n  const coinlist = `https://pro-api.coingecko.com/api/v3/coins/list?x_cg_pro_api_key=`;\n  const [totalReactPackages, setTotalReactPackages] = useState(null); // const makeApiCall = async () => {\n  //   const res = await fetch(coinlist);\n  //   const rawData = await res.json();\n  //   console.log(rawData);\n\n  useEffect(() => {\n    // GET request using axios inside useEffect React hook\n    axios.get(coinlist).then(response => setTotalReactPackages(response.data.total)).catch(error => {\n      this.setState({\n        errorMessage: error.message\n      });\n      console.error(\"There was an error!\", error);\n    }); // empty dependency array means this effect will only run once (like componentDidMount in classes)\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Total react packages: \", totalReactPackages]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n\n_s(TokenList, \"VIv83/OfRUx/PU+lRluQfRGBnf4=\");\n\n_c = TokenList;\nexport default TokenList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TokenList\");","map":{"version":3,"sources":["/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenList.js"],"names":["React","useEffect","useState","axios","TokenList","coinlist","totalReactPackages","setTotalReactPackages","get","then","response","data","total","catch","error","setState","errorMessage","message","console"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,QAAQ,GAAI,mEAAlB;AAEA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CL,QAAQ,CAAC,IAAD,CAA5D,CAHsB,CAKtB;AACA;AACA;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAE,IAAAA,KAAK,CACFK,GADH,CACOH,QADP,EAEGI,IAFH,CAESC,QAAD,IAAcH,qBAAqB,CAACG,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAF3C,EAGGC,KAHH,CAGUC,KAAD,IAAW;AAChB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAEF,KAAK,CAACG;AAAtB,OAAd;AACAC,MAAAA,OAAO,CAACJ,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACD,KANH,EAFc,CASd;AACD,GAVQ,EAUN,EAVM,CAAT;AAYA,sBAAO;AAAA,yCAA4BR,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAvBD;;GAAMF,S;;KAAAA,S;AAyBN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst TokenList = () => {\n  const coinlist = `https://pro-api.coingecko.com/api/v3/coins/list?x_cg_pro_api_key=`;\n\n  const [totalReactPackages, setTotalReactPackages] = useState(null);\n\n  // const makeApiCall = async () => {\n  //   const res = await fetch(coinlist);\n  //   const rawData = await res.json();\n  //   console.log(rawData);\n\n  useEffect(() => {\n    // GET request using axios inside useEffect React hook\n    axios\n      .get(coinlist)\n      .then((response) => setTotalReactPackages(response.data.total))\n      .catch((error) => {\n        this.setState({ errorMessage: error.message });\n        console.error(\"There was an error!\", error);\n      });\n    // empty dependency array means this effect will only run once (like componentDidMount in classes)\n  }, []);\n\n  return <div>Total react packages: {totalReactPackages}</div>;\n};\n\nexport default TokenList;\n"]},"metadata":{},"sourceType":"module"}