{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nexports.__esModule = true;\nexports.NumberLocalizer = exports.DateLocalizer = void 0;\n\nvar _dates = _interopRequireDefault(require(\"./dates\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // assumes both are supported or none\n\n\nvar supportStyles = false;\nnew Intl.DateTimeFormat(undefined, {\n  // @ts-ignore\n  get dateStyle() {\n    supportStyles = true;\n  }\n\n});\nvar dateShort = {\n  day: 'numeric',\n  month: 'numeric',\n  year: 'numeric'\n};\nvar timeShort = {\n  hour: 'numeric',\n  minute: 'numeric'\n};\n\nvar getFormatter = function getFormatter(culture, options) {\n  return Intl.DateTimeFormat(culture, options).format;\n};\n/**\n * A `react-widgets` Localizer using native `Intl` APIs.\n *\n */\n\n\nvar IntlDateLocalizer = /*#__PURE__*/function () {\n  function IntlDateLocalizer() {\n    var _this = this;\n\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$culture = _ref.culture,\n        culture = _ref$culture === void 0 ? undefined : _ref$culture,\n        _ref$firstOfWeek = _ref.firstOfWeek,\n        firstOfWeek = _ref$firstOfWeek === void 0 ? 0 : _ref$firstOfWeek;\n\n    _classCallCheck(this, IntlDateLocalizer);\n\n    this.culture = culture;\n\n    this.firstOfWeek = function () {\n      return firstOfWeek;\n    };\n\n    function normalizeFormat(date, format) {\n      return typeof format === 'function' ? format(date, culture) : date.toLocaleString(culture, format);\n    }\n\n    var formats = {\n      date: getFormatter(culture, // @ts-ignore\n      supportStyles ? {\n        dateStyle: 'short'\n      } : dateShort),\n      time: getFormatter(culture, // @ts-ignore\n      supportStyles ? {\n        timeStyle: 'short'\n      } : timeShort),\n      datetime: getFormatter(culture, // @ts-ignore\n      supportStyles ? {\n        dateStyle: 'short',\n        timeStyle: 'short'\n      } : Object.assign({}, dateShort, timeShort)),\n      header: getFormatter(culture, {\n        month: 'short',\n        year: 'numeric'\n      }),\n      weekday: getFormatter(culture, {\n        weekday: 'narrow'\n      }),\n      dayOfMonth: getFormatter(culture, {\n        day: '2-digit'\n      }),\n      month: getFormatter(culture, {\n        month: 'short'\n      }),\n      year: getFormatter(culture, {\n        year: 'numeric'\n      }),\n      decade: function decade(date) {\n        return \"\".concat(_this.year(date), \" - \").concat(_this.year(_dates.default.endOf(date, 'decade')));\n      },\n      century: function century(date) {\n        return \"\".concat(_this.year(date), \" - \").concat(_this.year(_dates.default.endOf(date, 'century')));\n      }\n    };\n    Object.keys(formats).forEach(function (key) {\n      _this[key] = function (date, format) {\n        return format ? normalizeFormat(date, format) : formats[key](date);\n      };\n    });\n  }\n\n  _createClass(IntlDateLocalizer, [{\n    key: \"toFormattedParts\",\n    value: function toFormattedParts(date) {\n      var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        dateStyle: 'short',\n        timeStyle: 'short'\n      };\n      return Intl.DateTimeFormat(this.culture, format).formatToParts(date).filter(function (p) {\n        return p.type !== 'timeZoneName';\n      });\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(value) {\n      var date = new Date(value);\n      return isNaN(+date) ? null : date;\n    }\n  }]);\n\n  return IntlDateLocalizer;\n}();\n\nexports.DateLocalizer = IntlDateLocalizer;\n/**\n * A number localization strategy based on `Intl.NumberFormat`.\n */\n\nvar IntlNumberLocalizer = /*#__PURE__*/function () {\n  function IntlNumberLocalizer() {\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref2$culture = _ref2.culture,\n        culture = _ref2$culture === void 0 ? undefined : _ref2$culture;\n\n    _classCallCheck(this, IntlNumberLocalizer);\n\n    var _$toLocaleString$m;\n\n    this.culture = culture;\n    var decimal = 'formatToParts' in Intl.NumberFormat(culture) ? Intl.NumberFormat(culture).formatToParts(1.1)[1].value : ((_$toLocaleString$m = 1.1.toLocaleString(culture).match(/[^\\d]/)) == null ? void 0 : _$toLocaleString$m[0]) || '.';\n    var formatter = Intl.NumberFormat(culture).format;\n\n    this.decimalCharacter = function () {\n      return decimal;\n    };\n\n    this.format = function (num, format) {\n      if (format) {\n        return typeof format === 'function' ? format(num, culture) : num.toLocaleString(culture, format);\n      }\n\n      return formatter(num);\n    };\n  }\n\n  _createClass(IntlNumberLocalizer, [{\n    key: \"parse\",\n    value: function parse(value) {\n      return parseFloat(value.replace(this.decimalCharacter(), '.'));\n    }\n  }]);\n\n  return IntlNumberLocalizer;\n}();\n\nexports.NumberLocalizer = IntlNumberLocalizer;","map":{"version":3,"sources":["/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/react-widgets/cjs/IntlLocalizer.js"],"names":["exports","__esModule","NumberLocalizer","DateLocalizer","_dates","_interopRequireDefault","require","obj","default","supportStyles","Intl","DateTimeFormat","undefined","dateStyle","dateShort","day","month","year","timeShort","hour","minute","getFormatter","culture","options","format","IntlDateLocalizer","firstOfWeek","normalizeFormat","date","toLocaleString","formats","time","timeStyle","datetime","Object","assign","header","weekday","dayOfMonth","decade","endOf","century","keys","forEach","key","formatToParts","filter","p","type","value","Date","isNaN","IntlNumberLocalizer","_$toLocaleString$m","decimal","NumberFormat","match","formatter","decimalCharacter","num","parseFloat","replace"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.NumberLocalizer = exports.DateLocalizer = void 0;\n\nvar _dates = _interopRequireDefault(require(\"./dates\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// assumes both are supported or none\nlet supportStyles = false;\nnew Intl.DateTimeFormat(undefined, {\n  // @ts-ignore\n  get dateStyle() {\n    supportStyles = true;\n  }\n\n});\nconst dateShort = {\n  day: 'numeric',\n  month: 'numeric',\n  year: 'numeric'\n};\nconst timeShort = {\n  hour: 'numeric',\n  minute: 'numeric'\n};\n\nconst getFormatter = (culture, options) => Intl.DateTimeFormat(culture, options).format;\n/**\n * A `react-widgets` Localizer using native `Intl` APIs.\n *\n */\n\n\nclass IntlDateLocalizer {\n  constructor({\n    culture = undefined,\n    firstOfWeek = 0\n  } = {}) {\n    this.culture = culture;\n\n    this.firstOfWeek = () => firstOfWeek;\n\n    function normalizeFormat(date, format) {\n      return typeof format === 'function' ? format(date, culture) : date.toLocaleString(culture, format);\n    }\n\n    const formats = {\n      date: getFormatter(culture, // @ts-ignore\n      supportStyles ? {\n        dateStyle: 'short'\n      } : dateShort),\n      time: getFormatter(culture, // @ts-ignore\n      supportStyles ? {\n        timeStyle: 'short'\n      } : timeShort),\n      datetime: getFormatter(culture, // @ts-ignore\n      supportStyles ? {\n        dateStyle: 'short',\n        timeStyle: 'short'\n      } : Object.assign({}, dateShort, timeShort)),\n      header: getFormatter(culture, {\n        month: 'short',\n        year: 'numeric'\n      }),\n      weekday: getFormatter(culture, {\n        weekday: 'narrow'\n      }),\n      dayOfMonth: getFormatter(culture, {\n        day: '2-digit'\n      }),\n      month: getFormatter(culture, {\n        month: 'short'\n      }),\n      year: getFormatter(culture, {\n        year: 'numeric'\n      }),\n      decade: date => `${this.year(date)} - ${this.year(_dates.default.endOf(date, 'decade'))}`,\n      century: date => `${this.year(date)} - ${this.year(_dates.default.endOf(date, 'century'))}`\n    };\n    Object.keys(formats).forEach(key => {\n      this[key] = (date, format) => format ? normalizeFormat(date, format) : formats[key](date);\n    });\n  }\n\n  toFormattedParts(date, format = {\n    dateStyle: 'short',\n    timeStyle: 'short'\n  }) {\n    return Intl.DateTimeFormat(this.culture, format).formatToParts(date).filter(p => p.type !== 'timeZoneName');\n  }\n\n  parse(value) {\n    const date = new Date(value);\n    return isNaN(+date) ? null : date;\n  }\n\n}\n\nexports.DateLocalizer = IntlDateLocalizer;\n\n/**\n * A number localization strategy based on `Intl.NumberFormat`.\n */\nclass IntlNumberLocalizer {\n  constructor({\n    culture = undefined\n  } = {}) {\n    var _$toLocaleString$m;\n\n    this.culture = culture;\n    const decimal = 'formatToParts' in Intl.NumberFormat(culture) ? Intl.NumberFormat(culture).formatToParts(1.1)[1].value : ((_$toLocaleString$m = 1.1.toLocaleString(culture).match(/[^\\d]/)) == null ? void 0 : _$toLocaleString$m[0]) || '.';\n    const formatter = Intl.NumberFormat(culture).format;\n\n    this.decimalCharacter = () => decimal;\n\n    this.format = (num, format) => {\n      if (format) {\n        return typeof format === 'function' ? format(num, culture) : num.toLocaleString(culture, format);\n      }\n\n      return formatter(num);\n    };\n  }\n\n  parse(value) {\n    return parseFloat(value.replace(this.decimalCharacter(), '.'));\n  }\n\n}\n\nexports.NumberLocalizer = IntlNumberLocalizer;"]},"metadata":{},"sourceType":"script"}