{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _createForOfIteratorHelper = require(\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _asyncToGenerator = require(\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keyboardImplementation = keyboardImplementation;\nexports.releaseAllKeys = releaseAllKeys;\n\nvar _dom = require(\"@testing-library/dom\");\n\nvar _utils = require(\"../utils\");\n\nvar _getNextKeyDef = require(\"./getNextKeyDef\");\n\nvar plugins = _interopRequireWildcard(require(\"./plugins\"));\n\nvar _getEventProps = require(\"./getEventProps\");\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction keyboardImplementation(_x, _x2, _x3) {\n  return _keyboardImplementation.apply(this, arguments);\n}\n\nfunction _keyboardImplementation() {\n  _keyboardImplementation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(text, options, state) {\n    var _state$repeatKey, document, getCurrentElement, _ref, keyDef, consumedLength, releasePrevious, releaseSelf, repeat, replace, pressed, unpreventedDefault;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            document = options.document;\n\n            getCurrentElement = function getCurrentElement() {\n              return getActive(document);\n            };\n\n            _ref = (_state$repeatKey = state.repeatKey) != null ? _state$repeatKey : (0, _getNextKeyDef.getNextKeyDef)(text, options), keyDef = _ref.keyDef, consumedLength = _ref.consumedLength, releasePrevious = _ref.releasePrevious, releaseSelf = _ref.releaseSelf, repeat = _ref.repeat;\n            replace = applyPlugins(plugins.replaceBehavior, keyDef, getCurrentElement(), options, state);\n\n            if (!replace) {\n              pressed = state.pressed.find(function (p) {\n                return p.keyDef === keyDef;\n              }); // Release the key automatically if it was pressed before.\n              // Do not release the key on iterations on `state.repeatKey`.\n\n              if (pressed && !state.repeatKey) {\n                keyup(keyDef, getCurrentElement, options, state, pressed.unpreventedDefault);\n              }\n\n              if (!releasePrevious) {\n                unpreventedDefault = keydown(keyDef, getCurrentElement, options, state);\n\n                if (unpreventedDefault && hasKeyPress(keyDef, state)) {\n                  keypress(keyDef, getCurrentElement, options, state);\n                } // Release the key only on the last iteration on `state.repeatKey`.\n\n\n                if (releaseSelf && repeat <= 1) {\n                  keyup(keyDef, getCurrentElement, options, state, unpreventedDefault);\n                }\n              }\n            }\n\n            if (repeat > 1) {\n              state.repeatKey = {\n                // don't consume again on the next iteration\n                consumedLength: 0,\n                keyDef: keyDef,\n                releasePrevious: releasePrevious,\n                releaseSelf: releaseSelf,\n                repeat: repeat - 1\n              };\n            } else {\n              delete state.repeatKey;\n            }\n\n            if (!(text.length > consumedLength || repeat > 1)) {\n              _context.next = 11;\n              break;\n            }\n\n            if (!(options.delay > 0)) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 10;\n            return (0, _utils.wait)(options.delay);\n\n          case 10:\n            return _context.abrupt(\"return\", keyboardImplementation(text.slice(consumedLength), options, state));\n\n          case 11:\n            return _context.abrupt(\"return\", void undefined);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _keyboardImplementation.apply(this, arguments);\n}\n\nfunction getActive(document) {\n  var _getActiveElement;\n\n  return (_getActiveElement = (0, _utils.getActiveElement)(document)) != null ? _getActiveElement :\n  /* istanbul ignore next */\n  document.body;\n}\n\nfunction releaseAllKeys(options, state) {\n  var getCurrentElement = function getCurrentElement() {\n    return getActive(options.document);\n  };\n\n  var _iterator = _createForOfIteratorHelper(state.pressed),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var k = _step.value;\n      keyup(k.keyDef, getCurrentElement, options, state, k.unpreventedDefault);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\nfunction keydown(keyDef, getCurrentElement, options, state) {\n  var element = getCurrentElement(); // clear carried characters when focus is moved\n\n  if (element !== state.activeElement) {\n    state.carryValue = undefined;\n    state.carryChar = '';\n  }\n\n  state.activeElement = element;\n  applyPlugins(plugins.preKeydownBehavior, keyDef, element, options, state);\n\n  var unpreventedDefault = _dom.fireEvent.keyDown(element, (0, _getEventProps.getKeyEventProps)(keyDef, state));\n\n  state.pressed.push({\n    keyDef: keyDef,\n    unpreventedDefault: unpreventedDefault\n  });\n\n  if (unpreventedDefault) {\n    // all default behavior like keypress/submit etc is applied to the currentElement\n    applyPlugins(plugins.keydownBehavior, keyDef, getCurrentElement(), options, state);\n  }\n\n  return unpreventedDefault;\n}\n\nfunction keypress(keyDef, getCurrentElement, options, state) {\n  var element = getCurrentElement();\n\n  var unpreventedDefault = _dom.fireEvent.keyPress(element, (0, _getEventProps.getKeyEventProps)(keyDef, state));\n\n  if (unpreventedDefault) {\n    applyPlugins(plugins.keypressBehavior, keyDef, getCurrentElement(), options, state);\n  }\n}\n\nfunction keyup(keyDef, getCurrentElement, options, state, unprevented) {\n  var element = getCurrentElement();\n  applyPlugins(plugins.preKeyupBehavior, keyDef, element, options, state);\n\n  var unpreventedDefault = _dom.fireEvent.keyUp(element, (0, _getEventProps.getKeyEventProps)(keyDef, state));\n\n  if (unprevented && unpreventedDefault) {\n    applyPlugins(plugins.keyupBehavior, keyDef, getCurrentElement(), options, state);\n  }\n\n  state.pressed = state.pressed.filter(function (k) {\n    return k.keyDef !== keyDef;\n  });\n  applyPlugins(plugins.postKeyupBehavior, keyDef, element, options, state);\n}\n\nfunction applyPlugins(pluginCollection, keyDef, element, options, state) {\n  var plugin = pluginCollection.find(function (p) {\n    return p.matches(keyDef, element, options, state);\n  });\n\n  if (plugin) {\n    plugin.handle(keyDef, element, options, state);\n  }\n\n  return !!plugin;\n}\n\nfunction hasKeyPress(keyDef, state) {\n  var _keyDef$key;\n\n  return (((_keyDef$key = keyDef.key) == null ? void 0 : _keyDef$key.length) === 1 || keyDef.key === 'Enter') && !state.modifiers.ctrl && !state.modifiers.alt;\n}","map":{"version":3,"sources":["/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@testing-library/user-event/dist/keyboard/keyboardImplementation.js"],"names":["Object","defineProperty","exports","value","keyboardImplementation","releaseAllKeys","_dom","require","_utils","_getNextKeyDef","plugins","_interopRequireWildcard","_getEventProps","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","text","options","state","document","getCurrentElement","getActive","_state$repeatKey","repeatKey","getNextKeyDef","keyDef","consumedLength","releasePrevious","releaseSelf","repeat","replace","applyPlugins","replaceBehavior","pressed","find","p","keyup","unpreventedDefault","keydown","hasKeyPress","keypress","length","delay","wait","slice","undefined","_getActiveElement","getActiveElement","body","k","element","activeElement","carryValue","carryChar","preKeydownBehavior","fireEvent","keyDown","getKeyEventProps","push","keydownBehavior","keyPress","keypressBehavior","unprevented","preKeyupBehavior","keyUp","keyupBehavior","filter","postKeyupBehavior","pluginCollection","plugin","matches","handle","_keyDef$key","modifiers","ctrl","alt"],"mappings":"AAAA;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,sBAAR,GAAiCA,sBAAjC;AACAF,OAAO,CAACG,cAAR,GAAyBA,cAAzB;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,sBAAD,CAAlB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAApB;;AAEA,IAAIE,cAAc,GAAGF,OAAO,CAAC,iBAAD,CAA5B;;AAEA,IAAIG,OAAO,GAAGC,uBAAuB,CAACJ,OAAO,CAAC,WAAD,CAAR,CAArC;;AAEA,IAAIK,cAAc,GAAGL,OAAO,CAAC,iBAAD,CAA5B;;AAEA,SAASM,wBAAT,CAAkCC,WAAlC,EAA+C;AAAE,MAAI,OAAOC,OAAP,KAAmB,UAAvB,EAAmC,OAAO,IAAP;AAAa,MAAIC,iBAAiB,GAAG,IAAID,OAAJ,EAAxB;AAAuC,MAAIE,gBAAgB,GAAG,IAAIF,OAAJ,EAAvB;AAAsC,SAAO,CAACF,wBAAwB,GAAG,kCAAUC,WAAV,EAAuB;AAAE,WAAOA,WAAW,GAAGG,gBAAH,GAAsBD,iBAAxC;AAA4D,GAAjH,EAAmHF,WAAnH,CAAP;AAAyI;;AAEvT,SAASH,uBAAT,CAAiCO,GAAjC,EAAsCJ,WAAtC,EAAmD;AAAE,MAAI,CAACA,WAAD,IAAgBI,GAAhB,IAAuBA,GAAG,CAACC,UAA/B,EAA2C;AAAE,WAAOD,GAAP;AAAa;;AAAC,MAAIA,GAAG,KAAK,IAAR,IAAgB,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,UAA9D,EAA0E;AAAE,WAAO;AAAEE,MAAAA,OAAO,EAAEF;AAAX,KAAP;AAA0B;;AAAC,MAAIG,KAAK,GAAGR,wBAAwB,CAACC,WAAD,CAApC;;AAAmD,MAAIO,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAUJ,GAAV,CAAb,EAA6B;AAAE,WAAOG,KAAK,CAACE,GAAN,CAAUL,GAAV,CAAP;AAAwB;;AAAC,MAAIM,MAAM,GAAG,EAAb;AAAiB,MAAIC,qBAAqB,GAAGzB,MAAM,CAACC,cAAP,IAAyBD,MAAM,CAAC0B,wBAA5D;;AAAsF,OAAK,IAAIC,GAAT,IAAgBT,GAAhB,EAAqB;AAAE,QAAIS,GAAG,KAAK,SAAR,IAAqB3B,MAAM,CAAC4B,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCZ,GAArC,EAA0CS,GAA1C,CAAzB,EAAyE;AAAE,UAAII,IAAI,GAAGN,qBAAqB,GAAGzB,MAAM,CAAC0B,wBAAP,CAAgCR,GAAhC,EAAqCS,GAArC,CAAH,GAA+C,IAA/E;;AAAqF,UAAII,IAAI,KAAKA,IAAI,CAACR,GAAL,IAAYQ,IAAI,CAACC,GAAtB,CAAR,EAAoC;AAAEhC,QAAAA,MAAM,CAACC,cAAP,CAAsBuB,MAAtB,EAA8BG,GAA9B,EAAmCI,IAAnC;AAA2C,OAAjF,MAAuF;AAAEP,QAAAA,MAAM,CAACG,GAAD,CAAN,GAAcT,GAAG,CAACS,GAAD,CAAjB;AAAyB;AAAE;AAAE;;AAACH,EAAAA,MAAM,CAACJ,OAAP,GAAiBF,GAAjB;;AAAsB,MAAIG,KAAJ,EAAW;AAAEA,IAAAA,KAAK,CAACW,GAAN,CAAUd,GAAV,EAAeM,MAAf;AAAyB;;AAAC,SAAOA,MAAP;AAAgB;;SAErxBpB,sB;;;;;qFAAf,iBAAsC6B,IAAtC,EAA4CC,OAA5C,EAAqDC,KAArD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAIIC,YAAAA,QAJJ,GAKMF,OALN,CAIIE,QAJJ;;AAOQC,YAAAA,iBAPR,GAO4B,SAApBA,iBAAoB;AAAA,qBAAMC,SAAS,CAACF,QAAD,CAAf;AAAA,aAP5B;;AAAA,mBAeM,CAACG,gBAAgB,GAAGJ,KAAK,CAACK,SAA1B,KAAwC,IAAxC,GAA+CD,gBAA/C,GAAkE,CAAC,GAAG9B,cAAc,CAACgC,aAAnB,EAAkCR,IAAlC,EAAwCC,OAAxC,CAfxE,EAUIQ,MAVJ,QAUIA,MAVJ,EAWIC,cAXJ,QAWIA,cAXJ,EAYIC,eAZJ,QAYIA,eAZJ,EAaIC,WAbJ,QAaIA,WAbJ,EAcIC,MAdJ,QAcIA,MAdJ;AAgBQC,YAAAA,OAhBR,GAgBkBC,YAAY,CAACtC,OAAO,CAACuC,eAAT,EAA0BP,MAA1B,EAAkCL,iBAAiB,EAAnD,EAAuDH,OAAvD,EAAgEC,KAAhE,CAhB9B;;AAkBE,gBAAI,CAACY,OAAL,EAAc;AACNG,cAAAA,OADM,GACIf,KAAK,CAACe,OAAN,CAAcC,IAAd,CAAmB,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACV,MAAF,KAAaA,MAAjB;AAAA,eAApB,CADJ,EACkD;AAC9D;;AAEA,kBAAIQ,OAAO,IAAI,CAACf,KAAK,CAACK,SAAtB,EAAiC;AAC/Ba,gBAAAA,KAAK,CAACX,MAAD,EAASL,iBAAT,EAA4BH,OAA5B,EAAqCC,KAArC,EAA4Ce,OAAO,CAACI,kBAApD,CAAL;AACD;;AAED,kBAAI,CAACV,eAAL,EAAsB;AACdU,gBAAAA,kBADc,GACOC,OAAO,CAACb,MAAD,EAASL,iBAAT,EAA4BH,OAA5B,EAAqCC,KAArC,CADd;;AAGpB,oBAAImB,kBAAkB,IAAIE,WAAW,CAACd,MAAD,EAASP,KAAT,CAArC,EAAsD;AACpDsB,kBAAAA,QAAQ,CAACf,MAAD,EAASL,iBAAT,EAA4BH,OAA5B,EAAqCC,KAArC,CAAR;AACD,iBALmB,CAKlB;;;AAGF,oBAAIU,WAAW,IAAIC,MAAM,IAAI,CAA7B,EAAgC;AAC9BO,kBAAAA,KAAK,CAACX,MAAD,EAASL,iBAAT,EAA4BH,OAA5B,EAAqCC,KAArC,EAA4CmB,kBAA5C,CAAL;AACD;AACF;AACF;;AAED,gBAAIR,MAAM,GAAG,CAAb,EAAgB;AACdX,cAAAA,KAAK,CAACK,SAAN,GAAkB;AAChB;AACAG,gBAAAA,cAAc,EAAE,CAFA;AAGhBD,gBAAAA,MAAM,EAANA,MAHgB;AAIhBE,gBAAAA,eAAe,EAAfA,eAJgB;AAKhBC,gBAAAA,WAAW,EAAXA,WALgB;AAMhBC,gBAAAA,MAAM,EAAEA,MAAM,GAAG;AAND,eAAlB;AAQD,aATD,MASO;AACL,qBAAOX,KAAK,CAACK,SAAb;AACD;;AAnDH,kBAqDMP,IAAI,CAACyB,MAAL,GAAcf,cAAd,IAAgCG,MAAM,GAAG,CArD/C;AAAA;AAAA;AAAA;;AAAA,kBAsDQZ,OAAO,CAACyB,KAAR,GAAgB,CAtDxB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAuDY,CAAC,GAAGnD,MAAM,CAACoD,IAAX,EAAiB1B,OAAO,CAACyB,KAAzB,CAvDZ;;AAAA;AAAA,6CA0DWvD,sBAAsB,CAAC6B,IAAI,CAAC4B,KAAL,CAAWlB,cAAX,CAAD,EAA6BT,OAA7B,EAAsCC,KAAtC,CA1DjC;;AAAA;AAAA,6CA6DS,KAAK2B,SA7Dd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAgEA,SAASxB,SAAT,CAAmBF,QAAnB,EAA6B;AAC3B,MAAI2B,iBAAJ;;AAEA,SAAO,CAACA,iBAAiB,GAAG,CAAC,GAAGvD,MAAM,CAACwD,gBAAX,EAA6B5B,QAA7B,CAArB,KAAgE,IAAhE,GAAuE2B,iBAAvE;AACP;AACA3B,EAAAA,QAAQ,CAAC6B,IAFT;AAGD;;AAED,SAAS5D,cAAT,CAAwB6B,OAAxB,EAAiCC,KAAjC,EAAwC;AACtC,MAAME,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,WAAMC,SAAS,CAACJ,OAAO,CAACE,QAAT,CAAf;AAAA,GAA1B;;AADsC,6CAGtBD,KAAK,CAACe,OAHgB;AAAA;;AAAA;AAGtC,wDAA+B;AAAA,UAApBgB,CAAoB;AAC7Bb,MAAAA,KAAK,CAACa,CAAC,CAACxB,MAAH,EAAWL,iBAAX,EAA8BH,OAA9B,EAAuCC,KAAvC,EAA8C+B,CAAC,CAACZ,kBAAhD,CAAL;AACD;AALqC;AAAA;AAAA;AAAA;AAAA;AAMvC;;AAED,SAASC,OAAT,CAAiBb,MAAjB,EAAyBL,iBAAzB,EAA4CH,OAA5C,EAAqDC,KAArD,EAA4D;AAC1D,MAAMgC,OAAO,GAAG9B,iBAAiB,EAAjC,CAD0D,CACrB;;AAErC,MAAI8B,OAAO,KAAKhC,KAAK,CAACiC,aAAtB,EAAqC;AACnCjC,IAAAA,KAAK,CAACkC,UAAN,GAAmBP,SAAnB;AACA3B,IAAAA,KAAK,CAACmC,SAAN,GAAkB,EAAlB;AACD;;AAEDnC,EAAAA,KAAK,CAACiC,aAAN,GAAsBD,OAAtB;AACAnB,EAAAA,YAAY,CAACtC,OAAO,CAAC6D,kBAAT,EAA6B7B,MAA7B,EAAqCyB,OAArC,EAA8CjC,OAA9C,EAAuDC,KAAvD,CAAZ;;AAEA,MAAMmB,kBAAkB,GAAGhD,IAAI,CAACkE,SAAL,CAAeC,OAAf,CAAuBN,OAAvB,EAAgC,CAAC,GAAGvD,cAAc,CAAC8D,gBAAnB,EAAqChC,MAArC,EAA6CP,KAA7C,CAAhC,CAA3B;;AAEAA,EAAAA,KAAK,CAACe,OAAN,CAAcyB,IAAd,CAAmB;AACjBjC,IAAAA,MAAM,EAANA,MADiB;AAEjBY,IAAAA,kBAAkB,EAAlBA;AAFiB,GAAnB;;AAKA,MAAIA,kBAAJ,EAAwB;AACtB;AACAN,IAAAA,YAAY,CAACtC,OAAO,CAACkE,eAAT,EAA0BlC,MAA1B,EAAkCL,iBAAiB,EAAnD,EAAuDH,OAAvD,EAAgEC,KAAhE,CAAZ;AACD;;AAED,SAAOmB,kBAAP;AACD;;AAED,SAASG,QAAT,CAAkBf,MAAlB,EAA0BL,iBAA1B,EAA6CH,OAA7C,EAAsDC,KAAtD,EAA6D;AAC3D,MAAMgC,OAAO,GAAG9B,iBAAiB,EAAjC;;AAEA,MAAMiB,kBAAkB,GAAGhD,IAAI,CAACkE,SAAL,CAAeK,QAAf,CAAwBV,OAAxB,EAAiC,CAAC,GAAGvD,cAAc,CAAC8D,gBAAnB,EAAqChC,MAArC,EAA6CP,KAA7C,CAAjC,CAA3B;;AAEA,MAAImB,kBAAJ,EAAwB;AACtBN,IAAAA,YAAY,CAACtC,OAAO,CAACoE,gBAAT,EAA2BpC,MAA3B,EAAmCL,iBAAiB,EAApD,EAAwDH,OAAxD,EAAiEC,KAAjE,CAAZ;AACD;AACF;;AAED,SAASkB,KAAT,CAAeX,MAAf,EAAuBL,iBAAvB,EAA0CH,OAA1C,EAAmDC,KAAnD,EAA0D4C,WAA1D,EAAuE;AACrE,MAAMZ,OAAO,GAAG9B,iBAAiB,EAAjC;AACAW,EAAAA,YAAY,CAACtC,OAAO,CAACsE,gBAAT,EAA2BtC,MAA3B,EAAmCyB,OAAnC,EAA4CjC,OAA5C,EAAqDC,KAArD,CAAZ;;AAEA,MAAMmB,kBAAkB,GAAGhD,IAAI,CAACkE,SAAL,CAAeS,KAAf,CAAqBd,OAArB,EAA8B,CAAC,GAAGvD,cAAc,CAAC8D,gBAAnB,EAAqChC,MAArC,EAA6CP,KAA7C,CAA9B,CAA3B;;AAEA,MAAI4C,WAAW,IAAIzB,kBAAnB,EAAuC;AACrCN,IAAAA,YAAY,CAACtC,OAAO,CAACwE,aAAT,EAAwBxC,MAAxB,EAAgCL,iBAAiB,EAAjD,EAAqDH,OAArD,EAA8DC,KAA9D,CAAZ;AACD;;AAEDA,EAAAA,KAAK,CAACe,OAAN,GAAgBf,KAAK,CAACe,OAAN,CAAciC,MAAd,CAAqB,UAAAjB,CAAC;AAAA,WAAIA,CAAC,CAACxB,MAAF,KAAaA,MAAjB;AAAA,GAAtB,CAAhB;AACAM,EAAAA,YAAY,CAACtC,OAAO,CAAC0E,iBAAT,EAA4B1C,MAA5B,EAAoCyB,OAApC,EAA6CjC,OAA7C,EAAsDC,KAAtD,CAAZ;AACD;;AAED,SAASa,YAAT,CAAsBqC,gBAAtB,EAAwC3C,MAAxC,EAAgDyB,OAAhD,EAAyDjC,OAAzD,EAAkEC,KAAlE,EAAyE;AACvE,MAAMmD,MAAM,GAAGD,gBAAgB,CAAClC,IAAjB,CAAsB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACmC,OAAF,CAAU7C,MAAV,EAAkByB,OAAlB,EAA2BjC,OAA3B,EAAoCC,KAApC,CAAJ;AAAA,GAAvB,CAAf;;AAEA,MAAImD,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACE,MAAP,CAAc9C,MAAd,EAAsByB,OAAtB,EAA+BjC,OAA/B,EAAwCC,KAAxC;AACD;;AAED,SAAO,CAAC,CAACmD,MAAT;AACD;;AAED,SAAS9B,WAAT,CAAqBd,MAArB,EAA6BP,KAA7B,EAAoC;AAClC,MAAIsD,WAAJ;;AAEA,SAAO,CAAC,CAAC,CAACA,WAAW,GAAG/C,MAAM,CAACf,GAAtB,KAA8B,IAA9B,GAAqC,KAAK,CAA1C,GAA8C8D,WAAW,CAAC/B,MAA3D,MAAuE,CAAvE,IAA4EhB,MAAM,CAACf,GAAP,KAAe,OAA5F,KAAwG,CAACQ,KAAK,CAACuD,SAAN,CAAgBC,IAAzH,IAAiI,CAACxD,KAAK,CAACuD,SAAN,CAAgBE,GAAzJ;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keyboardImplementation = keyboardImplementation;\nexports.releaseAllKeys = releaseAllKeys;\n\nvar _dom = require(\"@testing-library/dom\");\n\nvar _utils = require(\"../utils\");\n\nvar _getNextKeyDef = require(\"./getNextKeyDef\");\n\nvar plugins = _interopRequireWildcard(require(\"./plugins\"));\n\nvar _getEventProps = require(\"./getEventProps\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nasync function keyboardImplementation(text, options, state) {\n  var _state$repeatKey;\n\n  const {\n    document\n  } = options;\n\n  const getCurrentElement = () => getActive(document);\n\n  const {\n    keyDef,\n    consumedLength,\n    releasePrevious,\n    releaseSelf,\n    repeat\n  } = (_state$repeatKey = state.repeatKey) != null ? _state$repeatKey : (0, _getNextKeyDef.getNextKeyDef)(text, options);\n  const replace = applyPlugins(plugins.replaceBehavior, keyDef, getCurrentElement(), options, state);\n\n  if (!replace) {\n    const pressed = state.pressed.find(p => p.keyDef === keyDef); // Release the key automatically if it was pressed before.\n    // Do not release the key on iterations on `state.repeatKey`.\n\n    if (pressed && !state.repeatKey) {\n      keyup(keyDef, getCurrentElement, options, state, pressed.unpreventedDefault);\n    }\n\n    if (!releasePrevious) {\n      const unpreventedDefault = keydown(keyDef, getCurrentElement, options, state);\n\n      if (unpreventedDefault && hasKeyPress(keyDef, state)) {\n        keypress(keyDef, getCurrentElement, options, state);\n      } // Release the key only on the last iteration on `state.repeatKey`.\n\n\n      if (releaseSelf && repeat <= 1) {\n        keyup(keyDef, getCurrentElement, options, state, unpreventedDefault);\n      }\n    }\n  }\n\n  if (repeat > 1) {\n    state.repeatKey = {\n      // don't consume again on the next iteration\n      consumedLength: 0,\n      keyDef,\n      releasePrevious,\n      releaseSelf,\n      repeat: repeat - 1\n    };\n  } else {\n    delete state.repeatKey;\n  }\n\n  if (text.length > consumedLength || repeat > 1) {\n    if (options.delay > 0) {\n      await (0, _utils.wait)(options.delay);\n    }\n\n    return keyboardImplementation(text.slice(consumedLength), options, state);\n  }\n\n  return void undefined;\n}\n\nfunction getActive(document) {\n  var _getActiveElement;\n\n  return (_getActiveElement = (0, _utils.getActiveElement)(document)) != null ? _getActiveElement :\n  /* istanbul ignore next */\n  document.body;\n}\n\nfunction releaseAllKeys(options, state) {\n  const getCurrentElement = () => getActive(options.document);\n\n  for (const k of state.pressed) {\n    keyup(k.keyDef, getCurrentElement, options, state, k.unpreventedDefault);\n  }\n}\n\nfunction keydown(keyDef, getCurrentElement, options, state) {\n  const element = getCurrentElement(); // clear carried characters when focus is moved\n\n  if (element !== state.activeElement) {\n    state.carryValue = undefined;\n    state.carryChar = '';\n  }\n\n  state.activeElement = element;\n  applyPlugins(plugins.preKeydownBehavior, keyDef, element, options, state);\n\n  const unpreventedDefault = _dom.fireEvent.keyDown(element, (0, _getEventProps.getKeyEventProps)(keyDef, state));\n\n  state.pressed.push({\n    keyDef,\n    unpreventedDefault\n  });\n\n  if (unpreventedDefault) {\n    // all default behavior like keypress/submit etc is applied to the currentElement\n    applyPlugins(plugins.keydownBehavior, keyDef, getCurrentElement(), options, state);\n  }\n\n  return unpreventedDefault;\n}\n\nfunction keypress(keyDef, getCurrentElement, options, state) {\n  const element = getCurrentElement();\n\n  const unpreventedDefault = _dom.fireEvent.keyPress(element, (0, _getEventProps.getKeyEventProps)(keyDef, state));\n\n  if (unpreventedDefault) {\n    applyPlugins(plugins.keypressBehavior, keyDef, getCurrentElement(), options, state);\n  }\n}\n\nfunction keyup(keyDef, getCurrentElement, options, state, unprevented) {\n  const element = getCurrentElement();\n  applyPlugins(plugins.preKeyupBehavior, keyDef, element, options, state);\n\n  const unpreventedDefault = _dom.fireEvent.keyUp(element, (0, _getEventProps.getKeyEventProps)(keyDef, state));\n\n  if (unprevented && unpreventedDefault) {\n    applyPlugins(plugins.keyupBehavior, keyDef, getCurrentElement(), options, state);\n  }\n\n  state.pressed = state.pressed.filter(k => k.keyDef !== keyDef);\n  applyPlugins(plugins.postKeyupBehavior, keyDef, element, options, state);\n}\n\nfunction applyPlugins(pluginCollection, keyDef, element, options, state) {\n  const plugin = pluginCollection.find(p => p.matches(keyDef, element, options, state));\n\n  if (plugin) {\n    plugin.handle(keyDef, element, options, state);\n  }\n\n  return !!plugin;\n}\n\nfunction hasKeyPress(keyDef, state) {\n  var _keyDef$key;\n\n  return (((_keyDef$key = keyDef.key) == null ? void 0 : _keyDef$key.length) === 1 || keyDef.key === 'Enter') && !state.modifiers.ctrl && !state.modifiers.alt;\n}"]},"metadata":{},"sourceType":"script"}