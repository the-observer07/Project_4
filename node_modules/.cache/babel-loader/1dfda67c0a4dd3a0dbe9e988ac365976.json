{"ast":null,"code":"var _jsxFileName = \"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/DataTicker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Component } from \"react\";\nimport Ticker, { FinancialTicker, NewsTicker } from \"nice-react-ticker\"; // import icon from \"./news-icon.png\";\n// import Ticker from \"react-ticker\";\n\nimport Bottleneck from \"bottleneck\"; // import bootstrap from \"bootstrap\";\n\nimport { type } from \"@testing-library/user-event/dist/type\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DataTicker = () => {\n  _s();\n\n  const [cryptoData, setCryptoData] = useState([]);\n  const [newsData, setNewsData] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [newsTitle, setNewsTitle] = useState([]);\n  const cryptoApiTicker = \"https://api.coingecko.com/api/v3/exchanges/binance/tickers\";\n  const financialNewsTicker = \"https://api.marketaux.com/v1/news/all?symbols=TSLA,AMZN,MSFT,APPL&filter_entities=true&language=en&api_token=HtQPxNVoj5bYyudPypD08TDxD7MdNbMkUB69DXJe\"; // const limiter = new Bottleneck({\n  //   maxConcurrent: 1,\n  //   minTime: 5000, // pick a value that makes sense for your use case\n  // });\n  // const result = await limiter.schedule(() => fetchCryptoAPI());\n  //   const result = await limiter.schedule(() => makeApiCall());\n\n  useEffect(() => {\n    fetchCryptoAPI();\n    fetchFinancialNewsAPI(); //   throttledApiCall();\n    //   throttledNewsApiCall();\n    //   // filterData();\n  }, []);\n\n  const fetchCryptoAPI = async () => {\n    const res = await fetch(cryptoApiTicker); // console.log(res);\n\n    const rawData = await res.json(); // console.log(rawData);\n\n    setCryptoData();\n    const filteredData = rawData.tickers.map((element, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"symbol: \", element.base, \", price: \", element.last, \", priceBTC:\", \" \", element.converted_last.btc, \",\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    });\n    return filteredData;\n    setType(filteredData);\n    console.log(filteredData);\n  };\n\n  const fetchFinancialNewsAPI = async () => {\n    const res = await fetch(financialNewsTicker);\n    const rawData = await res.json();\n    console.log(rawData.data);\n    const extractTitle = rawData.data.map(duck => {\n      return {\n        title: duck.title,\n        url: duck.url,\n        imgurl: duck.image_url\n      };\n    });\n    setNewsTitle(extractTitle);\n  };\n\n  console.log(newsTitle); //   const allThePromises = data.map((item) => {\n  //     return throttledApiCall();\n  //   });\n  //   const rawData = await limiter.schedule();\n  // const filteredData = rawData.map((element, index) => {\n  //   return {\n  //     symbol: duck.coins.symbol,\n  //     priceBtc: duck.coins.price_btc,\n  //   };\n  // });\n  // setType(filteredData);\n  // const filteredData = rawDataArray.map((duck) => {\n  //   return {\n  //     price: duck.data.rates,\n  //     unit: duck.data.unit,\n  //   };\n  // });\n  // setType(filteredData);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 10\n  }, this);\n};\n\n_s(DataTicker, \"2MmMkbNTiGXFa9qaQiBq7/p2haE=\");\n\n_c = DataTicker;\nexport default DataTicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTicker\");","map":{"version":3,"sources":["/Users/inspireadmin/Documents/GitHub/Project_2/src/component/DataTicker.js"],"names":["React","useState","useEffect","Component","Ticker","FinancialTicker","NewsTicker","Bottleneck","type","DataTicker","cryptoData","setCryptoData","newsData","setNewsData","setType","newsTitle","setNewsTitle","cryptoApiTicker","financialNewsTicker","fetchCryptoAPI","fetchFinancialNewsAPI","res","fetch","rawData","json","filteredData","tickers","map","element","index","base","last","converted_last","btc","console","log","data","extractTitle","duck","title","url","imgurl","image_url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,MAAP,IAAiBC,eAAjB,EAAkCC,UAAlC,QAAoD,mBAApD,C,CACA;AACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;AAEA,SAASC,IAAT,QAAqB,uCAArB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,IAAD,EAAOM,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMgB,eAAe,GACnB,4DADF;AAEA,QAAMC,mBAAmB,GACvB,uJADF,CARuB,CAWvB;AACA;AACA;AACA;AAEA;AAEA;;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,cAAc;AACdC,IAAAA,qBAAqB,GAFP,CAId;AACA;AACA;AACD,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMD,cAAc,GAAG,YAAY;AACjC,UAAME,GAAG,GAAG,MAAMC,KAAK,CAACL,eAAD,CAAvB,CADiC,CAEjC;;AACA,UAAMM,OAAO,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAtB,CAHiC,CAIjC;;AACAb,IAAAA,aAAa;AACb,UAAMc,YAAY,GAAGF,OAAO,CAACG,OAAR,CAAgBC,GAAhB,CAAoB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC3D,0BACE;AAAA,+BACWD,OAAO,CAACE,IADnB,eACkCF,OAAO,CAACG,IAD1C,iBAC2D,GAD3D,EAEGH,OAAO,CAACI,cAAR,CAAuBC,GAF1B;AAAA,SAAUJ,KAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPoB,CAArB;AAQA,WAAOJ,YAAP;AACAX,IAAAA,OAAO,CAACW,YAAD,CAAP;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AACD,GAjBD;;AAmBA,QAAML,qBAAqB,GAAG,YAAY;AACxC,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACJ,mBAAD,CAAvB;AACA,UAAMK,OAAO,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAtB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAO,CAACa,IAApB;AACA,UAAMC,YAAY,GAAGd,OAAO,CAACa,IAAR,CAAaT,GAAb,CAAkBW,IAAD,IAAU;AAC9C,aAAO;AACLC,QAAAA,KAAK,EAAED,IAAI,CAACC,KADP;AAELC,QAAAA,GAAG,EAAEF,IAAI,CAACE,GAFL;AAGLC,QAAAA,MAAM,EAAEH,IAAI,CAACI;AAHR,OAAP;AAKD,KANoB,CAArB;AAOA1B,IAAAA,YAAY,CAACqB,YAAD,CAAZ;AACD,GAZD;;AAaAH,EAAAA,OAAO,CAACC,GAAR,CAAYpB,SAAZ,EA7DuB,CA+DvB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CArFD;;GAAMN,U;;KAAAA,U;AAuFN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport Ticker, { FinancialTicker, NewsTicker } from \"nice-react-ticker\";\n// import icon from \"./news-icon.png\";\n// import Ticker from \"react-ticker\";\nimport Bottleneck from \"bottleneck\";\n// import bootstrap from \"bootstrap\";\n\nimport { type } from \"@testing-library/user-event/dist/type\";\n\nconst DataTicker = () => {\n  const [cryptoData, setCryptoData] = useState([]);\n  const [newsData, setNewsData] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [newsTitle, setNewsTitle] = useState([]);\n\n  const cryptoApiTicker =\n    \"https://api.coingecko.com/api/v3/exchanges/binance/tickers\";\n  const financialNewsTicker =\n    \"https://api.marketaux.com/v1/news/all?symbols=TSLA,AMZN,MSFT,APPL&filter_entities=true&language=en&api_token=HtQPxNVoj5bYyudPypD08TDxD7MdNbMkUB69DXJe\";\n\n  // const limiter = new Bottleneck({\n  //   maxConcurrent: 1,\n  //   minTime: 5000, // pick a value that makes sense for your use case\n  // });\n\n  // const result = await limiter.schedule(() => fetchCryptoAPI());\n\n  //   const result = await limiter.schedule(() => makeApiCall());\n\n  useEffect(() => {\n    fetchCryptoAPI();\n    fetchFinancialNewsAPI();\n\n    //   throttledApiCall();\n    //   throttledNewsApiCall();\n    //   // filterData();\n  }, []);\n\n  const fetchCryptoAPI = async () => {\n    const res = await fetch(cryptoApiTicker);\n    // console.log(res);\n    const rawData = await res.json();\n    // console.log(rawData);\n    setCryptoData();\n    const filteredData = rawData.tickers.map((element, index) => {\n      return (\n        <div key={index}>\n          symbol: {element.base}, price: {element.last}, priceBTC:{\" \"}\n          {element.converted_last.btc},\n        </div>\n      );\n    });\n    return filteredData;\n    setType(filteredData);\n    console.log(filteredData);\n  };\n\n  const fetchFinancialNewsAPI = async () => {\n    const res = await fetch(financialNewsTicker);\n    const rawData = await res.json();\n    console.log(rawData.data);\n    const extractTitle = rawData.data.map((duck) => {\n      return {\n        title: duck.title,\n        url: duck.url,\n        imgurl: duck.image_url,\n      };\n    });\n    setNewsTitle(extractTitle);\n  };\n  console.log(newsTitle);\n\n  //   const allThePromises = data.map((item) => {\n  //     return throttledApiCall();\n  //   });\n  //   const rawData = await limiter.schedule();\n\n  // const filteredData = rawData.map((element, index) => {\n  //   return {\n  //     symbol: duck.coins.symbol,\n  //     priceBtc: duck.coins.price_btc,\n  //   };\n  // });\n  // setType(filteredData);\n\n  // const filteredData = rawDataArray.map((duck) => {\n  //   return {\n  //     price: duck.data.rates,\n  //     unit: duck.data.unit,\n  //   };\n  // });\n  // setType(filteredData);\n\n  return <div></div>;\n};\n\nexport default DataTicker;\n"]},"metadata":{},"sourceType":"module"}