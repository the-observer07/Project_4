{"ast":null,"code":"var _jsxFileName = \"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Crypto.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { DropdownList } from \"react-widgets/cjs\";\nimport tokenList from \"./TokenListApiData\";\nimport AggregateInput from \"./AggregateInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Crypto = props => {\n  _s();\n\n  console.log(props.aggregatedSearch); // console.log(props.token);\n  // const [query, setQuery] = useState(\"\");\n  // const [type, setType] = useState(\"\");\n  // const [query, setQuery] = useState(\"\");\n  // const [otherQuery, setOtherQuery] = useState(\"\");\n  // const [name, setName] = useState(\"\");\n  // const tokenName = tokenList[i].name;\n\n  const [filterData, setFilterData] = useState(\"\");\n  const [tokenPrice, setTokenPrice] = useState([]);\n  const [extractedData, setExtractedData] = useState(\"\");\n  const cryptoAPIQuery = `https://api.coingecko.com/api/v3/simple/price?ids=${filterData}&vs_currencies=USD`;\n  const namesArray = []; // const idArray = [];\n  // const symbolArray = [];\n  // console.log(namesArray);\n\n  const displayName = tokenList.map(chicken => {\n    return namesArray.push(chicken.name);\n  });\n\n  const handleSearchFilter = event => {\n    // setQuery(event);\n    const searchWord = event; // console.log(searchWord);\n\n    const newFilter = Object.keys(tokenList).reduce((result, key) => {\n      if (tokenList[key].name.includes(searchWord)) {\n        result = tokenList[key].id; // console.log(tokenList[key].id);\n      }\n\n      return result;\n    }, \"\");\n    setFilterData(newFilter);\n  }; // setName = displayName;\n  // console.log(name);\n  // useEffect(() => {\n  // displayName();\n  // }, []);\n  // const cryptoList = [{props.token}];\n\n\n  const makeApiCall = async () => {\n    const res = await fetch(cryptoAPIQuery);\n    const rawData = await res.json(); // console.log(rawData);\n    //   const rawDataArray = [rawData];\n    //   // console.log(rawDataArray);\n    // const sortToken = tokenList.map((chicken) => {\n    //   return {\n    //     tokenPrice: chicken.usd,\n    //   };\n    // });\n\n    setTokenPrice(rawData);\n    console.log(rawData);\n    const tokenPriceArray = [rawData];\n    const obj1 = tokenPriceArray[0];\n    console.log(obj1);\n    const obj2 = obj1[Object.keys(obj1)[0]];\n    console.log(obj2);\n    const value = obj2[Object.keys(obj2)[0]];\n    console.log(value);\n    setExtractedData(value);\n  }; // console.log(tokenPrice);\n  // setExtractedData = value;\n  //   const filteredData = rawDataArray.map((duck) => {\n  //     return {\n  //       price: duck.data.rates,\n  //       unit: duck.data.unit,\n  //     };\n  //   });\n  //   setType(filteredData);\n  // console.log(tokenPrice);\n  // const tokenPriceArray = [tokenPrice];\n  // const obj1 = tokenPriceArray[0];\n  // const obj2 = obj1[Object.keys(obj1)[0]];\n  // console.log(obj2);\n  // const value = obj2[Object.keys(obj2)[0]];\n  // console.log(tokenPriceArray);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select a token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropdownList, {\n      data: namesArray,\n      onChange: handleSearchFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: makeApiCall,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Token price : $\", extractedData]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Crypto, \"AG+oXk++P3awreHTiCdHHsKtJ6Q=\");\n\n_c = Crypto;\nexport default Crypto;\n\nvar _c;\n\n$RefreshReg$(_c, \"Crypto\");","map":{"version":3,"sources":["/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Crypto.js"],"names":["React","useState","useEffect","DropdownList","tokenList","AggregateInput","Crypto","props","console","log","aggregatedSearch","filterData","setFilterData","tokenPrice","setTokenPrice","extractedData","setExtractedData","cryptoAPIQuery","namesArray","displayName","map","chicken","push","name","handleSearchFilter","event","searchWord","newFilter","Object","keys","reduce","result","key","includes","id","makeApiCall","res","fetch","rawData","json","tokenPriceArray","obj1","obj2","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { DropdownList } from \"react-widgets/cjs\";\nimport tokenList from \"./TokenListApiData\";\nimport AggregateInput from \"./AggregateInput\";\n\nconst Crypto = (props) => {\n  console.log(props.aggregatedSearch);\n\n  // console.log(props.token);\n  // const [query, setQuery] = useState(\"\");\n  // const [type, setType] = useState(\"\");\n  // const [query, setQuery] = useState(\"\");\n  // const [otherQuery, setOtherQuery] = useState(\"\");\n  // const [name, setName] = useState(\"\");\n  // const tokenName = tokenList[i].name;\n  const [filterData, setFilterData] = useState(\"\");\n  const [tokenPrice, setTokenPrice] = useState([]);\n  const [extractedData, setExtractedData] = useState(\"\");\n\n  const cryptoAPIQuery = `https://api.coingecko.com/api/v3/simple/price?ids=${filterData}&vs_currencies=USD`;\n\n  const namesArray = [];\n  // const idArray = [];\n  // const symbolArray = [];\n  // console.log(namesArray);\n\n  const displayName = tokenList.map((chicken) => {\n    return namesArray.push(chicken.name);\n  });\n\n  const handleSearchFilter = (event) => {\n    // setQuery(event);\n    const searchWord = event;\n    // console.log(searchWord);\n    const newFilter = Object.keys(tokenList).reduce((result, key) => {\n      if (tokenList[key].name.includes(searchWord)) {\n        result = tokenList[key].id;\n        // console.log(tokenList[key].id);\n      }\n      return result;\n    }, \"\");\n    setFilterData(newFilter);\n  };\n\n  // setName = displayName;\n  // console.log(name);\n\n  // useEffect(() => {\n  // displayName();\n  // }, []);\n  // const cryptoList = [{props.token}];\n\n  const makeApiCall = async () => {\n    const res = await fetch(cryptoAPIQuery);\n    const rawData = await res.json();\n    // console.log(rawData);\n    //   const rawDataArray = [rawData];\n    //   // console.log(rawDataArray);\n    // const sortToken = tokenList.map((chicken) => {\n    //   return {\n    //     tokenPrice: chicken.usd,\n    //   };\n    // });\n    setTokenPrice(rawData);\n    console.log(rawData);\n\n    const tokenPriceArray = [rawData];\n    const obj1 = tokenPriceArray[0];\n    console.log(obj1);\n\n    const obj2 = obj1[Object.keys(obj1)[0]];\n    console.log(obj2);\n\n    const value = obj2[Object.keys(obj2)[0]];\n    console.log(value);\n    setExtractedData(value);\n  };\n\n  // console.log(tokenPrice);\n\n  // setExtractedData = value;\n  //   const filteredData = rawDataArray.map((duck) => {\n  //     return {\n  //       price: duck.data.rates,\n  //       unit: duck.data.unit,\n  //     };\n  //   });\n  //   setType(filteredData);\n\n  // console.log(tokenPrice);\n\n  // const tokenPriceArray = [tokenPrice];\n  // const obj1 = tokenPriceArray[0];\n\n  // const obj2 = obj1[Object.keys(obj1)[0]];\n  // console.log(obj2);\n\n  // const value = obj2[Object.keys(obj2)[0]];\n  // console.log(tokenPriceArray);\n\n  return (\n    <div>\n      <br />\n      <h2>Select a token</h2>\n      <DropdownList data={namesArray} onChange={handleSearchFilter} />\n      <button onClick={makeApiCall}>Submit</button>\n      {/* <Result type={type} /> */}\n      <div>Token price : ${extractedData}</div>\n    </div>\n  );\n};\n\nexport default Crypto;\n"]},"metadata":{},"sourceType":"module"}