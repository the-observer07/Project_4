{"ast":null,"code":"var _jsxFileName = \"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Crypto.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport tokenList from \"./TokenListApiData\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Crypto = props => {\n  _s();\n\n  const [filterData, setFilterData] = useState(\"\");\n  const [tokenPrice, setTokenPrice] = useState([]);\n  const [extractedData, setExtractedData] = useState(\"\");\n  const cryptoAPIQuery = `https://api.coingecko.com/api/v3/simple/price?ids=${filterData}&vs_currencies=USD`;\n  useEffect(() => {\n    getResults();\n  }, [props.cryptoState]);\n\n  const getResults = () => {\n    const searchWord = props.searchWord;\n    const newFilter = Object.keys(tokenList).reduce((result, key) => {\n      if (tokenList[key].name.match(searchWord)) {\n        result = tokenList[key].id;\n      }\n\n      return result;\n    }, \"\");\n    setFilterData(newFilter);\n  };\n\n  const makeApiCall = async () => {\n    const res = await fetch(cryptoAPIQuery);\n    const rawData = await res.json();\n    setTokenPrice(rawData);\n    console.log(rawData);\n    const tokenPriceArray = [rawData];\n    const obj1 = tokenPriceArray[0];\n    console.log(obj1);\n    const obj2 = obj1[Object.keys(obj1)[0]];\n    console.log(obj2);\n    const value = obj2[Object.keys(obj2)[0]];\n    console.log(value);\n    setExtractedData(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: makeApiCall,\n      size: \"lg\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data\",\n      children: [\"Token price : $\", extractedData]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Crypto, \"kXZ7kVz+ASZnRnVCsydabpixhyo=\");\n\n_c = Crypto;\nexport default Crypto;\n\nvar _c;\n\n$RefreshReg$(_c, \"Crypto\");","map":{"version":3,"sources":["/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Crypto.js"],"names":["React","useState","useEffect","tokenList","Button","Container","Row","Col","Crypto","props","filterData","setFilterData","tokenPrice","setTokenPrice","extractedData","setExtractedData","cryptoAPIQuery","getResults","cryptoState","searchWord","newFilter","Object","keys","reduce","result","key","name","match","id","makeApiCall","res","fetch","rawData","json","console","log","tokenPriceArray","obj1","obj2","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,GAA5B,EAAiCC,GAAjC,QAA4C,iBAA5C;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAMe,cAAc,GAAI,qDAAoDN,UAAW,oBAAvF;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACR,KAAK,CAACS,WAAP,CAFM,CAAT;;AAIA,QAAMD,UAAU,GAAG,MAAM;AACvB,UAAME,UAAU,GAAGV,KAAK,CAACU,UAAzB;AACA,UAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYnB,SAAZ,EAAuBoB,MAAvB,CAA8B,CAACC,MAAD,EAASC,GAAT,KAAiB;AAC/D,UAAItB,SAAS,CAACsB,GAAD,CAAT,CAAeC,IAAf,CAAoBC,KAApB,CAA0BR,UAA1B,CAAJ,EAA2C;AACzCK,QAAAA,MAAM,GAAGrB,SAAS,CAACsB,GAAD,CAAT,CAAeG,EAAxB;AACD;;AAED,aAAOJ,MAAP;AACD,KANiB,EAMf,EANe,CAAlB;AAOAb,IAAAA,aAAa,CAACS,SAAD,CAAb;AACD,GAVD;;AAYA,QAAMS,WAAW,GAAG,YAAY;AAC9B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACf,cAAD,CAAvB;AACA,UAAMgB,OAAO,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAtB;AAEApB,IAAAA,aAAa,CAACmB,OAAD,CAAb;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AAEA,UAAMI,eAAe,GAAG,CAACJ,OAAD,CAAxB;AACA,UAAMK,IAAI,GAAGD,eAAe,CAAC,CAAD,CAA5B;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AAEA,UAAMC,IAAI,GAAGD,IAAI,CAAChB,MAAM,CAACC,IAAP,CAAYe,IAAZ,EAAkB,CAAlB,CAAD,CAAjB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AAEA,UAAMC,KAAK,GAAGD,IAAI,CAACjB,MAAM,CAACC,IAAP,CAAYgB,IAAZ,EAAkB,CAAlB,CAAD,CAAlB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACAxB,IAAAA,gBAAgB,CAACwB,KAAD,CAAhB;AACD,GAjBD;;AAmBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEV,WAAjB;AAA8B,MAAA,IAAI,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,oCAAsCf,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAvDD;;GAAMN,M;;KAAAA,M;AAyDN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport tokenList from \"./TokenListApiData\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\n\nconst Crypto = (props) => {\n  const [filterData, setFilterData] = useState(\"\");\n  const [tokenPrice, setTokenPrice] = useState([]);\n  const [extractedData, setExtractedData] = useState(\"\");\n\n  const cryptoAPIQuery = `https://api.coingecko.com/api/v3/simple/price?ids=${filterData}&vs_currencies=USD`;\n\n  useEffect(() => {\n    getResults();\n  }, [props.cryptoState]);\n\n  const getResults = () => {\n    const searchWord = props.searchWord;\n    const newFilter = Object.keys(tokenList).reduce((result, key) => {\n      if (tokenList[key].name.match(searchWord)) {\n        result = tokenList[key].id;\n      }\n\n      return result;\n    }, \"\");\n    setFilterData(newFilter);\n  };\n\n  const makeApiCall = async () => {\n    const res = await fetch(cryptoAPIQuery);\n    const rawData = await res.json();\n\n    setTokenPrice(rawData);\n    console.log(rawData);\n\n    const tokenPriceArray = [rawData];\n    const obj1 = tokenPriceArray[0];\n    console.log(obj1);\n\n    const obj2 = obj1[Object.keys(obj1)[0]];\n    console.log(obj2);\n\n    const value = obj2[Object.keys(obj2)[0]];\n    console.log(value);\n    setExtractedData(value);\n  };\n\n  return (\n    <div>\n      <br />\n      <Button onClick={makeApiCall} size=\"lg\">\n        Submit\n      </Button>\n      <br />\n      <br />\n      <br />\n      <div className=\"data\">Token price : ${extractedData}</div>\n      <br />\n    </div>\n  );\n};\n\nexport default Crypto;\n"]},"metadata":{},"sourceType":"module"}