{"ast":null,"code":"var _jsxFileName = \"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/CryptoTicker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Ticker, { FinancialTicker } from \"nice-react-ticker\"; // import Ticker from \"react-ticker\";\n\nimport Bottleneck from \"bottleneck\";\nimport { type } from \"@testing-library/user-event/dist/type\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoTicker = () => {\n  _s();\n\n  const [cryptoData, setCryptoData] = useState([]);\n  const [newsData, setNewsData] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const cryptoApiTicker = \"https://api.coingecko.com/api/v3/exchanges/binance/tickers\";\n  const financialNewsTicker = \"https://api.marketaux.com/v1/news/all?symbols=TSLA,AMZN,MSFT&filter_entities=true&language=en&api_token=HtQPxNVoj5bYyudPypD08TDxD7MdNbMkUB69DXJe\";\n  const limiter = new Bottleneck({\n    maxConcurrent: 1,\n    minTime: 5000 // pick a value that makes sense for your use case\n\n  }); // const result = await limiter.schedule(() => fetchCryptoAPI());\n  //   const result = await limiter.schedule(() => makeApiCall());\n  // useEffect(() => {\n  //   throttledApiCall();\n  //   throttledNewsApiCall();\n  //   // filterData();\n  // }, []);\n\n  const fetchCryptoAPI = async () => {\n    const res = await fetch(cryptoApiTicker); // console.log(res);\n\n    const rawData = await res.json(); // console.log(rawData);\n\n    setCryptoData();\n    const filteredData = rawData.tickers.map((element, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"symbol: \", element.base, \", price: \", element.last, \", priceBTC:\", \" \", element.converted_last.btc, \",\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this);\n    });\n    return filteredData;\n    setType(filteredData);\n    console.log(filteredData);\n  };\n\n  const wrapped = limiter.wrap(fetchCrydptoAPI);\n  console.log(wrapped); // const result = await wrapped(arg1, arg2);\n  // const result = await limiter.schedule(() => fetchCrydptoAPI());\n  // console.log(data);\n  // const throttledApiCall = limiter.wrap(fetchCryptoAPI);\n  // const throttledApiCall = await limiter.schedule(() => fetchCryptoAPI());\n  // const fetchFinancialNewsAPI = async () => {\n  //   const res = await fetch(financialNewsTicker);\n  //   const rawData = await res.json();\n  //   console.log(rawData);\n  // };\n  // console.log(data);\n  // const throttledNewsApiCall = await limiter.schedule(() =>\n  //   fetchFinancialNewsAPI()\n  // );\n  // const throttledNewsApiCall = limiter.wrap(fetchFinancialNewsAPI);\n  // const res = await fetch(cryptoApiTicker);\n  // const rawData = await res.json();\n  // console.log(rawData);\n  // setData = rawData;\n  //   const fet\n  //   console.log(data);\n  //   const allThePromises = data.map((item) => {\n  //     return throttledApiCall();\n  //   });\n  //   const rawData = await limiter.schedule();\n  // const filteredData = rawData.map((element, index) => {\n  //   return {\n  //     symbol: duck.coins.symbol,\n  //     priceBtc: duck.coins.price_btc,\n  //   };\n  // });\n  // setType(filteredData);\n  // const filteredData = rawDataArray.map((duck) => {\n  //   return {\n  //     price: duck.data.rates,\n  //     unit: duck.data.unit,\n  //   };\n  // });\n  // setType(filteredData);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Ticker, {\n      children: [/*#__PURE__*/_jsxDEV(FinancialTicker, {\n        id: \"1\",\n        change: true,\n        symbol: \"S&P 500\",\n        lastPrice: \"3372.2\",\n        percentage: \"0.38%\",\n        currentPrice: \"12.9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FinancialTicker, {\n        id: \"2\",\n        change: true,\n        symbol: \"AAPL\",\n        lastPrice: \"3372.2\",\n        percentage: \"0.38%\",\n        currentPrice: \"12.9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FinancialTicker, {\n        id: \"3\",\n        change: true,\n        symbol: \"GOOG\",\n        lastPrice: \"3372.2\",\n        percentage: \"0.38%\",\n        currentPrice: \"12.9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FinancialTicker, {\n        id: \"4\",\n        change: false,\n        symbol: \"S&P 500\",\n        lastPrice: \"3372.2\",\n        percentage: \"0.38%\",\n        currentPrice: \"12.9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FinancialTicker, {\n        id: \"5\",\n        change: false,\n        symbol: \"S&P 500\",\n        lastPrice: \"3372.2\",\n        percentage: \"0.38%\",\n        currentPrice: \"12.9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FinancialTicker, {\n        id: \"6\",\n        change: false,\n        symbol: \"S&P 500\",\n        lastPrice: \"3372.2\",\n        percentage: \"0.38%\",\n        currentPrice: \"12.9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FinancialTicker, {\n        id: \"7\",\n        change: false,\n        symbol: \"S&P 500\",\n        lastPrice: \"3372.2\",\n        percentage: \"0.38%\",\n        currentPrice: \"12.9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FinancialTicker, {\n        id: \"8\",\n        change: false,\n        symbol: \"S&P 500\",\n        lastPrice: \"3372.2\",\n        percentage: \"0.38%\",\n        currentPrice: \"12.9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FinancialTicker, {\n        id: \"9\",\n        change: false,\n        symbol: \"S&P 500\",\n        lastPrice: \"3372.2\",\n        percentage: \"0.38%\",\n        currentPrice: \"12.9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FinancialTicker, {\n        id: \"10\",\n        change: false,\n        symbol: \"S&P 500\",\n        lastPrice: \"3372.2\",\n        percentage: \"0.38%\",\n        currentPrice: \"12.9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CryptoTicker, \"aDEHgl3ZJQJ/AvZOKOy5VW5Z4Us=\");\n\n_c = CryptoTicker;\nexport default CryptoTicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoTicker\");","map":{"version":3,"sources":["/Users/inspireadmin/Documents/GitHub/Project_2/src/component/CryptoTicker.js"],"names":["React","useState","useEffect","Ticker","FinancialTicker","Bottleneck","type","CryptoTicker","cryptoData","setCryptoData","newsData","setNewsData","setType","cryptoApiTicker","financialNewsTicker","limiter","maxConcurrent","minTime","fetchCryptoAPI","res","fetch","rawData","json","filteredData","tickers","map","element","index","base","last","converted_last","btc","console","log","wrapped","wrap","fetchCrydptoAPI"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Ticker, { FinancialTicker } from \"nice-react-ticker\";\n// import Ticker from \"react-ticker\";\nimport Bottleneck from \"bottleneck\";\nimport { type } from \"@testing-library/user-event/dist/type\";\n\nconst CryptoTicker = () => {\n  const [cryptoData, setCryptoData] = useState([]);\n  const [newsData, setNewsData] = useState(\"\");\n  const [type, setType] = useState(\"\");\n\n  const cryptoApiTicker =\n    \"https://api.coingecko.com/api/v3/exchanges/binance/tickers\";\n  const financialNewsTicker =\n    \"https://api.marketaux.com/v1/news/all?symbols=TSLA,AMZN,MSFT&filter_entities=true&language=en&api_token=HtQPxNVoj5bYyudPypD08TDxD7MdNbMkUB69DXJe\";\n\n  const limiter = new Bottleneck({\n    maxConcurrent: 1,\n    minTime: 5000, // pick a value that makes sense for your use case\n  });\n\n  // const result = await limiter.schedule(() => fetchCryptoAPI());\n\n  //   const result = await limiter.schedule(() => makeApiCall());\n\n  // useEffect(() => {\n  //   throttledApiCall();\n  //   throttledNewsApiCall();\n  //   // filterData();\n  // }, []);\n\n  const fetchCryptoAPI = async () => {\n    const res = await fetch(cryptoApiTicker);\n    // console.log(res);\n    const rawData = await res.json();\n    // console.log(rawData);\n    setCryptoData();\n    const filteredData = rawData.tickers.map((element, index) => {\n      return (\n        <div key={index}>\n          symbol: {element.base}, price: {element.last}, priceBTC:{\" \"}\n          {element.converted_last.btc},\n        </div>\n      );\n    });\n    return filteredData;\n    setType(filteredData);\n    console.log(filteredData);\n  };\n\n  const wrapped = limiter.wrap(fetchCrydptoAPI);\n  console.log(wrapped);\n\n  // const result = await wrapped(arg1, arg2);\n  // const result = await limiter.schedule(() => fetchCrydptoAPI());\n\n  // console.log(data);\n\n  // const throttledApiCall = limiter.wrap(fetchCryptoAPI);\n  // const throttledApiCall = await limiter.schedule(() => fetchCryptoAPI());\n\n  // const fetchFinancialNewsAPI = async () => {\n  //   const res = await fetch(financialNewsTicker);\n  //   const rawData = await res.json();\n  //   console.log(rawData);\n  // };\n  // console.log(data);\n\n  // const throttledNewsApiCall = await limiter.schedule(() =>\n  //   fetchFinancialNewsAPI()\n  // );\n  // const throttledNewsApiCall = limiter.wrap(fetchFinancialNewsAPI);\n\n  // const res = await fetch(cryptoApiTicker);\n  // const rawData = await res.json();\n  // console.log(rawData);\n  // setData = rawData;\n\n  //   const fet\n  //   console.log(data);\n\n  //   const allThePromises = data.map((item) => {\n  //     return throttledApiCall();\n  //   });\n  //   const rawData = await limiter.schedule();\n\n  // const filteredData = rawData.map((element, index) => {\n  //   return {\n  //     symbol: duck.coins.symbol,\n  //     priceBtc: duck.coins.price_btc,\n  //   };\n  // });\n  // setType(filteredData);\n\n  // const filteredData = rawDataArray.map((duck) => {\n  //   return {\n  //     price: duck.data.rates,\n  //     unit: duck.data.unit,\n  //   };\n  // });\n  // setType(filteredData);\n\n  return (\n    <div>\n      <Ticker>\n        <FinancialTicker\n          id=\"1\"\n          change={true}\n          symbol=\"S&P 500\"\n          lastPrice=\"3372.2\"\n          percentage=\"0.38%\"\n          currentPrice=\"12.9\"\n        />\n        <FinancialTicker\n          id=\"2\"\n          change={true}\n          symbol=\"AAPL\"\n          lastPrice=\"3372.2\"\n          percentage=\"0.38%\"\n          currentPrice=\"12.9\"\n        />\n        <FinancialTicker\n          id=\"3\"\n          change={true}\n          symbol=\"GOOG\"\n          lastPrice=\"3372.2\"\n          percentage=\"0.38%\"\n          currentPrice=\"12.9\"\n        />\n        <FinancialTicker\n          id=\"4\"\n          change={false}\n          symbol=\"S&P 500\"\n          lastPrice=\"3372.2\"\n          percentage=\"0.38%\"\n          currentPrice=\"12.9\"\n        />\n        <FinancialTicker\n          id=\"5\"\n          change={false}\n          symbol=\"S&P 500\"\n          lastPrice=\"3372.2\"\n          percentage=\"0.38%\"\n          currentPrice=\"12.9\"\n        />\n        <FinancialTicker\n          id=\"6\"\n          change={false}\n          symbol=\"S&P 500\"\n          lastPrice=\"3372.2\"\n          percentage=\"0.38%\"\n          currentPrice=\"12.9\"\n        />\n        <FinancialTicker\n          id=\"7\"\n          change={false}\n          symbol=\"S&P 500\"\n          lastPrice=\"3372.2\"\n          percentage=\"0.38%\"\n          currentPrice=\"12.9\"\n        />\n        <FinancialTicker\n          id=\"8\"\n          change={false}\n          symbol=\"S&P 500\"\n          lastPrice=\"3372.2\"\n          percentage=\"0.38%\"\n          currentPrice=\"12.9\"\n        />\n        <FinancialTicker\n          id=\"9\"\n          change={false}\n          symbol=\"S&P 500\"\n          lastPrice=\"3372.2\"\n          percentage=\"0.38%\"\n          currentPrice=\"12.9\"\n        />\n        <FinancialTicker\n          id=\"10\"\n          change={false}\n          symbol=\"S&P 500\"\n          lastPrice=\"3372.2\"\n          percentage=\"0.38%\"\n          currentPrice=\"12.9\"\n        />\n      </Ticker>\n    </div>\n  );\n};\n\nexport default CryptoTicker;\n"]},"metadata":{},"sourceType":"module"}