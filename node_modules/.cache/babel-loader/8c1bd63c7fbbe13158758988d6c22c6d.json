{"ast":null,"code":"import _asyncToGenerator from\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/regenerator/index.js\";import React,{useEffect,useState}from\"react\";// import axios from \"axios\";\n// import TokenListApiData from \"./TokenListApiData\";\nimport Bottleneck from\"bottleneck\";import{jsx as _jsx}from\"react/jsx-runtime\";var TokenList=function TokenList(props){// const [totalReactPackages, setTotalReactPackages] = useState(null);\n// const [state, setState] = useState(\"\");\n// const [list, setList] = useState(\"\");\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),type=_useState4[0],setType=_useState4[1];var tickerData=\"https://api.coingecko.com/api/v3/exchanges/binance\";var limiter=new Bottleneck({reservoir:100,// initial value\nreservoirRefreshAmount:100,reservoirRefreshInterval:60*500,// also use maxConcurrent and/or minTime for safety\nmaxConcurrent:1,minTime:333// pick a value that makes sense for your use case\n});var makeApiCall=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,rawData,filteredData,emptyArray,getId;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(tickerData);case 2:res=_context.sent;_context.next=5;return res.json();case 5:rawData=_context.sent;// console.log(rawData);\n// console.log(rawData.tickers);\nsetData(rawData.tickers);// const rawDataArray = rawData.tickers;\n// const filterData = () => {\nfilteredData=rawData.tickers.map(function(duck){return{id:duck.base,price:duck.last};});setType(filteredData);// };\nemptyArray=[];getId=filteredData.map(function(chicken){return emptyArray.push(chicken.id);});// console.log(emptyArray);\nprops.setId(emptyArray);case 12:case\"end\":return _context.stop();}}},_callee);}));return function makeApiCall(){return _ref.apply(this,arguments);};}();// console.log(data);\n// console.log(type);\n// console.log(props.id);\nvar throttledApiCall=limiter.wrap(makeApiCall);useEffect(function(){throttledApiCall();makeApiCall();// filterData();\n},[]);var cryptoIdArray=[];var displayId=type.map(function(chicken){return cryptoIdArray.push(chicken.id);});// console.log(displayId);\n// console.log(cryptoIdArray);\n// props.setId(cryptoIdArray);\n// console.log(props.id);\nreturn/*#__PURE__*/_jsx(\"div\",{});};export default TokenList;","map":{"version":3,"sources":["/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenList.js"],"names":["React","useEffect","useState","Bottleneck","TokenList","props","data","setData","type","setType","tickerData","limiter","reservoir","reservoirRefreshAmount","reservoirRefreshInterval","maxConcurrent","minTime","makeApiCall","fetch","res","json","rawData","tickers","filteredData","map","duck","id","base","price","last","emptyArray","getId","chicken","push","setId","throttledApiCall","wrap","cryptoIdArray","displayId"],"mappings":"+YAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA;AACA;AACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,C,2CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAC3B;AACA;AACA;AACA,cAAwBH,QAAQ,CAAC,EAAD,CAAhC,wCAAOI,IAAP,eAAaC,OAAb,eACA,eAAwBL,QAAQ,CAAC,EAAD,CAAhC,yCAAOM,IAAP,eAAaC,OAAb,eAEA,GAAMC,CAAAA,UAAU,CAAG,oDAAnB,CAEA,GAAMC,CAAAA,OAAO,CAAG,GAAIR,CAAAA,UAAJ,CAAe,CAC7BS,SAAS,CAAE,GADkB,CACb;AAChBC,sBAAsB,CAAE,GAFK,CAG7BC,wBAAwB,CAAE,GAAK,GAHF,CAK7B;AACAC,aAAa,CAAE,CANc,CAO7BC,OAAO,CAAE,GAAK;AAPe,CAAf,CAAhB,CAUA,GAAMC,CAAAA,WAAW,0FAAG,uMACAC,CAAAA,KAAK,CAACR,UAAD,CADL,QACZS,GADY,qCAEIA,CAAAA,GAAG,CAACC,IAAJ,EAFJ,QAEZC,OAFY,eAGlB;AACA;AACAd,OAAO,CAACc,OAAO,CAACC,OAAT,CAAP,CACA;AACA;AACMC,YARY,CAQGF,OAAO,CAACC,OAAR,CAAgBE,GAAhB,CAAoB,SAACC,IAAD,CAAU,CACjD,MAAO,CACLC,EAAE,CAAED,IAAI,CAACE,IADJ,CAELC,KAAK,CAAEH,IAAI,CAACI,IAFP,CAAP,CAID,CALoB,CARH,CAelBpB,OAAO,CAACc,YAAD,CAAP,CACA;AACMO,UAjBY,CAiBC,EAjBD,CAkBZC,KAlBY,CAkBJR,YAAY,CAACC,GAAb,CAAiB,SAACQ,OAAD,CAAa,CAC1C,MAAOF,CAAAA,UAAU,CAACG,IAAX,CAAgBD,OAAO,CAACN,EAAxB,CAAP,CACD,CAFa,CAlBI,CAqBlB;AACArB,KAAK,CAAC6B,KAAN,CAAYJ,UAAZ,EAtBkB,uDAAH,kBAAXb,CAAAA,WAAW,0CAAjB,CAwBA;AACA;AACA;AAEA,GAAMkB,CAAAA,gBAAgB,CAAGxB,OAAO,CAACyB,IAAR,CAAanB,WAAb,CAAzB,CAEAhB,SAAS,CAAC,UAAM,CACdkC,gBAAgB,GAChBlB,WAAW,GACX;AACD,CAJQ,CAIN,EAJM,CAAT,CAMA,GAAMoB,CAAAA,aAAa,CAAG,EAAtB,CACA,GAAMC,CAAAA,SAAS,CAAG9B,IAAI,CAACgB,GAAL,CAAS,SAACQ,OAAD,CAAa,CACtC,MAAOK,CAAAA,aAAa,CAACJ,IAAd,CAAmBD,OAAO,CAACN,EAA3B,CAAP,CACD,CAFiB,CAAlB,CAGA;AACA;AAEA;AACA;AAEA,mBAAO,cAAP,CACD,CAlED,CAoEA,cAAetB,CAAAA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import TokenListApiData from \"./TokenListApiData\";\nimport Bottleneck from \"bottleneck\";\n\nconst TokenList = (props) => {\n  // const [totalReactPackages, setTotalReactPackages] = useState(null);\n  // const [state, setState] = useState(\"\");\n  // const [list, setList] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [type, setType] = useState([]);\n\n  const tickerData = \"https://api.coingecko.com/api/v3/exchanges/binance\";\n\n  const limiter = new Bottleneck({\n    reservoir: 100, // initial value\n    reservoirRefreshAmount: 100,\n    reservoirRefreshInterval: 60 * 500,\n\n    // also use maxConcurrent and/or minTime for safety\n    maxConcurrent: 1,\n    minTime: 333, // pick a value that makes sense for your use case\n  });\n\n  const makeApiCall = async () => {\n    const res = await fetch(tickerData);\n    const rawData = await res.json();\n    // console.log(rawData);\n    // console.log(rawData.tickers);\n    setData(rawData.tickers);\n    // const rawDataArray = rawData.tickers;\n    // const filterData = () => {\n    const filteredData = rawData.tickers.map((duck) => {\n      return {\n        id: duck.base,\n        price: duck.last,\n      };\n    });\n\n    setType(filteredData);\n    // };\n    const emptyArray = [];\n    const getId = filteredData.map((chicken) => {\n      return emptyArray.push(chicken.id);\n    });\n    // console.log(emptyArray);\n    props.setId(emptyArray);\n  };\n  // console.log(data);\n  // console.log(type);\n  // console.log(props.id);\n\n  const throttledApiCall = limiter.wrap(makeApiCall);\n\n  useEffect(() => {\n    throttledApiCall();\n    makeApiCall();\n    // filterData();\n  }, []);\n\n  const cryptoIdArray = [];\n  const displayId = type.map((chicken) => {\n    return cryptoIdArray.push(chicken.id);\n  });\n  // console.log(displayId);\n  // console.log(cryptoIdArray);\n\n  // props.setId(cryptoIdArray);\n  // console.log(props.id);\n\n  return <div></div>;\n};\n\nexport default TokenList;\n"]},"metadata":{},"sourceType":"module"}