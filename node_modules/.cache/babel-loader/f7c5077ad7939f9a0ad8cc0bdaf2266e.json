{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _classCallCheck = require(\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nvar Events;\n\nEvents = /*#__PURE__*/function () {\n  function Events(instance) {\n    var _this2 = this;\n\n    _classCallCheck(this, Events);\n\n    this.instance = instance;\n    this._events = {};\n\n    if (this.instance.on != null || this.instance.once != null || this.instance.removeAllListeners != null) {\n      throw new Error(\"An Emitter already exists for this object\");\n    }\n\n    this.instance.on = function (name, cb) {\n      return _this2._addListener(name, \"many\", cb);\n    };\n\n    this.instance.once = function (name, cb) {\n      return _this2._addListener(name, \"once\", cb);\n    };\n\n    this.instance.removeAllListeners = function () {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      if (name != null) {\n        return delete _this2._events[name];\n      } else {\n        return _this2._events = {};\n      }\n    };\n  }\n\n  _createClass(Events, [{\n    key: \"_addListener\",\n    value: function _addListener(name, status, cb) {\n      var base;\n\n      if ((base = this._events)[name] == null) {\n        base[name] = [];\n      }\n\n      this._events[name].push({\n        cb: cb,\n        status: status\n      });\n\n      return this.instance;\n    }\n  }, {\n    key: \"listenerCount\",\n    value: function listenerCount(name) {\n      if (this._events[name] != null) {\n        return this._events[name].length;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(name) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var e, promises;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n\n                if (name !== \"debug\") {\n                  _this.trigger(\"debug\", \"Event triggered: \".concat(name), args);\n                }\n\n                if (!(_this._events[name] == null)) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 4:\n                _this._events[name] = _this._events[name].filter(function (listener) {\n                  return listener.status !== \"none\";\n                });\n                promises = _this._events[name].map( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(listener) {\n                    var e, returned;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            if (!(listener.status === \"none\")) {\n                              _context.next = 2;\n                              break;\n                            }\n\n                            return _context.abrupt(\"return\");\n\n                          case 2:\n                            if (listener.status === \"once\") {\n                              listener.status = \"none\";\n                            }\n\n                            _context.prev = 3;\n                            returned = typeof listener.cb === \"function\" ? listener.cb.apply(listener, args) : void 0;\n\n                            if (!(typeof (returned != null ? returned.then : void 0) === \"function\")) {\n                              _context.next = 11;\n                              break;\n                            }\n\n                            _context.next = 8;\n                            return returned;\n\n                          case 8:\n                            return _context.abrupt(\"return\", _context.sent);\n\n                          case 11:\n                            return _context.abrupt(\"return\", returned);\n\n                          case 12:\n                            _context.next = 19;\n                            break;\n\n                          case 14:\n                            _context.prev = 14;\n                            _context.t0 = _context[\"catch\"](3);\n                            e = _context.t0;\n\n                            if (\"name\" !== \"error\") {\n                              _this.trigger(\"error\", e);\n                            }\n\n                            return _context.abrupt(\"return\", null);\n\n                          case 19:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee, null, [[3, 14]]);\n                  }));\n\n                  return function (_x) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n                _context2.next = 8;\n                return Promise.all(promises);\n\n              case 8:\n                return _context2.abrupt(\"return\", _context2.sent.find(function (x) {\n                  return x != null;\n                }));\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](0);\n                e = _context2.t0;\n\n                if (\"name\" !== \"error\") {\n                  _this.trigger(\"error\", e);\n                }\n\n                return _context2.abrupt(\"return\", null);\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 11]]);\n      }))();\n    }\n  }]);\n\n  return Events;\n}();\n\nmodule.exports = Events;","map":{"version":3,"sources":["/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/bottleneck/lib/Events.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","Events","instance","_events","on","once","removeAllListeners","Error","name","cb","_addListener","status","base","push","length","_this","trigger","filter","listener","promises","map","_ref","returned","e","_x","all","find","x","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Events;\nEvents = class Events {\n  constructor(instance) {\n    this.instance = instance;\n    this._events = {};\n\n    if (this.instance.on != null || this.instance.once != null || this.instance.removeAllListeners != null) {\n      throw new Error(\"An Emitter already exists for this object\");\n    }\n\n    this.instance.on = (name, cb) => {\n      return this._addListener(name, \"many\", cb);\n    };\n\n    this.instance.once = (name, cb) => {\n      return this._addListener(name, \"once\", cb);\n    };\n\n    this.instance.removeAllListeners = (name = null) => {\n      if (name != null) {\n        return delete this._events[name];\n      } else {\n        return this._events = {};\n      }\n    };\n  }\n\n  _addListener(name, status, cb) {\n    var base;\n\n    if ((base = this._events)[name] == null) {\n      base[name] = [];\n    }\n\n    this._events[name].push({\n      cb,\n      status\n    });\n\n    return this.instance;\n  }\n\n  listenerCount(name) {\n    if (this._events[name] != null) {\n      return this._events[name].length;\n    } else {\n      return 0;\n    }\n  }\n\n  trigger(name, ...args) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var e, promises;\n\n      try {\n        if (name !== \"debug\") {\n          _this.trigger(\"debug\", `Event triggered: ${name}`, args);\n        }\n\n        if (_this._events[name] == null) {\n          return;\n        }\n\n        _this._events[name] = _this._events[name].filter(function (listener) {\n          return listener.status !== \"none\";\n        });\n        promises = _this._events[name].map(\n        /*#__PURE__*/\n        function () {\n          var _ref = _asyncToGenerator(function* (listener) {\n            var e, returned;\n\n            if (listener.status === \"none\") {\n              return;\n            }\n\n            if (listener.status === \"once\") {\n              listener.status = \"none\";\n            }\n\n            try {\n              returned = typeof listener.cb === \"function\" ? listener.cb(...args) : void 0;\n\n              if (typeof (returned != null ? returned.then : void 0) === \"function\") {\n                return yield returned;\n              } else {\n                return returned;\n              }\n            } catch (error) {\n              e = error;\n\n              if (\"name\" !== \"error\") {\n                _this.trigger(\"error\", e);\n              }\n\n              return null;\n            }\n          });\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n        return (yield Promise.all(promises)).find(function (x) {\n          return x != null;\n        });\n      } catch (error) {\n        e = error;\n\n        if (\"name\" !== \"error\") {\n          _this.trigger(\"error\", e);\n        }\n\n        return null;\n      }\n    })();\n  }\n\n};\nmodule.exports = Events;"]},"metadata":{},"sourceType":"script"}