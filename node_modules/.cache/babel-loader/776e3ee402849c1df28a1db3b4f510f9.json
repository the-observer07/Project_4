{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _objectWithoutProperties = require(\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/helpers/objectWithoutProperties.js\").default;\n\nvar _excluded = [\"delay\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.type = type;\n\nvar _dom = require(\"@testing-library/dom\");\n\nvar _typeImplementation = require(\"./typeImplementation\"); // this needs to be wrapped in the event/asyncWrapper for React's act and angular's change detection\n// depending on whether it will be async.\n\n\nfunction type(element, text) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref$delay = _ref.delay,\n      delay = _ref$delay === void 0 ? 0 : _ref$delay,\n      options = _objectWithoutProperties(_ref, _excluded);\n\n  // we do not want to wrap in the asyncWrapper if we're not\n  // going to actually be doing anything async, so we only wrap\n  // if the delay is greater than 0\n  if (delay > 0) {\n    return (0, _dom.getConfig)().asyncWrapper(function () {\n      return (0, _typeImplementation.typeImplementation)(element, text, _objectSpread({\n        delay: delay\n      }, options));\n    });\n  } else {\n    return void (0, _typeImplementation.typeImplementation)(element, text, _objectSpread({\n      delay: delay\n    }, options)) // prevents users from dealing with UnhandledPromiseRejectionWarning\n    .catch(console.error);\n  }\n}","map":{"version":3,"sources":["/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@testing-library/user-event/dist/type/index.js"],"names":["Object","defineProperty","exports","value","type","_dom","require","_typeImplementation","element","text","delay","options","getConfig","asyncWrapper","typeImplementation","catch","console","error"],"mappings":"AAAA;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,IAAR,GAAeA,IAAf;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,sBAAD,CAAlB;;AAEA,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,sBAAD,CAAjC,C,CAEA;AACA;;;AACA,SAASF,IAAT,CAAcI,OAAd,EAAuBC,IAAvB,EAGQ;AAAA,iFAAJ,EAAI;AAAA,wBAFNC,KAEM;AAAA,MAFNA,KAEM,2BAFE,CAEF;AAAA,MADHC,OACG;;AACN;AACA;AACA;AACA,MAAID,KAAK,GAAG,CAAZ,EAAe;AACb,WAAO,CAAC,GAAGL,IAAI,CAACO,SAAT,IAAsBC,YAAtB,CAAmC;AAAA,aAAM,CAAC,GAAGN,mBAAmB,CAACO,kBAAxB,EAA4CN,OAA5C,EAAqDC,IAArD;AAC9CC,QAAAA,KAAK,EAALA;AAD8C,SAE3CC,OAF2C,EAAN;AAAA,KAAnC,CAAP;AAID,GALD,MAKO;AACL,WAAO,KAAK,CAAC,GAAGJ,mBAAmB,CAACO,kBAAxB,EAA4CN,OAA5C,EAAqDC,IAArD;AACVC,MAAAA,KAAK,EAALA;AADU,OAEPC,OAFO,GAGT;AAHS,KAIXI,KAJW,CAILC,OAAO,CAACC,KAJH,CAAZ;AAKD;AACF","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.type = type;\n\nvar _dom = require(\"@testing-library/dom\");\n\nvar _typeImplementation = require(\"./typeImplementation\");\n\n// this needs to be wrapped in the event/asyncWrapper for React's act and angular's change detection\n// depending on whether it will be async.\nfunction type(element, text, {\n  delay = 0,\n  ...options\n} = {}) {\n  // we do not want to wrap in the asyncWrapper if we're not\n  // going to actually be doing anything async, so we only wrap\n  // if the delay is greater than 0\n  if (delay > 0) {\n    return (0, _dom.getConfig)().asyncWrapper(() => (0, _typeImplementation.typeImplementation)(element, text, {\n      delay,\n      ...options\n    }));\n  } else {\n    return void (0, _typeImplementation.typeImplementation)(element, text, {\n      delay,\n      ...options\n    }) // prevents users from dealing with UnhandledPromiseRejectionWarning\n    .catch(console.error);\n  }\n}"]},"metadata":{},"sourceType":"script"}