{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.valueMatcher = valueMatcher;\nexports.dataIndexOf = dataIndexOf;\nexports.dataItem = dataItem;\nexports.useAccessors = exports.dataText = exports.dataValue = void 0;\n\nvar _react = require(\"react\");\n\nvar dataValue = function dataValue(dataItem, field) {\n  if (typeof field === 'function') return field(dataItem);\n  if (dataItem == null) return dataItem;\n  if (typeof field === 'string' && typeof dataItem === 'object' && field in dataItem) return dataItem[field];\n  return dataItem;\n};\n\nexports.dataValue = dataValue;\n\nvar dataText = function dataText(dataItem, textField) {\n  var value = dataValue(dataItem, textField);\n  return value == null ? '' : String(value);\n};\n/**\n * I don't know that the shallow equal makes sense here but am too afraid to\n * remove it.\n */\n\n\nexports.dataText = dataText;\n\nfunction valueMatcher(a, b, dataKey) {\n  return dataValue(a, dataKey) === dataValue(b, dataKey);\n}\n\nfunction dataIndexOf(data, value, dataKey) {\n  var valueDataKey = dataValue(value, dataKey);\n  var idx = -1;\n\n  while (++idx < data.length) {\n    var datum = data[idx];\n    if (datum === value || dataValue(datum, dataKey) === valueDataKey) return idx;\n  }\n\n  return -1;\n}\n\nfunction dataItem(data, value, dataKey) {\n  var idx = dataIndexOf(data, value, dataKey); // This isn't strictly safe, but we want to allow items that aren't in the list\n\n  return idx !== -1 ? data[idx] : value;\n}\n\nvar useAccessors = function useAccessors(textField, dataKey) {\n  return (0, _react.useMemo)(function () {\n    return {\n      text: function text(item) {\n        return dataText(item, textField);\n      },\n      value: function value(item) {\n        return dataValue(item, dataKey);\n      },\n      indexOf: function indexOf(data, value) {\n        return dataIndexOf(data, value, dataKey);\n      },\n      matches: function matches(a, b) {\n        return valueMatcher(a, b, dataKey);\n      },\n      findOrSelf: function findOrSelf(data, value) {\n        return dataItem(data, value, dataKey);\n      },\n      includes: function includes(data, value) {\n        return dataIndexOf(data, value, dataKey) !== -1;\n      }\n    };\n  }, [textField, dataKey]);\n};\n\nexports.useAccessors = useAccessors;","map":{"version":3,"sources":["/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/react-widgets/cjs/Accessors.js"],"names":["exports","__esModule","valueMatcher","dataIndexOf","dataItem","useAccessors","dataText","dataValue","_react","require","field","textField","value","String","a","b","dataKey","data","valueDataKey","idx","length","datum","useMemo","text","item","indexOf","matches","findOrSelf","includes"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,YAAR,GAAuBA,YAAvB;AACAF,OAAO,CAACG,WAAR,GAAsBA,WAAtB;AACAH,OAAO,CAACI,QAAR,GAAmBA,QAAnB;AACAJ,OAAO,CAACK,YAAR,GAAuBL,OAAO,CAACM,QAAR,GAAmBN,OAAO,CAACO,SAAR,GAAoB,KAAK,CAAnE;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAMF,SAAS,GAAG,SAAZA,SAAY,CAACH,QAAD,EAAWM,KAAX,EAAqB;AACrC,MAAI,OAAOA,KAAP,KAAiB,UAArB,EAAiC,OAAOA,KAAK,CAACN,QAAD,CAAZ;AACjC,MAAIA,QAAQ,IAAI,IAAhB,EAAsB,OAAOA,QAAP;AACtB,MAAI,OAAOM,KAAP,KAAiB,QAAjB,IAA6B,OAAON,QAAP,KAAoB,QAAjD,IAA6DM,KAAK,IAAIN,QAA1E,EAAoF,OAAOA,QAAQ,CAACM,KAAD,CAAf;AACpF,SAAON,QAAP;AACD,CALD;;AAOAJ,OAAO,CAACO,SAAR,GAAoBA,SAApB;;AAEA,IAAMD,QAAQ,GAAG,SAAXA,QAAW,CAACF,QAAD,EAAWO,SAAX,EAAyB;AACxC,MAAMC,KAAK,GAAGL,SAAS,CAACH,QAAD,EAAWO,SAAX,CAAvB;AACA,SAAOC,KAAK,IAAI,IAAT,GAAgB,EAAhB,GAAqBC,MAAM,CAACD,KAAD,CAAlC;AACD,CAHD;AAIA;AACA;AACA;AACA;;;AAGAZ,OAAO,CAACM,QAAR,GAAmBA,QAAnB;;AAEA,SAASJ,YAAT,CAAsBY,CAAtB,EAAyBC,CAAzB,EAA4BC,OAA5B,EAAqC;AACnC,SAAOT,SAAS,CAACO,CAAD,EAAIE,OAAJ,CAAT,KAA0BT,SAAS,CAACQ,CAAD,EAAIC,OAAJ,CAA1C;AACD;;AAED,SAASb,WAAT,CAAqBc,IAArB,EAA2BL,KAA3B,EAAkCI,OAAlC,EAA2C;AACzC,MAAME,YAAY,GAAGX,SAAS,CAACK,KAAD,EAAQI,OAAR,CAA9B;AACA,MAAIG,GAAG,GAAG,CAAC,CAAX;;AAEA,SAAO,EAAEA,GAAF,GAAQF,IAAI,CAACG,MAApB,EAA4B;AAC1B,QAAMC,KAAK,GAAGJ,IAAI,CAACE,GAAD,CAAlB;AACA,QAAIE,KAAK,KAAKT,KAAV,IAAmBL,SAAS,CAACc,KAAD,EAAQL,OAAR,CAAT,KAA8BE,YAArD,EAAmE,OAAOC,GAAP;AACpE;;AAED,SAAO,CAAC,CAAR;AACD;;AAED,SAASf,QAAT,CAAkBa,IAAlB,EAAwBL,KAAxB,EAA+BI,OAA/B,EAAwC;AACtC,MAAMG,GAAG,GAAGhB,WAAW,CAACc,IAAD,EAAOL,KAAP,EAAcI,OAAd,CAAvB,CADsC,CACS;;AAE/C,SAAOG,GAAG,KAAK,CAAC,CAAT,GAAaF,IAAI,CAACE,GAAD,CAAjB,GAAyBP,KAAhC;AACD;;AAED,IAAMP,YAAY,GAAG,SAAfA,YAAe,CAACM,SAAD,EAAYK,OAAZ,EAAwB;AAC3C,SAAO,CAAC,GAAGR,MAAM,CAACc,OAAX,EAAoB;AAAA,WAAO;AAChCC,MAAAA,IAAI,EAAE,cAAAC,IAAI;AAAA,eAAIlB,QAAQ,CAACkB,IAAD,EAAOb,SAAP,CAAZ;AAAA,OADsB;AAEhCC,MAAAA,KAAK,EAAE,eAAAY,IAAI;AAAA,eAAIjB,SAAS,CAACiB,IAAD,EAAOR,OAAP,CAAb;AAAA,OAFqB;AAGhCS,MAAAA,OAAO,EAAE,iBAACR,IAAD,EAAOL,KAAP;AAAA,eAAiBT,WAAW,CAACc,IAAD,EAAOL,KAAP,EAAcI,OAAd,CAA5B;AAAA,OAHuB;AAIhCU,MAAAA,OAAO,EAAE,iBAACZ,CAAD,EAAIC,CAAJ;AAAA,eAAUb,YAAY,CAACY,CAAD,EAAIC,CAAJ,EAAOC,OAAP,CAAtB;AAAA,OAJuB;AAKhCW,MAAAA,UAAU,EAAE,oBAACV,IAAD,EAAOL,KAAP;AAAA,eAAiBR,QAAQ,CAACa,IAAD,EAAOL,KAAP,EAAcI,OAAd,CAAzB;AAAA,OALoB;AAMhCY,MAAAA,QAAQ,EAAE,kBAACX,IAAD,EAAOL,KAAP;AAAA,eAAiBT,WAAW,CAACc,IAAD,EAAOL,KAAP,EAAcI,OAAd,CAAX,KAAsC,CAAC,CAAxD;AAAA;AANsB,KAAP;AAAA,GAApB,EAOH,CAACL,SAAD,EAAYK,OAAZ,CAPG,CAAP;AAQD,CATD;;AAWAhB,OAAO,CAACK,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.valueMatcher = valueMatcher;\nexports.dataIndexOf = dataIndexOf;\nexports.dataItem = dataItem;\nexports.useAccessors = exports.dataText = exports.dataValue = void 0;\n\nvar _react = require(\"react\");\n\nconst dataValue = (dataItem, field) => {\n  if (typeof field === 'function') return field(dataItem);\n  if (dataItem == null) return dataItem;\n  if (typeof field === 'string' && typeof dataItem === 'object' && field in dataItem) return dataItem[field];\n  return dataItem;\n};\n\nexports.dataValue = dataValue;\n\nconst dataText = (dataItem, textField) => {\n  const value = dataValue(dataItem, textField);\n  return value == null ? '' : String(value);\n};\n/**\n * I don't know that the shallow equal makes sense here but am too afraid to\n * remove it.\n */\n\n\nexports.dataText = dataText;\n\nfunction valueMatcher(a, b, dataKey) {\n  return dataValue(a, dataKey) === dataValue(b, dataKey);\n}\n\nfunction dataIndexOf(data, value, dataKey) {\n  const valueDataKey = dataValue(value, dataKey);\n  let idx = -1;\n\n  while (++idx < data.length) {\n    const datum = data[idx];\n    if (datum === value || dataValue(datum, dataKey) === valueDataKey) return idx;\n  }\n\n  return -1;\n}\n\nfunction dataItem(data, value, dataKey) {\n  const idx = dataIndexOf(data, value, dataKey); // This isn't strictly safe, but we want to allow items that aren't in the list\n\n  return idx !== -1 ? data[idx] : value;\n}\n\nconst useAccessors = (textField, dataKey) => {\n  return (0, _react.useMemo)(() => ({\n    text: item => dataText(item, textField),\n    value: item => dataValue(item, dataKey),\n    indexOf: (data, value) => dataIndexOf(data, value, dataKey),\n    matches: (a, b) => valueMatcher(a, b, dataKey),\n    findOrSelf: (data, value) => dataItem(data, value, dataKey),\n    includes: (data, value) => dataIndexOf(data, value, dataKey) !== -1\n  }), [textField, dataKey]);\n};\n\nexports.useAccessors = useAccessors;"]},"metadata":{},"sourceType":"script"}