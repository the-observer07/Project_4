{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\n\nvar _regeneratorRuntime = require(\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _classCallCheck = require(\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nvar BottleneckError, IORedisConnection, RedisConnection, RedisDatastore, parser;\nparser = require(\"./parser\");\nBottleneckError = require(\"./BottleneckError\");\nRedisConnection = require(\"./RedisConnection\");\nIORedisConnection = require(\"./IORedisConnection\");\n\nRedisDatastore = /*#__PURE__*/function () {\n  function RedisDatastore(instance, storeOptions, storeInstanceOptions) {\n    var _this10 = this;\n\n    _classCallCheck(this, RedisDatastore);\n\n    this.instance = instance;\n    this.storeOptions = storeOptions;\n    this.originalId = this.instance.id;\n    this.clientId = this.instance._randomIndex();\n    parser.load(storeInstanceOptions, storeInstanceOptions, this);\n    this.clients = {};\n    this.capacityPriorityCounters = {};\n    this.sharedConnection = this.connection != null;\n\n    if (this.connection == null) {\n      this.connection = this.instance.datastore === \"redis\" ? new RedisConnection({\n        Redis: this.Redis,\n        clientOptions: this.clientOptions,\n        Promise: this.Promise,\n        Events: this.instance.Events\n      }) : this.instance.datastore === \"ioredis\" ? new IORedisConnection({\n        Redis: this.Redis,\n        clientOptions: this.clientOptions,\n        clusterNodes: this.clusterNodes,\n        Promise: this.Promise,\n        Events: this.instance.Events\n      }) : void 0;\n    }\n\n    this.instance.connection = this.connection;\n    this.instance.datastore = this.connection.datastore;\n    this.ready = this.connection.ready.then(function (clients) {\n      _this10.clients = clients;\n      return _this10.runScript(\"init\", _this10.prepareInitSettings(_this10.clearDatastore));\n    }).then(function () {\n      return _this10.connection.__addLimiter__(_this10.instance);\n    }).then(function () {\n      return _this10.runScript(\"register_client\", [_this10.instance.queued()]);\n    }).then(function () {\n      var base;\n\n      if (typeof (base = _this10.heartbeat = setInterval(function () {\n        return _this10.runScript(\"heartbeat\", []).catch(function (e) {\n          return _this10.instance.Events.trigger(\"error\", e);\n        });\n      }, _this10.heartbeatInterval)).unref === \"function\") {\n        base.unref();\n      }\n\n      return _this10.clients;\n    });\n  }\n\n  _createClass(RedisDatastore, [{\n    key: \"__publish__\",\n    value: function __publish__(message) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var client, _ref;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.ready;\n\n              case 2:\n                _ref = _context.sent;\n                client = _ref.client;\n                return _context.abrupt(\"return\", client.publish(_this.instance.channel(), \"message:\".concat(message.toString())));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(channel, message) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var capacity, counter, data, drained, e, newCapacity, pos, priorityClient, rawCapacity, type, _ref2, _data$split, _data$split2;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                pos = message.indexOf(\":\");\n                _ref2 = [message.slice(0, pos), message.slice(pos + 1)];\n                type = _ref2[0];\n                data = _ref2[1];\n\n                if (!(type === \"capacity\")) {\n                  _context3.next = 11;\n                  break;\n                }\n\n                _context3.next = 8;\n                return _this2.instance._drainAll(data.length > 0 ? ~~data : void 0);\n\n              case 8:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 11:\n                if (!(type === \"capacity-priority\")) {\n                  _context3.next = 37;\n                  break;\n                }\n\n                _data$split = data.split(\":\");\n                _data$split2 = _slicedToArray(_data$split, 3);\n                rawCapacity = _data$split2[0];\n                priorityClient = _data$split2[1];\n                counter = _data$split2[2];\n                capacity = rawCapacity.length > 0 ? ~~rawCapacity : void 0;\n\n                if (!(priorityClient === _this2.clientId)) {\n                  _context3.next = 28;\n                  break;\n                }\n\n                _context3.next = 21;\n                return _this2.instance._drainAll(capacity);\n\n              case 21:\n                drained = _context3.sent;\n                newCapacity = capacity != null ? capacity - (drained || 0) : \"\";\n                _context3.next = 25;\n                return _this2.clients.client.publish(_this2.instance.channel(), \"capacity-priority:\".concat(newCapacity, \"::\").concat(counter));\n\n              case 25:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 28:\n                if (!(priorityClient === \"\")) {\n                  _context3.next = 34;\n                  break;\n                }\n\n                clearTimeout(_this2.capacityPriorityCounters[counter]);\n                delete _this2.capacityPriorityCounters[counter];\n                return _context3.abrupt(\"return\", _this2.instance._drainAll(capacity));\n\n              case 34:\n                return _context3.abrupt(\"return\", _this2.capacityPriorityCounters[counter] = setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                  var e;\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          _context2.prev = 0;\n                          delete _this2.capacityPriorityCounters[counter];\n                          _context2.next = 4;\n                          return _this2.runScript(\"blacklist_client\", [priorityClient]);\n\n                        case 4:\n                          _context2.next = 6;\n                          return _this2.instance._drainAll(capacity);\n\n                        case 6:\n                          return _context2.abrupt(\"return\", _context2.sent);\n\n                        case 9:\n                          _context2.prev = 9;\n                          _context2.t0 = _context2[\"catch\"](0);\n                          e = _context2.t0;\n                          return _context2.abrupt(\"return\", _this2.instance.Events.trigger(\"error\", e));\n\n                        case 13:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2, null, [[0, 9]]);\n                })), 1000));\n\n              case 35:\n                _context3.next = 45;\n                break;\n\n              case 37:\n                if (!(type === \"message\")) {\n                  _context3.next = 41;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", _this2.instance.Events.trigger(\"message\", data));\n\n              case 41:\n                if (!(type === \"blocked\")) {\n                  _context3.next = 45;\n                  break;\n                }\n\n                _context3.next = 44;\n                return _this2.instance._dropAllQueued();\n\n              case 44:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 45:\n                _context3.next = 51;\n                break;\n\n              case 47:\n                _context3.prev = 47;\n                _context3.t0 = _context3[\"catch\"](0);\n                e = _context3.t0;\n                return _context3.abrupt(\"return\", _this2.instance.Events.trigger(\"error\", e));\n\n              case 51:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 47]]);\n      }))();\n    }\n  }, {\n    key: \"__disconnect__\",\n    value: function __disconnect__(flush) {\n      clearInterval(this.heartbeat);\n\n      if (this.sharedConnection) {\n        return this.connection.__removeLimiter__(this.instance);\n      } else {\n        return this.connection.disconnect(flush);\n      }\n    }\n  }, {\n    key: \"runScript\",\n    value: function runScript(name, args) {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (name === \"init\" || name === \"register_client\") {\n                  _context4.next = 3;\n                  break;\n                }\n\n                _context4.next = 3;\n                return _this3.ready;\n\n              case 3:\n                return _context4.abrupt(\"return\", new _this3.Promise(function (resolve, reject) {\n                  var all_args, arr;\n                  all_args = [Date.now(), _this3.clientId].concat(args);\n\n                  _this3.instance.Events.trigger(\"debug\", \"Calling Redis script: \".concat(name, \".lua\"), all_args);\n\n                  arr = _this3.connection.__scriptArgs__(name, _this3.originalId, all_args, function (err, replies) {\n                    if (err != null) {\n                      return reject(err);\n                    }\n\n                    return resolve(replies);\n                  });\n                  return _this3.connection.__scriptFn__(name).apply(void 0, _toConsumableArray(arr));\n                }).catch(function (e) {\n                  if (e.message === \"SETTINGS_KEY_NOT_FOUND\") {\n                    if (name === \"heartbeat\") {\n                      return _this3.Promise.resolve();\n                    } else {\n                      return _this3.runScript(\"init\", _this3.prepareInitSettings(false)).then(function () {\n                        return _this3.runScript(name, args);\n                      });\n                    }\n                  } else if (e.message === \"UNKNOWN_CLIENT\") {\n                    return _this3.runScript(\"register_client\", [_this3.instance.queued()]).then(function () {\n                      return _this3.runScript(name, args);\n                    });\n                  } else {\n                    return _this3.Promise.reject(e);\n                  }\n                }));\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    }\n  }, {\n    key: \"prepareArray\",\n    value: function prepareArray(arr) {\n      var i, len, results, x;\n      results = [];\n\n      for (i = 0, len = arr.length; i < len; i++) {\n        x = arr[i];\n        results.push(x != null ? x.toString() : \"\");\n      }\n\n      return results;\n    }\n  }, {\n    key: \"prepareObject\",\n    value: function prepareObject(obj) {\n      var arr, k, v;\n      arr = [];\n\n      for (k in obj) {\n        v = obj[k];\n        arr.push(k, v != null ? v.toString() : \"\");\n      }\n\n      return arr;\n    }\n  }, {\n    key: \"prepareInitSettings\",\n    value: function prepareInitSettings(clear) {\n      var args;\n      args = this.prepareObject(Object.assign({}, this.storeOptions, {\n        id: this.originalId,\n        version: this.instance.version,\n        groupTimeout: this.timeout,\n        clientTimeout: this.clientTimeout\n      }));\n      args.unshift(clear ? 1 : 0, this.instance.version);\n      return args;\n    }\n  }, {\n    key: \"convertBool\",\n    value: function convertBool(b) {\n      return !!b;\n    }\n  }, {\n    key: \"__updateSettings__\",\n    value: function __updateSettings__(options) {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return _this4.runScript(\"update_settings\", _this4.prepareObject(options));\n\n              case 2:\n                return _context5.abrupt(\"return\", parser.overwrite(options, options, _this4.storeOptions));\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    }\n  }, {\n    key: \"__running__\",\n    value: function __running__() {\n      return this.runScript(\"running\", []);\n    }\n  }, {\n    key: \"__queued__\",\n    value: function __queued__() {\n      return this.runScript(\"queued\", []);\n    }\n  }, {\n    key: \"__done__\",\n    value: function __done__() {\n      return this.runScript(\"done\", []);\n    }\n  }, {\n    key: \"__groupCheck__\",\n    value: function __groupCheck__() {\n      var _this5 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.t0 = _this5;\n                _context6.next = 3;\n                return _this5.runScript(\"group_check\", []);\n\n              case 3:\n                _context6.t1 = _context6.sent;\n                return _context6.abrupt(\"return\", _context6.t0.convertBool.call(_context6.t0, _context6.t1));\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    }\n  }, {\n    key: \"__incrementReservoir__\",\n    value: function __incrementReservoir__(incr) {\n      return this.runScript(\"increment_reservoir\", [incr]);\n    }\n  }, {\n    key: \"__currentReservoir__\",\n    value: function __currentReservoir__() {\n      return this.runScript(\"current_reservoir\", []);\n    }\n  }, {\n    key: \"__check__\",\n    value: function __check__(weight) {\n      var _this6 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.t0 = _this6;\n                _context7.next = 3;\n                return _this6.runScript(\"check\", _this6.prepareArray([weight]));\n\n              case 3:\n                _context7.t1 = _context7.sent;\n                return _context7.abrupt(\"return\", _context7.t0.convertBool.call(_context7.t0, _context7.t1));\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    }\n  }, {\n    key: \"__register__\",\n    value: function __register__(index, weight, expiration) {\n      var _this7 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var reservoir, success, wait, _ref4, _ref5;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return _this7.runScript(\"register\", _this7.prepareArray([index, weight, expiration]));\n\n              case 2:\n                _ref4 = _context8.sent;\n                _ref5 = _slicedToArray(_ref4, 3);\n                success = _ref5[0];\n                wait = _ref5[1];\n                reservoir = _ref5[2];\n                return _context8.abrupt(\"return\", {\n                  success: _this7.convertBool(success),\n                  wait: wait,\n                  reservoir: reservoir\n                });\n\n              case 8:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }))();\n    }\n  }, {\n    key: \"__submit__\",\n    value: function __submit__(queueLength, weight) {\n      var _this8 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var blocked, e, maxConcurrent, overweight, reachedHWM, strategy, _ref6, _ref7, _e$message$split, _e$message$split2;\n\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.prev = 0;\n                _context9.next = 3;\n                return _this8.runScript(\"submit\", _this8.prepareArray([queueLength, weight]));\n\n              case 3:\n                _ref6 = _context9.sent;\n                _ref7 = _slicedToArray(_ref6, 3);\n                reachedHWM = _ref7[0];\n                blocked = _ref7[1];\n                strategy = _ref7[2];\n                return _context9.abrupt(\"return\", {\n                  reachedHWM: _this8.convertBool(reachedHWM),\n                  blocked: _this8.convertBool(blocked),\n                  strategy: strategy\n                });\n\n              case 11:\n                _context9.prev = 11;\n                _context9.t0 = _context9[\"catch\"](0);\n                e = _context9.t0;\n\n                if (!(e.message.indexOf(\"OVERWEIGHT\") === 0)) {\n                  _context9.next = 23;\n                  break;\n                }\n\n                _e$message$split = e.message.split(\":\");\n                _e$message$split2 = _slicedToArray(_e$message$split, 3);\n                overweight = _e$message$split2[0];\n                weight = _e$message$split2[1];\n                maxConcurrent = _e$message$split2[2];\n                throw new BottleneckError(\"Impossible to add a job having a weight of \".concat(weight, \" to a limiter having a maxConcurrent setting of \").concat(maxConcurrent));\n\n              case 23:\n                throw e;\n\n              case 24:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, null, [[0, 11]]);\n      }))();\n    }\n  }, {\n    key: \"__free__\",\n    value: function __free__(index, weight) {\n      var _this9 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        var running;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return _this9.runScript(\"free\", _this9.prepareArray([index]));\n\n              case 2:\n                running = _context10.sent;\n                return _context10.abrupt(\"return\", {\n                  running: running\n                });\n\n              case 4:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }))();\n    }\n  }]);\n\n  return RedisDatastore;\n}();\n\nmodule.exports = RedisDatastore;","map":{"version":3,"sources":["/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/bottleneck/lib/RedisDatastore.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","Array","isArray","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","BottleneckError","IORedisConnection","RedisConnection","RedisDatastore","parser","require","instance","storeOptions","storeInstanceOptions","originalId","id","clientId","_randomIndex","load","clients","capacityPriorityCounters","sharedConnection","connection","datastore","Redis","clientOptions","Events","clusterNodes","ready","runScript","prepareInitSettings","clearDatastore","__addLimiter__","queued","base","heartbeat","setInterval","catch","e","trigger","heartbeatInterval","unref","message","_this","_ref","client","publish","channel","toString","_this2","pos","indexOf","_ref2","slice","type","data","_drainAll","_data$split","split","_data$split2","rawCapacity","priorityClient","counter","capacity","drained","newCapacity","clearTimeout","setTimeout","_dropAllQueued","flush","clearInterval","__removeLimiter__","disconnect","name","_this3","all_args","Date","now","concat","__scriptArgs__","replies","__scriptFn__","len","results","x","obj","k","v","clear","prepareObject","Object","assign","version","groupTimeout","timeout","clientTimeout","unshift","b","options","_this4","overwrite","_this5","convertBool","incr","weight","_this6","prepareArray","index","expiration","_this7","_ref4","_ref5","success","wait","reservoir","queueLength","_this8","_ref6","_ref7","reachedHWM","blocked","strategy","_e$message$split","_e$message$split2","overweight","maxConcurrent","_this9","running","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar BottleneckError, IORedisConnection, RedisConnection, RedisDatastore, parser;\nparser = require(\"./parser\");\nBottleneckError = require(\"./BottleneckError\");\nRedisConnection = require(\"./RedisConnection\");\nIORedisConnection = require(\"./IORedisConnection\");\nRedisDatastore = class RedisDatastore {\n  constructor(instance, storeOptions, storeInstanceOptions) {\n    this.instance = instance;\n    this.storeOptions = storeOptions;\n    this.originalId = this.instance.id;\n    this.clientId = this.instance._randomIndex();\n    parser.load(storeInstanceOptions, storeInstanceOptions, this);\n    this.clients = {};\n    this.capacityPriorityCounters = {};\n    this.sharedConnection = this.connection != null;\n\n    if (this.connection == null) {\n      this.connection = this.instance.datastore === \"redis\" ? new RedisConnection({\n        Redis: this.Redis,\n        clientOptions: this.clientOptions,\n        Promise: this.Promise,\n        Events: this.instance.Events\n      }) : this.instance.datastore === \"ioredis\" ? new IORedisConnection({\n        Redis: this.Redis,\n        clientOptions: this.clientOptions,\n        clusterNodes: this.clusterNodes,\n        Promise: this.Promise,\n        Events: this.instance.Events\n      }) : void 0;\n    }\n\n    this.instance.connection = this.connection;\n    this.instance.datastore = this.connection.datastore;\n    this.ready = this.connection.ready.then(clients => {\n      this.clients = clients;\n      return this.runScript(\"init\", this.prepareInitSettings(this.clearDatastore));\n    }).then(() => {\n      return this.connection.__addLimiter__(this.instance);\n    }).then(() => {\n      return this.runScript(\"register_client\", [this.instance.queued()]);\n    }).then(() => {\n      var base;\n\n      if (typeof (base = this.heartbeat = setInterval(() => {\n        return this.runScript(\"heartbeat\", []).catch(e => {\n          return this.instance.Events.trigger(\"error\", e);\n        });\n      }, this.heartbeatInterval)).unref === \"function\") {\n        base.unref();\n      }\n\n      return this.clients;\n    });\n  }\n\n  __publish__(message) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var client;\n\n      var _ref = yield _this.ready;\n\n      client = _ref.client;\n      return client.publish(_this.instance.channel(), `message:${message.toString()}`);\n    })();\n  }\n\n  onMessage(channel, message) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      var capacity, counter, data, drained, e, newCapacity, pos, priorityClient, rawCapacity, type;\n\n      try {\n        pos = message.indexOf(\":\");\n        var _ref2 = [message.slice(0, pos), message.slice(pos + 1)];\n        type = _ref2[0];\n        data = _ref2[1];\n\n        if (type === \"capacity\") {\n          return yield _this2.instance._drainAll(data.length > 0 ? ~~data : void 0);\n        } else if (type === \"capacity-priority\") {\n          var _data$split = data.split(\":\");\n\n          var _data$split2 = _slicedToArray(_data$split, 3);\n\n          rawCapacity = _data$split2[0];\n          priorityClient = _data$split2[1];\n          counter = _data$split2[2];\n          capacity = rawCapacity.length > 0 ? ~~rawCapacity : void 0;\n\n          if (priorityClient === _this2.clientId) {\n            drained = yield _this2.instance._drainAll(capacity);\n            newCapacity = capacity != null ? capacity - (drained || 0) : \"\";\n            return yield _this2.clients.client.publish(_this2.instance.channel(), `capacity-priority:${newCapacity}::${counter}`);\n          } else if (priorityClient === \"\") {\n            clearTimeout(_this2.capacityPriorityCounters[counter]);\n            delete _this2.capacityPriorityCounters[counter];\n            return _this2.instance._drainAll(capacity);\n          } else {\n            return _this2.capacityPriorityCounters[counter] = setTimeout(\n            /*#__PURE__*/\n            _asyncToGenerator(function* () {\n              var e;\n\n              try {\n                delete _this2.capacityPriorityCounters[counter];\n                yield _this2.runScript(\"blacklist_client\", [priorityClient]);\n                return yield _this2.instance._drainAll(capacity);\n              } catch (error) {\n                e = error;\n                return _this2.instance.Events.trigger(\"error\", e);\n              }\n            }), 1000);\n          }\n        } else if (type === \"message\") {\n          return _this2.instance.Events.trigger(\"message\", data);\n        } else if (type === \"blocked\") {\n          return yield _this2.instance._dropAllQueued();\n        }\n      } catch (error) {\n        e = error;\n        return _this2.instance.Events.trigger(\"error\", e);\n      }\n    })();\n  }\n\n  __disconnect__(flush) {\n    clearInterval(this.heartbeat);\n\n    if (this.sharedConnection) {\n      return this.connection.__removeLimiter__(this.instance);\n    } else {\n      return this.connection.disconnect(flush);\n    }\n  }\n\n  runScript(name, args) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (!(name === \"init\" || name === \"register_client\")) {\n        yield _this3.ready;\n      }\n\n      return new _this3.Promise((resolve, reject) => {\n        var all_args, arr;\n        all_args = [Date.now(), _this3.clientId].concat(args);\n\n        _this3.instance.Events.trigger(\"debug\", `Calling Redis script: ${name}.lua`, all_args);\n\n        arr = _this3.connection.__scriptArgs__(name, _this3.originalId, all_args, function (err, replies) {\n          if (err != null) {\n            return reject(err);\n          }\n\n          return resolve(replies);\n        });\n        return _this3.connection.__scriptFn__(name)(...arr);\n      }).catch(e => {\n        if (e.message === \"SETTINGS_KEY_NOT_FOUND\") {\n          if (name === \"heartbeat\") {\n            return _this3.Promise.resolve();\n          } else {\n            return _this3.runScript(\"init\", _this3.prepareInitSettings(false)).then(() => {\n              return _this3.runScript(name, args);\n            });\n          }\n        } else if (e.message === \"UNKNOWN_CLIENT\") {\n          return _this3.runScript(\"register_client\", [_this3.instance.queued()]).then(() => {\n            return _this3.runScript(name, args);\n          });\n        } else {\n          return _this3.Promise.reject(e);\n        }\n      });\n    })();\n  }\n\n  prepareArray(arr) {\n    var i, len, results, x;\n    results = [];\n\n    for (i = 0, len = arr.length; i < len; i++) {\n      x = arr[i];\n      results.push(x != null ? x.toString() : \"\");\n    }\n\n    return results;\n  }\n\n  prepareObject(obj) {\n    var arr, k, v;\n    arr = [];\n\n    for (k in obj) {\n      v = obj[k];\n      arr.push(k, v != null ? v.toString() : \"\");\n    }\n\n    return arr;\n  }\n\n  prepareInitSettings(clear) {\n    var args;\n    args = this.prepareObject(Object.assign({}, this.storeOptions, {\n      id: this.originalId,\n      version: this.instance.version,\n      groupTimeout: this.timeout,\n      clientTimeout: this.clientTimeout\n    }));\n    args.unshift(clear ? 1 : 0, this.instance.version);\n    return args;\n  }\n\n  convertBool(b) {\n    return !!b;\n  }\n\n  __updateSettings__(options) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this4.runScript(\"update_settings\", _this4.prepareObject(options));\n      return parser.overwrite(options, options, _this4.storeOptions);\n    })();\n  }\n\n  __running__() {\n    return this.runScript(\"running\", []);\n  }\n\n  __queued__() {\n    return this.runScript(\"queued\", []);\n  }\n\n  __done__() {\n    return this.runScript(\"done\", []);\n  }\n\n  __groupCheck__() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this5.convertBool((yield _this5.runScript(\"group_check\", [])));\n    })();\n  }\n\n  __incrementReservoir__(incr) {\n    return this.runScript(\"increment_reservoir\", [incr]);\n  }\n\n  __currentReservoir__() {\n    return this.runScript(\"current_reservoir\", []);\n  }\n\n  __check__(weight) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this6.convertBool((yield _this6.runScript(\"check\", _this6.prepareArray([weight]))));\n    })();\n  }\n\n  __register__(index, weight, expiration) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      var reservoir, success, wait;\n\n      var _ref4 = yield _this7.runScript(\"register\", _this7.prepareArray([index, weight, expiration]));\n\n      var _ref5 = _slicedToArray(_ref4, 3);\n\n      success = _ref5[0];\n      wait = _ref5[1];\n      reservoir = _ref5[2];\n      return {\n        success: _this7.convertBool(success),\n        wait,\n        reservoir\n      };\n    })();\n  }\n\n  __submit__(queueLength, weight) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      var blocked, e, maxConcurrent, overweight, reachedHWM, strategy;\n\n      try {\n        var _ref6 = yield _this8.runScript(\"submit\", _this8.prepareArray([queueLength, weight]));\n\n        var _ref7 = _slicedToArray(_ref6, 3);\n\n        reachedHWM = _ref7[0];\n        blocked = _ref7[1];\n        strategy = _ref7[2];\n        return {\n          reachedHWM: _this8.convertBool(reachedHWM),\n          blocked: _this8.convertBool(blocked),\n          strategy\n        };\n      } catch (error) {\n        e = error;\n\n        if (e.message.indexOf(\"OVERWEIGHT\") === 0) {\n          var _e$message$split = e.message.split(\":\");\n\n          var _e$message$split2 = _slicedToArray(_e$message$split, 3);\n\n          overweight = _e$message$split2[0];\n          weight = _e$message$split2[1];\n          maxConcurrent = _e$message$split2[2];\n          throw new BottleneckError(`Impossible to add a job having a weight of ${weight} to a limiter having a maxConcurrent setting of ${maxConcurrent}`);\n        } else {\n          throw e;\n        }\n      }\n    })();\n  }\n\n  __free__(index, weight) {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      var running;\n      running = yield _this9.runScript(\"free\", _this9.prepareArray([index]));\n      return {\n        running\n      };\n    })();\n  }\n\n};\nmodule.exports = RedisDatastore;"]},"metadata":{},"sourceType":"script"}