{"ast":null,"code":"var _jsxFileName = \"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Crypto.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Crypto = () => {\n  _s();\n\n  const cryptoList = [];\n  const [query, setQuery] = useState(\"\");\n  const [type, setType] = useState(\"\"); // ForexAPI\n\n  const forexAPI = `http://apilayer.net/api/live?access_key=b7bf0fb87af0b9ef3ff79b78a423f76c&currencies=${query}&source=USD&format=1`;\n\n  const makeApiCall = async () => {\n    const res = await fetch(forexAPI);\n    const rawData = await res.json(); // console.log(rawData);\n\n    const rawDataArray = [rawData]; // console.log(rawDataArray);\n\n    const sortForex = forexList.map(chicken => {\n      return {\n        CountryName: chicken.name\n      };\n    });\n    setForexType(sortForex);\n    const filteredData = rawDataArray.map(duck => {\n      return {\n        price: duck.data.rates,\n        unit: duck.data.unit\n      };\n    });\n    setType(filteredData);\n  }; // console.log(type);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select a token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropdownList, {\n      data: cryptoToken // forex={forexList}\n      ,\n      onChange: nextValue => setQuery(nextValue)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: makeApiCall,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Crypto, \"840ckwDJ7J5xghdMzNM9N20JokI=\");\n\n_c = Crypto;\nexport default Crypto;\n\nvar _c;\n\n$RefreshReg$(_c, \"Crypto\");","map":{"version":3,"sources":["/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Crypto.js"],"names":["React","useState","useEffect","Crypto","cryptoList","query","setQuery","type","setType","forexAPI","makeApiCall","res","fetch","rawData","json","rawDataArray","sortForex","forexList","map","chicken","CountryName","name","setForexType","filteredData","duck","price","data","rates","unit","cryptoToken","nextValue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,UAAU,GAAG,EAAnB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC,CAHmB,CAKnB;;AAEA,QAAMQ,QAAQ,GAAI,uFAAsFJ,KAAM,sBAA9G;;AAEA,QAAMK,WAAW,GAAG,YAAY;AAC9B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACH,QAAD,CAAvB;AACA,UAAMI,OAAO,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAtB,CAF8B,CAI9B;;AAEA,UAAMC,YAAY,GAAG,CAACF,OAAD,CAArB,CAN8B,CAQ9B;;AAEA,UAAMG,SAAS,GAAGC,SAAS,CAACC,GAAV,CAAeC,OAAD,IAAa;AAC3C,aAAO;AACLC,QAAAA,WAAW,EAAED,OAAO,CAACE;AADhB,OAAP;AAGD,KAJiB,CAAlB;AAKAC,IAAAA,YAAY,CAACN,SAAD,CAAZ;AAEA,UAAMO,YAAY,GAAGR,YAAY,CAACG,GAAb,CAAkBM,IAAD,IAAU;AAC9C,aAAO;AACLC,QAAAA,KAAK,EAAED,IAAI,CAACE,IAAL,CAAUC,KADZ;AAELC,QAAAA,IAAI,EAAEJ,IAAI,CAACE,IAAL,CAAUE;AAFX,OAAP;AAID,KALoB,CAArB;AAMApB,IAAAA,OAAO,CAACe,YAAD,CAAP;AACD,GAxBD,CATmB,CAkCnB;;;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AACE,MAAA,IAAI,EAAEM,WADR,CAEE;AAFF;AAGE,MAAA,QAAQ,EAAGC,SAAD,IAAexB,QAAQ,CAACwB,SAAD;AAHnC;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAQ,MAAA,OAAO,EAAEpB,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAhDD;;GAAMP,M;;KAAAA,M;AAkDN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Crypto = () => {\n  const cryptoList = [];\n  const [query, setQuery] = useState(\"\");\n  const [type, setType] = useState(\"\");\n\n  // ForexAPI\n\n  const forexAPI = `http://apilayer.net/api/live?access_key=b7bf0fb87af0b9ef3ff79b78a423f76c&currencies=${query}&source=USD&format=1`;\n\n  const makeApiCall = async () => {\n    const res = await fetch(forexAPI);\n    const rawData = await res.json();\n\n    // console.log(rawData);\n\n    const rawDataArray = [rawData];\n\n    // console.log(rawDataArray);\n\n    const sortForex = forexList.map((chicken) => {\n      return {\n        CountryName: chicken.name,\n      };\n    });\n    setForexType(sortForex);\n\n    const filteredData = rawDataArray.map((duck) => {\n      return {\n        price: duck.data.rates,\n        unit: duck.data.unit,\n      };\n    });\n    setType(filteredData);\n  };\n  // console.log(type);\n\n  return (\n    <div>\n      <h2>Select a token</h2>\n      <DropdownList\n        data={cryptoToken}\n        // forex={forexList}\n        onChange={(nextValue) => setQuery(nextValue)}\n      />\n      <button onClick={makeApiCall}>Submit</button>\n      {/* <Result type={type} /> */}\n    </div>\n  );\n};\n\nexport default Crypto;\n"]},"metadata":{},"sourceType":"module"}