{"ast":null,"code":"import _asyncToGenerator from\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/inspireadmin/Documents/GitHub/Project_2/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect}from\"react\";import{DropdownList,SlideTransitionGroup}from\"react-widgets/cjs\";// import Result from \"./Result\";\nimport AggregateInput from\"./AggregateInput\";import{Button,Container,Row,Col}from\"react-bootstrap\";// import Commodity from \"./Commodity\";\nimport{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var forexList=[{id:\"AED\",name:\"United Arab Emirates Dirham\"},{id:\"AFN\",name:\"Afghan Afghani\"},{id:\"ALL\",name:\"Albanian Lek\"},{id:\"AMD\",name:\"Armenian Dram\"},{id:\"ANG\",name:\"Netherlands Antillean Guilder\"},{id:\"AOA\",name:\"Angolan Kwanza\"},{id:\"ARS\",name:\"Argentine Peso\"},{id:\"AUD\",name:\"Australian Dollar\"},{id:\"AWG\",name:\"Aruban Florin\"},{id:\"AZN\",name:\"Azerbaijani Manat\"},{id:\"BAM\",name:\"Bosnia-Herzegovina Convertible Mark\"},{id:\"BBD\",name:\"Barbadian Dollar\"},{id:\"BDT\",name:\"Bangladeshi Taka\"},{id:\"BGN\",name:\"Bulgarian Lev\"},{id:\"BHD\",name:\"Bahraini Dinar\"},{id:\"BIF\",name:\"Burundian Franc\"},{id:\"BMD\",name:\"Bermudan Dollar\"},{id:\"BND\",name:\"Brunei Dollar\"},{id:\"BOB\",name:\"Bolivian Boliviano\"},{id:\"BRL\",name:\"Brazilian Real\"},{id:\"BSD\",name:\"Bahamian Dollar\"},{id:\"BTC\",name:\"Bitcoin\"},{id:\"BTN\",name:\"Bhutanese Ngultrum\"},{id:\"BWP\",name:\"Botswanan Pula\"},{id:\"BYR\",name:\"Belarusian Ruble\"},{id:\"BZD\",name:\"Belize Dollar\"},{id:\"CAD\",name:\"Canadian Dollar\"},{id:\"CDF\",name:\"Congolese Franc\"},{id:\"CHF\",name:\"Swiss Franc\"},{id:\"CLF\",name:\"Chilean Unit of Account (UF)\"},{id:\"CLP\",name:\"Chilean Peso\"},{id:\"CNY\",name:\"Chinese Yuan\"},{id:\"COP\",name:\"Colombian Peso\"},{id:\"CRC\",name:\"Costa Rican Colón\"},{id:\"CUC\",name:\"Cuban Convertible Peso\"},{id:\"CUP\",name:\"Cuban Peso\"},{id:\"CVE\",name:\"Cape Verdean Escudo\"},{id:\"CZK\",name:\"Czech Republic Koruna\"},{id:\"DJF\",name:\"Djiboutian Franc\"},{id:\"DKK\",name:\"Danish Krone\"},{id:\"DOP\",name:\"Dominican Peso\"},{id:\"DZD\",name:\"Algerian Dinar\"},{id:\"EGP\",name:\"Egyptian Pound\"},{id:\"ERN\",name:\"Eritrean Nakfa\"},{id:\"ETB\",name:\"Ethiopian Birr\"},{id:\"EUR\",name:\"Euro\"},{id:\"FJD\",name:\"Fijian Dollar\"},{id:\"FKP\",name:\"Falkland Islands Pound\"},{id:\"GBP\",name:\"British Pound Sterling\"},{id:\"GEL\",name:\"Georgian Lari\"},{id:\"GGP\",name:\"Guernsey Pound\"},{id:\"GHS\",name:\"Ghanaian Cedi\"},{id:\"GIP\",name:\"Gibraltar Pound\"},{id:\"GMD\",name:\"Gambian Dalasi\"},{id:\"GNF\",name:\"Guinean Franc\"},{id:\"GTQ\",name:\"Guatemalan Quetzal\"},{id:\"GYD\",name:\"Guyanaese Dollar\"},{id:\"HKD\",name:\"Hong Kong Dollar\"},{id:\"HNL\",name:\"Honduran Lempira\"},{id:\"HRK\",name:\"Croatian Kuna\"},{id:\"HTG\",name:\"Haitian Gourde\"},{id:\"HUF\",name:\"Hungarian Forint\"},{id:\"IDR\",name:\"Indonesian Rupiah\"},{id:\"ILS\",name:\"Israeli New Sheqel\"},{id:\"IMP\",name:\"Manx pound\"},{id:\"INR\",name:\"Indian Rupee\"},{id:\"IQD\",name:\"Iraqi Dinar\"},{id:\"IRR\",name:\"Iranian Rial\"},{id:\"ISK\",name:\"Icelandic Króna\"},{id:\"JEP\",name:\"Jersey Pound\"},{id:\"JMD\",name:\"Jamaican Dollar\"},{id:\"JOD\",name:\"Jordanian Dinar\"},{id:\"JPY\",name:\"Japanese Yen\"},{id:\"KES\",name:\"Kenyan Shilling\"},{id:\"KGS\",name:\"Kyrgystani Som\"},{id:\"KHR\",name:\"Cambodian Riel\"},{id:\"KMF\",name:\"Comorian Franc\"},{id:\"KPW\",name:\"North Korean Won\"},{id:\"KRW\",name:\"South Korean Won\"},{id:\"KWD\",name:\"Kuwaiti Dinar\"},{id:\"KYD\",name:\"Cayman Islands Dollar\"},{id:\"KZT\",name:\"Kazakhstani Tenge\"},{id:\"LAK\",name:\"Laotian Kip\"},{id:\"LBP\",name:\"Lebanese Pound\"},{id:\"LKR\",name:\"Sri Lankan Rupee\"},{id:\"LRD\",name:\"Liberian Dollar\"},{id:\"LSL\",name:\"Lesotho Loti\"},{id:\"LTL\",name:\"Lithuanian Litas\"},{id:\"LVL\",name:\"Latvian Lats\"},{id:\"LYD\",name:\"Libyan Dinar\"},{id:\"MAD\",name:\"Moroccan Dirham\"},{id:\"MDL\",name:\"Moldovan Leu\"},{id:\"MGA\",name:\"Malagasy Ariary\"},{id:\"MKD\",name:\"Macedonian Denar\"},{id:\"MMK\",name:\"Myanma Kyat\"},{id:\"MNT\",name:\"Mongolian Tugrik\"},{id:\"MOP\",name:\"Macanese Pataca\"},{id:\"MRO\",name:\"Mauritanian Ouguiya\"},{id:\"MUR\",name:\"Mauritian Rupee\"},{id:\"MVR\",name:\"Maldivian Rufiyaa\"},{id:\"MWK\",name:\"Malawian Kwacha\"},{id:\"MXN\",name:\"Mexican Peso\"},{id:\"MYR\",name:\"Malaysian Ringgit\"},{id:\"MZN\",name:\"Mozambican Metical\"},{id:\"NAD\",name:\"Namibian Dollar\"},{id:\"NGN\",name:\"Nigerian Naira\"},{id:\"NIO\",name:\"Nicaraguan Córdoba\"},{id:\"NOK\",name:\"Norwegian Krone\"},{id:\"NPR\",name:\"Nepalese Rupee\"},{id:\"NZD\",name:\"New Zealand Dollar\"},{id:\"OMR\",name:\"Omani Rial\"},{id:\"PAB\",name:\"Panamanian Balboa\"},{id:\"PEN\",name:\"Peruvian Nuevo Sol\"},{id:\"PGK\",name:\"Papua New Guinean Kina\"},{id:\"PHP\",name:\"Philippine Peso\"},{id:\"PKR\",name:\"Pakistani Rupee\"},{id:\"PLN\",name:\"Polish Zloty\"},{id:\"PYG\",name:\"Paraguayan Guarani\"},{id:\"QAR\",name:\"Qatari Rial\"},{id:\"RON\",name:\"Romanian Leu\"},{id:\"RSD\",name:\"Serbian Dinar\"},{id:\"RUB\",name:\"Russian Ruble\"},{id:\"RWF\",name:\"Rwandan Franc\"},{id:\"SAR\",name:\"Saudi Riyal\"},{id:\"SBD\",name:\"Solomon Islands Dollar\"},{id:\"SCR\",name:\"Seychellois Rupee\"},{id:\"SDG\",name:\"Sudanese Pound\"},{id:\"SEK\",name:\"Swedish Krona\"},{id:\"SGD\",name:\"Singapore Dollar\"},{id:\"SHP\",name:\"Saint Helena Pound\"},{id:\"SLL\",name:\"Sierra Leonean Leone\"},{id:\"SOS\",name:\"Somali Shilling\"},{id:\"SRD\",name:\"Surinamese Dollar\"},{id:\"STD\",name:\"São Tomé and Príncipe Dobra\"},{id:\"SVC\",name:\"Salvadoran Colón\"},{id:\"SYP\",name:\"Syrian Pound\"},{id:\"SZL\",name:\"Swazi Lilangeni\"},{id:\"THB\",name:\"Thai Baht\"},{id:\"TJS\",name:\"Tajikistani Somoni\"},{id:\"TMT\",name:\"Turkmenistani Manat\"},{id:\"TND\",name:\"Tunisian Dinar\"},{id:\"TOP\",name:\"Tongan Paʻanga\"},{id:\"TRY\",name:\"Turkish Lira\"},{id:\"TTD\",name:\"Trinidad and Tobago Dollar\"},{id:\"TWD\",name:\"New Taiwan Dollar\"},{id:\"TZS\",name:\"Tanzanian Shilling\"},{id:\"UAH\",name:\"Ukrainian Hryvnia\"},{id:\"UGX\",name:\"Ugandan Shilling\"},{id:\"USD\",name:\"United States Dollar\"},{id:\"UYU\",name:\"Uruguayan Peso\"},{id:\"UZS\",name:\"Uzbekistan Som\"},{id:\"VEF\",name:\"Venezuelan Bolívar Fuerte\"},{id:\"VND\",name:\"Vietnamese Dong\"},{id:\"VUV\",name:\"Vanuatu Vatu\"},{id:\"WST\",name:\"Samoan Tala\"},{id:\"XAF\",name:\"CFA Franc BEAC\"},{id:\"XAG\",name:\"Silver (troy ounce)\"},{id:\"XAU\",name:\"Gold (troy ounce)\"},{id:\"XCD\",name:\"East Caribbean Dollar\"},{id:\"XDR\",name:\"Special Drawing Rights\"},{id:\"XOF\",name:\"CFA Franc BCEAO\"},{id:\"XPF\",name:\"CFP Franc\"},{id:\"YER\",name:\"Yemeni Rial\"},{id:\"ZAR\",name:\"South African Rand\"},{id:\"ZMK\",name:\"Zambian Kwacha (pre-2013)\"},{id:\"ZMW\",name:\"Zambian Kwacha\"},{id:\"ZWL\",name:\"Zimbabwean Dollar\"}];var Forex=function Forex(props){var _useState=useState(\"1\"),_useState2=_slicedToArray(_useState,2),forex=_useState2[0],setForex=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),forexType=_useState4[0],setForexType=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),filterData=_useState6[0],setFilterData=_useState6[1];var _useState7=useState(\"1\"),_useState8=_slicedToArray(_useState7,2),numericalInput=_useState8[0],setNumericalInput=_useState8[1];var _useState9=useState(\"USD\"),_useState10=_slicedToArray(_useState9,2),secondaryInput=_useState10[0],setSecondaryInput=_useState10[1];var _useState11=useState(\"1\"),_useState12=_slicedToArray(_useState11,2),secondaryAPIData=_useState12[0],setSecondaryAPIData=_useState12[1];var _useState13=useState(1),_useState14=_slicedToArray(_useState13,2),result=_useState14[0],setResult=_useState14[1];var _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),content=_useState16[0],setContent=_useState16[1];// const [searchWord, setSearchWord] = useState(\"USD\");\nvar _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),extForex=_useState18[0],setExtForex=_useState18[1];var forexAPI=\"http://apilayer.net/api/live?access_key=b7bf0fb87af0b9ef3ff79b78a423f76c&currencies=\".concat(filterData,\"&source=USD&format=1\");var secondaryForexAPI=\"http://apilayer.net/api/live?access_key=b7bf0fb87af0b9ef3ff79b78a423f76c&currencies=\".concat(secondaryInput,\"&source=USD&format=1\");var sortForex=function sortForex(){var sortByName=forexList.map(function(chicken){return{name:chicken.name};});setForexType(sortByName);};useEffect(function(){sortForex();},[]);var emptyArray=[];var displayName=forexType.map(function(chicken){return emptyArray.push(chicken.name);});useEffect(function(){getResults();},[props.forexState]);var getResults=function getResults(){var searchWord=props.forexSearchWord;// console.log(searchWord);\nvar newFilter=Object.keys(forexList).reduce(function(result,key){if(forexList[key].name.includes(searchWord)){result=forexList[key].id;}// props.setForexState(false);\nreturn result;},\"\");setFilterData(newFilter);// console.log(newFilter);\nsetTimeout(function(){makeApiCall(newFilter);},1000);var makeApiCall=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(input){var url,res,rawData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=\"http://apilayer.net/api/live?access_key=b7bf0fb87af0b9ef3ff79b78a423f76c&currencies=\".concat(input,\"&source=USD&format=1\");// console.log(url);\n_context.next=3;return fetch(url);case 3:res=_context.sent;_context.next=6;return res.json();case 6:rawData=_context.sent;setForex(rawData.quotes);// console.log(rawData.quotes);\ncase 8:case\"end\":return _context.stop();}}},_callee);}));return function makeApiCall(_x){return _ref.apply(this,arguments);};}();// makeApiCall(filterData);\n};// console.log(emptyArray);\nvar forexArray=forex;var handleEventChange=function handleEventChange(event){setNumericalInput(event.target.value);};// console.log(numericalInput);\nvar handleSecondaryValueChange=function handleSecondaryValueChange(event){// if ((event = NaN)) {\n//   let searchWord = \"United States Dollar\";\n//   const newFilter = Object.keys(forexList).reduce((result, key) => {\n//     if (forexList[key].name.includes(searchWord)) {\n//       result = forexList[key].id;\n//     }\n//     return result;\n//   }, \"\");\n//   setSecondaryInput(newFilter);\n//   console.log(newFilter);\n// } else {\nvar searchWord=event;console.log(searchWord);var newFilter=Object.keys(forexList).reduce(function(result,key){if(forexList[key].name.includes(searchWord)){result=forexList[key].id;}return result;},\"\");setSecondaryInput(newFilter);console.log(secondaryInput);setTimeout(function(){makeSecondaryApiCall(newFilter);},1000);var makeSecondaryApiCall=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(input){var url,res,rawData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:url=\"http://apilayer.net/api/live?access_key=b7bf0fb87af0b9ef3ff79b78a423f76c&currencies=\".concat(input,\"&source=USD&format=1\");_context2.next=3;return fetch(url);case 3:res=_context2.sent;_context2.next=6;return res.json();case 6:rawData=_context2.sent;setSecondaryAPIData(rawData.quotes);console.log(rawData.quotes);case 9:case\"end\":return _context2.stop();}}},_callee2);}));return function makeSecondaryApiCall(_x2){return _ref2.apply(this,arguments);};}();};// console.log(secondaryForexAPI);\n// makeSecondaryApiCall(secondaryInput);\n// console.log(rawData.quotes);\nvar onSubmit=function onSubmit(){console.log(\"clicked!\");console.log(Object.values(secondaryAPIData)[0]);console.log(secondaryAPIData!==\"undefined\");console.log(Object.values(forex)[0]);if(secondaryAPIData!==\"undefined\"){console.log(forexAPI);// console.log(Object.values(secondaryAPIData)[0]);\nsetSecondaryAPIData(\"1\");var num1=parseInt(secondaryAPIData);var num2=parseInt(numericalInput);var num3=Object.values(forex)[0];console.log(num3);console.log(num1,num2,num3);var ratio=num3/num1*num2;// console.log(\n//   (Object.values(forex)[0] / Object.values(secondaryAPIData)[0]) *\n//     numericalInput\n// );\nsetResult(ratio);var rounded=result.toFixed(2);console.log(rounded);// console.log(typeof Object.values(extForex)[0]);\nsetContent(/*#__PURE__*/_jsxs(\"p\",{children:[\"$\",numericalInput,\" \",secondaryInput,\" = $\",rounded,\" \",filterData]}));//   } else {\n//     let num1 = parseInt(secondaryAPIData);\n//     let num2 = parseInt(numericalInput);\n//     let num3 = Object.values(forex)[0];\n//     const ratio = (num1 / num3) * num2;\n//     setResult(ratio);\n//     // console.log(typeof Object.values(secondaryAPIData)[0]);\n//     // console.log(ratio);\n//     setContent(\n//       <p>\n//         $ {numericalInput} {filterData} = $ {result} {secondaryInput}\n//       </p>\n//     );\n}};// console.log(result);\n// <div className=\"data\">\n//   {Object.keys(forexArray).map((key, i) => (\n//     <p key={i}>\n//       {/* <span>1USD:{key}</span> */}\n//       <span>\n//         ${numericalInput} {secondaryInput} = ${forexArray[key]}\n//         {filterData}\n//       </span>\n//     </p>\n//   ))}\n// </div>;\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Button,{size:\"lg\",onClick:onSubmit,children:\"Submit\"}),\" \",/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Input value\",onChange:handleEventChange,defaultValue:\"1\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(DropdownList,{data:emptyArray,defaultValue:\"United States Dollar\",onChange:handleSecondaryValueChange// onClick={makeSecondaryApiCall}\n}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"result\",children:content}),/*#__PURE__*/_jsx(\"br\",{})]});};export default Forex;","map":{"version":3,"sources":["/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Forex.js"],"names":["React","useState","useEffect","DropdownList","SlideTransitionGroup","AggregateInput","Button","Container","Row","Col","forexList","id","name","Forex","props","forex","setForex","forexType","setForexType","filterData","setFilterData","numericalInput","setNumericalInput","secondaryInput","setSecondaryInput","secondaryAPIData","setSecondaryAPIData","result","setResult","content","setContent","extForex","setExtForex","forexAPI","secondaryForexAPI","sortForex","sortByName","map","chicken","emptyArray","displayName","push","getResults","forexState","searchWord","forexSearchWord","newFilter","Object","keys","reduce","key","includes","setTimeout","makeApiCall","input","url","fetch","res","json","rawData","quotes","forexArray","handleEventChange","event","target","value","handleSecondaryValueChange","console","log","makeSecondaryApiCall","onSubmit","values","num1","parseInt","num2","num3","ratio","rounded","toFixed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { DropdownList, SlideTransitionGroup } from \"react-widgets/cjs\";\n// import Result from \"./Result\";\nimport AggregateInput from \"./AggregateInput\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\n// import Commodity from \"./Commodity\";\n\nconst forexList = [\n  { id: \"AED\", name: \"United Arab Emirates Dirham\" },\n  { id: \"AFN\", name: \"Afghan Afghani\" },\n  { id: \"ALL\", name: \"Albanian Lek\" },\n  { id: \"AMD\", name: \"Armenian Dram\" },\n  { id: \"ANG\", name: \"Netherlands Antillean Guilder\" },\n  { id: \"AOA\", name: \"Angolan Kwanza\" },\n  { id: \"ARS\", name: \"Argentine Peso\" },\n  { id: \"AUD\", name: \"Australian Dollar\" },\n  { id: \"AWG\", name: \"Aruban Florin\" },\n  { id: \"AZN\", name: \"Azerbaijani Manat\" },\n  { id: \"BAM\", name: \"Bosnia-Herzegovina Convertible Mark\" },\n  { id: \"BBD\", name: \"Barbadian Dollar\" },\n  { id: \"BDT\", name: \"Bangladeshi Taka\" },\n  { id: \"BGN\", name: \"Bulgarian Lev\" },\n  { id: \"BHD\", name: \"Bahraini Dinar\" },\n  { id: \"BIF\", name: \"Burundian Franc\" },\n  { id: \"BMD\", name: \"Bermudan Dollar\" },\n  { id: \"BND\", name: \"Brunei Dollar\" },\n  { id: \"BOB\", name: \"Bolivian Boliviano\" },\n  { id: \"BRL\", name: \"Brazilian Real\" },\n  { id: \"BSD\", name: \"Bahamian Dollar\" },\n  { id: \"BTC\", name: \"Bitcoin\" },\n  { id: \"BTN\", name: \"Bhutanese Ngultrum\" },\n  { id: \"BWP\", name: \"Botswanan Pula\" },\n  { id: \"BYR\", name: \"Belarusian Ruble\" },\n  { id: \"BZD\", name: \"Belize Dollar\" },\n  { id: \"CAD\", name: \"Canadian Dollar\" },\n  { id: \"CDF\", name: \"Congolese Franc\" },\n  { id: \"CHF\", name: \"Swiss Franc\" },\n  { id: \"CLF\", name: \"Chilean Unit of Account (UF)\" },\n  { id: \"CLP\", name: \"Chilean Peso\" },\n  { id: \"CNY\", name: \"Chinese Yuan\" },\n  { id: \"COP\", name: \"Colombian Peso\" },\n  { id: \"CRC\", name: \"Costa Rican Colón\" },\n  { id: \"CUC\", name: \"Cuban Convertible Peso\" },\n  { id: \"CUP\", name: \"Cuban Peso\" },\n  { id: \"CVE\", name: \"Cape Verdean Escudo\" },\n  { id: \"CZK\", name: \"Czech Republic Koruna\" },\n  { id: \"DJF\", name: \"Djiboutian Franc\" },\n  { id: \"DKK\", name: \"Danish Krone\" },\n  { id: \"DOP\", name: \"Dominican Peso\" },\n  { id: \"DZD\", name: \"Algerian Dinar\" },\n  { id: \"EGP\", name: \"Egyptian Pound\" },\n  { id: \"ERN\", name: \"Eritrean Nakfa\" },\n  { id: \"ETB\", name: \"Ethiopian Birr\" },\n  { id: \"EUR\", name: \"Euro\" },\n  { id: \"FJD\", name: \"Fijian Dollar\" },\n  { id: \"FKP\", name: \"Falkland Islands Pound\" },\n  { id: \"GBP\", name: \"British Pound Sterling\" },\n  { id: \"GEL\", name: \"Georgian Lari\" },\n  { id: \"GGP\", name: \"Guernsey Pound\" },\n  { id: \"GHS\", name: \"Ghanaian Cedi\" },\n  { id: \"GIP\", name: \"Gibraltar Pound\" },\n  { id: \"GMD\", name: \"Gambian Dalasi\" },\n  { id: \"GNF\", name: \"Guinean Franc\" },\n  { id: \"GTQ\", name: \"Guatemalan Quetzal\" },\n  { id: \"GYD\", name: \"Guyanaese Dollar\" },\n  { id: \"HKD\", name: \"Hong Kong Dollar\" },\n  { id: \"HNL\", name: \"Honduran Lempira\" },\n  { id: \"HRK\", name: \"Croatian Kuna\" },\n  { id: \"HTG\", name: \"Haitian Gourde\" },\n  { id: \"HUF\", name: \"Hungarian Forint\" },\n  { id: \"IDR\", name: \"Indonesian Rupiah\" },\n  { id: \"ILS\", name: \"Israeli New Sheqel\" },\n  { id: \"IMP\", name: \"Manx pound\" },\n  { id: \"INR\", name: \"Indian Rupee\" },\n  { id: \"IQD\", name: \"Iraqi Dinar\" },\n  { id: \"IRR\", name: \"Iranian Rial\" },\n  { id: \"ISK\", name: \"Icelandic Króna\" },\n  { id: \"JEP\", name: \"Jersey Pound\" },\n  { id: \"JMD\", name: \"Jamaican Dollar\" },\n  { id: \"JOD\", name: \"Jordanian Dinar\" },\n  { id: \"JPY\", name: \"Japanese Yen\" },\n  { id: \"KES\", name: \"Kenyan Shilling\" },\n  { id: \"KGS\", name: \"Kyrgystani Som\" },\n  { id: \"KHR\", name: \"Cambodian Riel\" },\n  { id: \"KMF\", name: \"Comorian Franc\" },\n  { id: \"KPW\", name: \"North Korean Won\" },\n  { id: \"KRW\", name: \"South Korean Won\" },\n  { id: \"KWD\", name: \"Kuwaiti Dinar\" },\n  { id: \"KYD\", name: \"Cayman Islands Dollar\" },\n  { id: \"KZT\", name: \"Kazakhstani Tenge\" },\n  { id: \"LAK\", name: \"Laotian Kip\" },\n  { id: \"LBP\", name: \"Lebanese Pound\" },\n  { id: \"LKR\", name: \"Sri Lankan Rupee\" },\n  { id: \"LRD\", name: \"Liberian Dollar\" },\n  { id: \"LSL\", name: \"Lesotho Loti\" },\n  { id: \"LTL\", name: \"Lithuanian Litas\" },\n  { id: \"LVL\", name: \"Latvian Lats\" },\n  { id: \"LYD\", name: \"Libyan Dinar\" },\n  { id: \"MAD\", name: \"Moroccan Dirham\" },\n  { id: \"MDL\", name: \"Moldovan Leu\" },\n  { id: \"MGA\", name: \"Malagasy Ariary\" },\n  { id: \"MKD\", name: \"Macedonian Denar\" },\n  { id: \"MMK\", name: \"Myanma Kyat\" },\n  { id: \"MNT\", name: \"Mongolian Tugrik\" },\n  { id: \"MOP\", name: \"Macanese Pataca\" },\n  { id: \"MRO\", name: \"Mauritanian Ouguiya\" },\n  { id: \"MUR\", name: \"Mauritian Rupee\" },\n  { id: \"MVR\", name: \"Maldivian Rufiyaa\" },\n  { id: \"MWK\", name: \"Malawian Kwacha\" },\n  { id: \"MXN\", name: \"Mexican Peso\" },\n  { id: \"MYR\", name: \"Malaysian Ringgit\" },\n  { id: \"MZN\", name: \"Mozambican Metical\" },\n  { id: \"NAD\", name: \"Namibian Dollar\" },\n  { id: \"NGN\", name: \"Nigerian Naira\" },\n  { id: \"NIO\", name: \"Nicaraguan Córdoba\" },\n  { id: \"NOK\", name: \"Norwegian Krone\" },\n  { id: \"NPR\", name: \"Nepalese Rupee\" },\n  { id: \"NZD\", name: \"New Zealand Dollar\" },\n  { id: \"OMR\", name: \"Omani Rial\" },\n  { id: \"PAB\", name: \"Panamanian Balboa\" },\n  { id: \"PEN\", name: \"Peruvian Nuevo Sol\" },\n  { id: \"PGK\", name: \"Papua New Guinean Kina\" },\n  { id: \"PHP\", name: \"Philippine Peso\" },\n  { id: \"PKR\", name: \"Pakistani Rupee\" },\n  { id: \"PLN\", name: \"Polish Zloty\" },\n  { id: \"PYG\", name: \"Paraguayan Guarani\" },\n  { id: \"QAR\", name: \"Qatari Rial\" },\n  { id: \"RON\", name: \"Romanian Leu\" },\n  { id: \"RSD\", name: \"Serbian Dinar\" },\n  { id: \"RUB\", name: \"Russian Ruble\" },\n  { id: \"RWF\", name: \"Rwandan Franc\" },\n  { id: \"SAR\", name: \"Saudi Riyal\" },\n  { id: \"SBD\", name: \"Solomon Islands Dollar\" },\n  { id: \"SCR\", name: \"Seychellois Rupee\" },\n  { id: \"SDG\", name: \"Sudanese Pound\" },\n  { id: \"SEK\", name: \"Swedish Krona\" },\n  { id: \"SGD\", name: \"Singapore Dollar\" },\n  { id: \"SHP\", name: \"Saint Helena Pound\" },\n  { id: \"SLL\", name: \"Sierra Leonean Leone\" },\n  { id: \"SOS\", name: \"Somali Shilling\" },\n  { id: \"SRD\", name: \"Surinamese Dollar\" },\n  { id: \"STD\", name: \"São Tomé and Príncipe Dobra\" },\n  { id: \"SVC\", name: \"Salvadoran Colón\" },\n  { id: \"SYP\", name: \"Syrian Pound\" },\n  { id: \"SZL\", name: \"Swazi Lilangeni\" },\n  { id: \"THB\", name: \"Thai Baht\" },\n  { id: \"TJS\", name: \"Tajikistani Somoni\" },\n  { id: \"TMT\", name: \"Turkmenistani Manat\" },\n  { id: \"TND\", name: \"Tunisian Dinar\" },\n  { id: \"TOP\", name: \"Tongan Paʻanga\" },\n  { id: \"TRY\", name: \"Turkish Lira\" },\n  { id: \"TTD\", name: \"Trinidad and Tobago Dollar\" },\n  { id: \"TWD\", name: \"New Taiwan Dollar\" },\n  { id: \"TZS\", name: \"Tanzanian Shilling\" },\n  { id: \"UAH\", name: \"Ukrainian Hryvnia\" },\n  { id: \"UGX\", name: \"Ugandan Shilling\" },\n  { id: \"USD\", name: \"United States Dollar\" },\n  { id: \"UYU\", name: \"Uruguayan Peso\" },\n  { id: \"UZS\", name: \"Uzbekistan Som\" },\n  { id: \"VEF\", name: \"Venezuelan Bolívar Fuerte\" },\n  { id: \"VND\", name: \"Vietnamese Dong\" },\n  { id: \"VUV\", name: \"Vanuatu Vatu\" },\n  { id: \"WST\", name: \"Samoan Tala\" },\n  { id: \"XAF\", name: \"CFA Franc BEAC\" },\n  { id: \"XAG\", name: \"Silver (troy ounce)\" },\n  { id: \"XAU\", name: \"Gold (troy ounce)\" },\n  { id: \"XCD\", name: \"East Caribbean Dollar\" },\n  { id: \"XDR\", name: \"Special Drawing Rights\" },\n  { id: \"XOF\", name: \"CFA Franc BCEAO\" },\n  { id: \"XPF\", name: \"CFP Franc\" },\n  { id: \"YER\", name: \"Yemeni Rial\" },\n  { id: \"ZAR\", name: \"South African Rand\" },\n  { id: \"ZMK\", name: \"Zambian Kwacha (pre-2013)\" },\n  { id: \"ZMW\", name: \"Zambian Kwacha\" },\n  { id: \"ZWL\", name: \"Zimbabwean Dollar\" },\n];\n\nconst Forex = (props) => {\n  const [forex, setForex] = useState(\"1\");\n  const [forexType, setForexType] = useState([]);\n  const [filterData, setFilterData] = useState(\"\");\n  const [numericalInput, setNumericalInput] = useState(\"1\");\n  const [secondaryInput, setSecondaryInput] = useState(\"USD\");\n  const [secondaryAPIData, setSecondaryAPIData] = useState(\"1\");\n  const [result, setResult] = useState(1);\n  const [content, setContent] = useState(\"\");\n  // const [searchWord, setSearchWord] = useState(\"USD\");\n  const [extForex, setExtForex] = useState(\"\");\n\n  const forexAPI = `http://apilayer.net/api/live?access_key=b7bf0fb87af0b9ef3ff79b78a423f76c&currencies=${filterData}&source=USD&format=1`;\n  const secondaryForexAPI = `http://apilayer.net/api/live?access_key=b7bf0fb87af0b9ef3ff79b78a423f76c&currencies=${secondaryInput}&source=USD&format=1`;\n\n  const sortForex = () => {\n    const sortByName = forexList.map((chicken) => {\n      return {\n        name: chicken.name,\n      };\n    });\n    setForexType(sortByName);\n  };\n\n  useEffect(() => {\n    sortForex();\n  }, []);\n\n  const emptyArray = [];\n\n  const displayName = forexType.map((chicken) => {\n    return emptyArray.push(chicken.name);\n  });\n\n  useEffect(() => {\n    getResults();\n  }, [props.forexState]);\n\n  const getResults = () => {\n    const searchWord = props.forexSearchWord;\n    // console.log(searchWord);\n    const newFilter = Object.keys(forexList).reduce((result, key) => {\n      if (forexList[key].name.includes(searchWord)) {\n        result = forexList[key].id;\n      }\n      // props.setForexState(false);\n      return result;\n    }, \"\");\n    setFilterData(newFilter);\n    // console.log(newFilter);\n\n    setTimeout(() => {\n      makeApiCall(newFilter);\n    }, 1000);\n\n    const makeApiCall = async (input) => {\n      const url = `http://apilayer.net/api/live?access_key=b7bf0fb87af0b9ef3ff79b78a423f76c&currencies=${input}&source=USD&format=1`;\n      // console.log(url);\n      const res = await fetch(url);\n      const rawData = await res.json();\n      setForex(rawData.quotes);\n      // console.log(rawData.quotes);\n    };\n    // makeApiCall(filterData);\n  };\n  // console.log(emptyArray);\n\n  const forexArray = forex;\n\n  const handleEventChange = (event) => {\n    setNumericalInput(event.target.value);\n  };\n  // console.log(numericalInput);\n\n  const handleSecondaryValueChange = (event) => {\n    // if ((event = NaN)) {\n    //   let searchWord = \"United States Dollar\";\n    //   const newFilter = Object.keys(forexList).reduce((result, key) => {\n    //     if (forexList[key].name.includes(searchWord)) {\n    //       result = forexList[key].id;\n    //     }\n    //     return result;\n    //   }, \"\");\n    //   setSecondaryInput(newFilter);\n    //   console.log(newFilter);\n    // } else {\n    let searchWord = event;\n    console.log(searchWord);\n    const newFilter = Object.keys(forexList).reduce((result, key) => {\n      if (forexList[key].name.includes(searchWord)) {\n        result = forexList[key].id;\n      }\n      return result;\n    }, \"\");\n    setSecondaryInput(newFilter);\n    console.log(secondaryInput);\n\n    setTimeout(() => {\n      makeSecondaryApiCall(newFilter);\n    }, 1000);\n\n    const makeSecondaryApiCall = async (input) => {\n      const url = `http://apilayer.net/api/live?access_key=b7bf0fb87af0b9ef3ff79b78a423f76c&currencies=${input}&source=USD&format=1`;\n      const res = await fetch(url);\n      const rawData = await res.json();\n      setSecondaryAPIData(rawData.quotes);\n      console.log(rawData.quotes);\n    };\n  };\n  // console.log(secondaryForexAPI);\n  // makeSecondaryApiCall(secondaryInput);\n  // console.log(rawData.quotes);\n\n  const onSubmit = () => {\n    console.log(\"clicked!\");\n    console.log(Object.values(secondaryAPIData)[0]);\n    console.log(secondaryAPIData !== \"undefined\");\n    console.log(Object.values(forex)[0]);\n\n    if (secondaryAPIData !== \"undefined\") {\n      console.log(forexAPI);\n      // console.log(Object.values(secondaryAPIData)[0]);\n      setSecondaryAPIData(\"1\");\n      let num1 = parseInt(secondaryAPIData);\n      let num2 = parseInt(numericalInput);\n      let num3 = Object.values(forex)[0];\n      console.log(num3);\n      console.log(num1, num2, num3);\n      const ratio = (num3 / num1) * num2;\n      // console.log(\n      //   (Object.values(forex)[0] / Object.values(secondaryAPIData)[0]) *\n      //     numericalInput\n      // );\n      setResult(ratio);\n      let rounded = result.toFixed(2);\n      console.log(rounded);\n      // console.log(typeof Object.values(extForex)[0]);\n\n      setContent(\n        <p>\n          ${numericalInput} {secondaryInput} = ${rounded} {filterData}\n        </p>\n      );\n      //   } else {\n      //     let num1 = parseInt(secondaryAPIData);\n      //     let num2 = parseInt(numericalInput);\n      //     let num3 = Object.values(forex)[0];\n      //     const ratio = (num1 / num3) * num2;\n      //     setResult(ratio);\n      //     // console.log(typeof Object.values(secondaryAPIData)[0]);\n      //     // console.log(ratio);\n\n      //     setContent(\n      //       <p>\n      //         $ {numericalInput} {filterData} = $ {result} {secondaryInput}\n      //       </p>\n      //     );\n    }\n  };\n\n  // console.log(result);\n  // <div className=\"data\">\n  //   {Object.keys(forexArray).map((key, i) => (\n  //     <p key={i}>\n  //       {/* <span>1USD:{key}</span> */}\n  //       <span>\n  //         ${numericalInput} {secondaryInput} = ${forexArray[key]}\n  //         {filterData}\n  //       </span>\n  //     </p>\n  //   ))}\n  // </div>;\n\n  return (\n    <div>\n      <br />\n      <Button size=\"lg\" onClick={onSubmit}>\n        Submit\n      </Button>{\" \"}\n      <input\n        type=\"number\"\n        placeholder=\"Input value\"\n        onChange={handleEventChange}\n        defaultValue=\"1\"\n      ></input>\n      <br />\n      {/* <Button size=\"lg\">Swap</Button> */}\n      <br />\n      <DropdownList\n        data={emptyArray}\n        defaultValue=\"United States Dollar\"\n        onChange={handleSecondaryValueChange}\n        // onClick={makeSecondaryApiCall}\n      ></DropdownList>\n      <br />\n      <div className=\"result\">{content}</div>\n      <br />\n    </div>\n  );\n};\n\nexport default Forex;\n"]},"metadata":{},"sourceType":"module"}