{"ast":null,"code":"var _jsxFileName = \"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Crypto.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Ticker from \"react-ticker\";\nimport { DropdownList } from \"react-widgets/cjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cryptoList = [];\n\nconst Crypto = () => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [otherToken, setOtherToken] = useState(\"\"); // ForexAPI\n\n  const apiQuery = `https://api.coingecko.com/api/v3/simple/price?ids=${token}&vs_currencies=${otherToken}`;\n  const apiTicker = ``;\n\n  const makeApiCall = async () => {//   const res = await fetch(forexAPI);\n    //   const rawData = await res.json();\n    //   // console.log(rawData);\n    //   const rawDataArray = [rawData];\n    //   // console.log(rawDataArray);\n    //   const sortForex = forexList.map((chicken) => {\n    //     return {\n    //       CountryName: chicken.name,\n    //     };\n    //   });\n    //   setForexType(sortForex);\n    //   const filteredData = rawDataArray.map((duck) => {\n    //     return {\n    //       price: duck.data.rates,\n    //       unit: duck.data.unit,\n    //     };\n    //   });\n    //   setType(filteredData);\n  }; // console.log(type);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select a token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropdownList // data={cryptoToken}\n    // forex={forexList}\n    , {\n      onChange: nextValue => setQuery(nextValue)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: makeApiCall,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Crypto, \"YmZiJUrxUum7aZ7GdrBxwiK9mIc=\");\n\n_c = Crypto;\nexport default Crypto;\n\nvar _c;\n\n$RefreshReg$(_c, \"Crypto\");","map":{"version":3,"sources":["/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Crypto.js"],"names":["React","useState","useEffect","Ticker","DropdownList","cryptoList","Crypto","query","setQuery","type","setType","token","setToken","otherToken","setOtherToken","apiQuery","apiTicker","makeApiCall","nextValue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,QAA6B,mBAA7B;;AAEA,MAAMC,UAAU,GAAG,EAAnB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C,CAJmB,CAMnB;;AAEA,QAAMc,QAAQ,GAAI,qDAAoDJ,KAAM,kBAAiBE,UAAW,EAAxG;AACA,QAAMG,SAAS,GAAI,EAAnB;;AAEA,QAAMC,WAAW,GAAG,YAAY,CAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAnBD,CAXmB,CA+BnB;;;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,YAAD,CACE;AACA;AAFF;AAGE,MAAA,QAAQ,EAAGC,SAAD,IAAeV,QAAQ,CAACU,SAAD;AAHnC;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE;AAAQ,MAAA,OAAO,EAAED,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA9CD;;GAAMX,M;;KAAAA,M;AAgDN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Ticker from \"react-ticker\";\nimport { DropdownList } from \"react-widgets/cjs\";\n\nconst cryptoList = [];\n\nconst Crypto = () => {\n  const [query, setQuery] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [otherToken, setOtherToken] = useState(\"\");\n\n  // ForexAPI\n\n  const apiQuery = `https://api.coingecko.com/api/v3/simple/price?ids=${token}&vs_currencies=${otherToken}`;\n  const apiTicker = ``;\n\n  const makeApiCall = async () => {\n    //   const res = await fetch(forexAPI);\n    //   const rawData = await res.json();\n    //   // console.log(rawData);\n    //   const rawDataArray = [rawData];\n    //   // console.log(rawDataArray);\n    //   const sortForex = forexList.map((chicken) => {\n    //     return {\n    //       CountryName: chicken.name,\n    //     };\n    //   });\n    //   setForexType(sortForex);\n    //   const filteredData = rawDataArray.map((duck) => {\n    //     return {\n    //       price: duck.data.rates,\n    //       unit: duck.data.unit,\n    //     };\n    //   });\n    //   setType(filteredData);\n  };\n  // console.log(type);\n\n  return (\n    <div>\n      <br />\n      <h2>Select a token</h2>\n      <DropdownList\n        // data={cryptoToken}\n        // forex={forexList}\n        onChange={(nextValue) => setQuery(nextValue)}\n      />\n      <button onClick={makeApiCall}>Submit</button>\n      {/* <Result type={type} /> */}\n    </div>\n  );\n};\n\nexport default Crypto;\n"]},"metadata":{},"sourceType":"module"}